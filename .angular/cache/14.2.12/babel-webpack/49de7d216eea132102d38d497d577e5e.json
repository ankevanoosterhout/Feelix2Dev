{"ast":null,"code":"/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer } from '@tensorflow/tfjs-core';\nexport function gatherNdImpl(indicesData, paramsBuf, dtype, numSlices, sliceRank, sliceSize, strides, paramsShape, paramsSize) {\n  const outBuf = buffer([numSlices, sliceSize], dtype);\n\n  for (let i = 0; i < numSlices; i++) {\n    const index = [];\n    let flattenIndex = 0;\n\n    for (let j = 0; j < sliceRank; j++) {\n      const dim = indicesData[i * sliceRank + j];\n      flattenIndex += dim * strides[j];\n      index.push(dim);\n    }\n\n    if (flattenIndex < 0 || flattenIndex >= paramsSize / sliceSize) {\n      throw new Error(`Invalid indices: ${index} does not index into ${paramsShape}`);\n    }\n\n    for (let k = 0; k < sliceSize; k++) {\n      outBuf.values[i * sliceSize + k] = paramsBuf.get(...paramsBuf.indexToLoc(flattenIndex * sliceSize + k));\n    }\n  }\n\n  return outBuf;\n}","map":{"version":3,"names":["buffer","gatherNdImpl","indicesData","paramsBuf","dtype","numSlices","sliceRank","sliceSize","strides","paramsShape","paramsSize","outBuf","i","index","flattenIndex","j","dim","push","Error","k","values","get","indexToLoc"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/GatherNd_Impl.js"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer } from '@tensorflow/tfjs-core';\nexport function gatherNdImpl(indicesData, paramsBuf, dtype, numSlices, sliceRank, sliceSize, strides, paramsShape, paramsSize) {\n    const outBuf = buffer([numSlices, sliceSize], dtype);\n    for (let i = 0; i < numSlices; i++) {\n        const index = [];\n        let flattenIndex = 0;\n        for (let j = 0; j < sliceRank; j++) {\n            const dim = indicesData[i * sliceRank + j];\n            flattenIndex += dim * strides[j];\n            index.push(dim);\n        }\n        if (flattenIndex < 0 || flattenIndex >= paramsSize / sliceSize) {\n            throw new Error(`Invalid indices: ${index} does not index into ${paramsShape}`);\n        }\n        for (let k = 0; k < sliceSize; k++) {\n            outBuf.values[i * sliceSize + k] =\n                paramsBuf.get(...paramsBuf.indexToLoc(flattenIndex * sliceSize + k));\n        }\n    }\n    return outBuf;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAT,QAAuB,uBAAvB;AACA,OAAO,SAASC,YAAT,CAAsBC,WAAtB,EAAmCC,SAAnC,EAA8CC,KAA9C,EAAqDC,SAArD,EAAgEC,SAAhE,EAA2EC,SAA3E,EAAsFC,OAAtF,EAA+FC,WAA/F,EAA4GC,UAA5G,EAAwH;EAC3H,MAAMC,MAAM,GAAGX,MAAM,CAAC,CAACK,SAAD,EAAYE,SAAZ,CAAD,EAAyBH,KAAzB,CAArB;;EACA,KAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,SAApB,EAA+BO,CAAC,EAAhC,EAAoC;IAChC,MAAMC,KAAK,GAAG,EAAd;IACA,IAAIC,YAAY,GAAG,CAAnB;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,SAApB,EAA+BS,CAAC,EAAhC,EAAoC;MAChC,MAAMC,GAAG,GAAGd,WAAW,CAACU,CAAC,GAAGN,SAAJ,GAAgBS,CAAjB,CAAvB;MACAD,YAAY,IAAIE,GAAG,GAAGR,OAAO,CAACO,CAAD,CAA7B;MACAF,KAAK,CAACI,IAAN,CAAWD,GAAX;IACH;;IACD,IAAIF,YAAY,GAAG,CAAf,IAAoBA,YAAY,IAAIJ,UAAU,GAAGH,SAArD,EAAgE;MAC5D,MAAM,IAAIW,KAAJ,CAAW,oBAAmBL,KAAM,wBAAuBJ,WAAY,EAAvE,CAAN;IACH;;IACD,KAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,SAApB,EAA+BY,CAAC,EAAhC,EAAoC;MAChCR,MAAM,CAACS,MAAP,CAAcR,CAAC,GAAGL,SAAJ,GAAgBY,CAA9B,IACIhB,SAAS,CAACkB,GAAV,CAAc,GAAGlB,SAAS,CAACmB,UAAV,CAAqBR,YAAY,GAAGP,SAAf,GAA2BY,CAAhD,CAAjB,CADJ;IAEH;EACJ;;EACD,OAAOR,MAAP;AACH"},"metadata":{},"sourceType":"module"}