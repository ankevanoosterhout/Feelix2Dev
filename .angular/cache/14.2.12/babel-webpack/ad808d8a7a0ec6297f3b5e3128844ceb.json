{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { DepthwiseConv2dNativeBackpropInput } from '../kernel_names';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n\nfunction depthwiseConv2dNativeBackpropInput_(xShape, dy, filter, strides, pad, dilations = [1, 1], dimRoundingMode) {\n  let dy4D = dy;\n  let reshapedTo4D = false;\n\n  if (dy.rank === 3) {\n    reshapedTo4D = true;\n    dy4D = reshape(dy, [1, dy.shape[0], dy.shape[1], dy.shape[2]]);\n  }\n\n  const inputs = {\n    dy: dy4D,\n    filter\n  };\n  const attrs = {\n    strides,\n    pad,\n    dimRoundingMode,\n    dilations,\n    inputShape: xShape\n  };\n  const res = // tslint:disable-next-line: no-unnecessary-type-assertion\n  ENGINE.runKernel(DepthwiseConv2dNativeBackpropInput, inputs, attrs);\n\n  if (reshapedTo4D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n  }\n\n  return res;\n}\n\nexport const depthwiseConv2dNativeBackpropInput = op({\n  depthwiseConv2dNativeBackpropInput_\n});","map":{"version":3,"names":["ENGINE","DepthwiseConv2dNativeBackpropInput","op","reshape","depthwiseConv2dNativeBackpropInput_","xShape","dy","filter","strides","pad","dilations","dimRoundingMode","dy4D","reshapedTo4D","rank","shape","inputs","attrs","inputShape","res","runKernel","depthwiseConv2dNativeBackpropInput"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-core/dist/ops/depthwise_conv2d_native_backprop_input.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { DepthwiseConv2dNativeBackpropInput } from '../kernel_names';\nimport { op } from './operation';\nimport { reshape } from './reshape';\nfunction depthwiseConv2dNativeBackpropInput_(xShape, dy, filter, strides, pad, dilations = [1, 1], dimRoundingMode) {\n    let dy4D = dy;\n    let reshapedTo4D = false;\n    if (dy.rank === 3) {\n        reshapedTo4D = true;\n        dy4D = reshape(dy, [1, dy.shape[0], dy.shape[1], dy.shape[2]]);\n    }\n    const inputs = { dy: dy4D, filter };\n    const attrs = { strides, pad, dimRoundingMode, dilations, inputShape: xShape };\n    const res = \n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    ENGINE.runKernel(DepthwiseConv2dNativeBackpropInput, inputs, attrs);\n    if (reshapedTo4D) {\n        return reshape(res, [res.shape[1], res.shape[2], res.shape[3]]);\n    }\n    return res;\n}\nexport const depthwiseConv2dNativeBackpropInput = op({ depthwiseConv2dNativeBackpropInput_ });\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAT,QAAuB,WAAvB;AACA,SAASC,kCAAT,QAAmD,iBAAnD;AACA,SAASC,EAAT,QAAmB,aAAnB;AACA,SAASC,OAAT,QAAwB,WAAxB;;AACA,SAASC,mCAAT,CAA6CC,MAA7C,EAAqDC,EAArD,EAAyDC,MAAzD,EAAiEC,OAAjE,EAA0EC,GAA1E,EAA+EC,SAAS,GAAG,CAAC,CAAD,EAAI,CAAJ,CAA3F,EAAmGC,eAAnG,EAAoH;EAChH,IAAIC,IAAI,GAAGN,EAAX;EACA,IAAIO,YAAY,GAAG,KAAnB;;EACA,IAAIP,EAAE,CAACQ,IAAH,KAAY,CAAhB,EAAmB;IACfD,YAAY,GAAG,IAAf;IACAD,IAAI,GAAGT,OAAO,CAACG,EAAD,EAAK,CAAC,CAAD,EAAIA,EAAE,CAACS,KAAH,CAAS,CAAT,CAAJ,EAAiBT,EAAE,CAACS,KAAH,CAAS,CAAT,CAAjB,EAA8BT,EAAE,CAACS,KAAH,CAAS,CAAT,CAA9B,CAAL,CAAd;EACH;;EACD,MAAMC,MAAM,GAAG;IAAEV,EAAE,EAAEM,IAAN;IAAYL;EAAZ,CAAf;EACA,MAAMU,KAAK,GAAG;IAAET,OAAF;IAAWC,GAAX;IAAgBE,eAAhB;IAAiCD,SAAjC;IAA4CQ,UAAU,EAAEb;EAAxD,CAAd;EACA,MAAMc,GAAG,GACT;EACAnB,MAAM,CAACoB,SAAP,CAAiBnB,kCAAjB,EAAqDe,MAArD,EAA6DC,KAA7D,CAFA;;EAGA,IAAIJ,YAAJ,EAAkB;IACd,OAAOV,OAAO,CAACgB,GAAD,EAAM,CAACA,GAAG,CAACJ,KAAJ,CAAU,CAAV,CAAD,EAAeI,GAAG,CAACJ,KAAJ,CAAU,CAAV,CAAf,EAA6BI,GAAG,CAACJ,KAAJ,CAAU,CAAV,CAA7B,CAAN,CAAd;EACH;;EACD,OAAOI,GAAP;AACH;;AACD,OAAO,MAAME,kCAAkC,GAAGnB,EAAE,CAAC;EAAEE;AAAF,CAAD,CAA7C"},"metadata":{},"sourceType":"module"}