{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { MaxPool3DGrad } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { checkPadOnDimRoundingMode } from './conv_util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Computes the backprop of a 3d max pool.\n *\n * @param dy The dy error, of rank 5 of shape\n *     [batchSize, depth, height, width, channels].\n * assumed.\n * @param input The original input image, of rank 5 or rank 4 of shape\n *     [batchSize, depth, height, width, channels].\n * @param output The original output image, of rank 5 of shape\n *     [batchSize, outDepth, outHeight, outWidth, channels].\n * @param filterSize The filter size:\n *     `[filterDepth, filterHeight, filterWidth]`.\n *     `filterSize` is a single number,\n *     then `filterDepth == filterHeight == filterWidth`.\n * @param strides The strides of the pooling:\n *     `[strideDepth, strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param pad A string from: 'same', 'valid'. The type of padding algorithm\n *     used in the forward prop of the op.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\n\nfunction maxPool3dGrad_(dy, input, output, filterSize, strides, pad, dimRoundingMode) {\n  const $dy = convertToTensor(dy, 'dy', 'maxPool3dGrad');\n  const $input = convertToTensor(input, 'input', 'maxPool3dGrad');\n  const $output = convertToTensor(output, 'output', 'maxPool3dGrad');\n  let dy5D = $dy;\n  let input5D = $input;\n  let output5D = $output;\n  let reshapedTo5D = false;\n\n  if ($input.rank === 4) {\n    reshapedTo5D = true;\n    dy5D = reshape($dy, [1, $dy.shape[0], $dy.shape[1], $dy.shape[2], $dy.shape[3]]);\n    input5D = reshape($input, [1, $input.shape[0], $input.shape[1], $input.shape[2], $input.shape[3]]);\n    output5D = reshape($output, [1, $output.shape[0], $output.shape[1], $output.shape[2], $output.shape[3]]);\n  }\n\n  util.assert(dy5D.rank === 5, () => `Error in maxPool3dGrad: dy must be rank 5 but got rank ` + `${dy5D.rank}.`);\n  util.assert(input5D.rank === 5, () => `Error in maxPool3dGrad: input must be rank 5 but got rank ` + `${input5D.rank}.`);\n  util.assert(output5D.rank === 5, () => `Error in maxPool3dGrad: output must be rank 5 but got rank ` + `${output5D.rank}.`);\n  checkPadOnDimRoundingMode('maxPool3dGrad', pad, dimRoundingMode);\n  const inputs = {\n    dy: dy5D,\n    input: input5D,\n    output: output5D\n  };\n  const attrs = {\n    filterSize,\n    strides,\n    pad,\n    dimRoundingMode\n  }; // tslint:disable-next-line: no-unnecessary-type-assertion\n\n  const res = ENGINE.runKernel(MaxPool3DGrad, inputs, attrs);\n\n  if (reshapedTo5D) {\n    return reshape(res, [res.shape[1], res.shape[2], res.shape[3], res.shape[4]]);\n  }\n\n  return res;\n}\n\nexport const maxPool3dGrad = op({\n  maxPool3dGrad_\n});","map":{"version":3,"names":["ENGINE","MaxPool3DGrad","convertToTensor","util","checkPadOnDimRoundingMode","op","reshape","maxPool3dGrad_","dy","input","output","filterSize","strides","pad","dimRoundingMode","$dy","$input","$output","dy5D","input5D","output5D","reshapedTo5D","rank","shape","assert","inputs","attrs","res","runKernel","maxPool3dGrad"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-core/dist/ops/max_pool_3d_grad.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { MaxPool3DGrad } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport * as util from '../util';\nimport { checkPadOnDimRoundingMode } from './conv_util';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n/**\n * Computes the backprop of a 3d max pool.\n *\n * @param dy The dy error, of rank 5 of shape\n *     [batchSize, depth, height, width, channels].\n * assumed.\n * @param input The original input image, of rank 5 or rank 4 of shape\n *     [batchSize, depth, height, width, channels].\n * @param output The original output image, of rank 5 of shape\n *     [batchSize, outDepth, outHeight, outWidth, channels].\n * @param filterSize The filter size:\n *     `[filterDepth, filterHeight, filterWidth]`.\n *     `filterSize` is a single number,\n *     then `filterDepth == filterHeight == filterWidth`.\n * @param strides The strides of the pooling:\n *     `[strideDepth, strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param pad A string from: 'same', 'valid'. The type of padding algorithm\n *     used in the forward prop of the op.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. If none is\n *     provided, it will default to truncate.\n */\nfunction maxPool3dGrad_(dy, input, output, filterSize, strides, pad, dimRoundingMode) {\n    const $dy = convertToTensor(dy, 'dy', 'maxPool3dGrad');\n    const $input = convertToTensor(input, 'input', 'maxPool3dGrad');\n    const $output = convertToTensor(output, 'output', 'maxPool3dGrad');\n    let dy5D = $dy;\n    let input5D = $input;\n    let output5D = $output;\n    let reshapedTo5D = false;\n    if ($input.rank === 4) {\n        reshapedTo5D = true;\n        dy5D = reshape($dy, [1, $dy.shape[0], $dy.shape[1], $dy.shape[2], $dy.shape[3]]);\n        input5D = reshape($input, [\n            1, $input.shape[0], $input.shape[1], $input.shape[2], $input.shape[3]\n        ]);\n        output5D = reshape($output, [\n            1, $output.shape[0], $output.shape[1], $output.shape[2], $output.shape[3]\n        ]);\n    }\n    util.assert(dy5D.rank === 5, () => `Error in maxPool3dGrad: dy must be rank 5 but got rank ` +\n        `${dy5D.rank}.`);\n    util.assert(input5D.rank === 5, () => `Error in maxPool3dGrad: input must be rank 5 but got rank ` +\n        `${input5D.rank}.`);\n    util.assert(output5D.rank === 5, () => `Error in maxPool3dGrad: output must be rank 5 but got rank ` +\n        `${output5D.rank}.`);\n    checkPadOnDimRoundingMode('maxPool3dGrad', pad, dimRoundingMode);\n    const inputs = { dy: dy5D, input: input5D, output: output5D };\n    const attrs = { filterSize, strides, pad, dimRoundingMode };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    const res = ENGINE.runKernel(MaxPool3DGrad, inputs, attrs);\n    if (reshapedTo5D) {\n        return reshape(res, [res.shape[1], res.shape[2], res.shape[3], res.shape[4]]);\n    }\n    return res;\n}\nexport const maxPool3dGrad = op({ maxPool3dGrad_ });\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}