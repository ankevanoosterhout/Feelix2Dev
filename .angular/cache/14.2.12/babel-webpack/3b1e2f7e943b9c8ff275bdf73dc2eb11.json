{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { isPromise } from './util_base'; // Expects flags from URL in the format ?tfjsflags=FLAG1:1,FLAG2:true.\n\nconst TENSORFLOWJS_FLAGS_PREFIX = 'tfjsflags';\n/**\n * The environment contains evaluated flags as well as the registered platform.\n * This is always used as a global singleton and can be retrieved with\n * `tf.env()`.\n *\n * @doc {heading: 'Environment'}\n */\n\nexport class Environment {\n  // tslint:disable-next-line: no-any\n  constructor(global) {\n    this.global = global;\n    this.flags = {};\n    this.flagRegistry = {};\n    this.urlFlags = {}; // Jasmine spies on this in 'environment_test.ts'\n\n    this.getQueryParams = getQueryParams;\n    this.populateURLFlags();\n  }\n\n  setPlatform(platformName, platform) {\n    if (this.platform != null) {\n      if (!(env().getBool('IS_TEST') || env().getBool('PROD'))) {\n        console.warn(`Platform ${this.platformName} has already been set. ` + `Overwriting the platform with ${platformName}.`);\n      }\n    }\n\n    this.platformName = platformName;\n    this.platform = platform;\n  }\n\n  registerFlag(flagName, evaluationFn, setHook) {\n    this.flagRegistry[flagName] = {\n      evaluationFn,\n      setHook\n    }; // Override the flag value from the URL. This has to happen here because\n    // the environment is initialized before flags get registered.\n\n    if (this.urlFlags[flagName] != null) {\n      const flagValue = this.urlFlags[flagName];\n\n      if (!(env().getBool('IS_TEST') || env().getBool('PROD'))) {\n        console.warn(`Setting feature override from URL ${flagName}: ${flagValue}.`);\n      }\n\n      this.set(flagName, flagValue);\n    }\n  }\n\n  getAsync(flagName) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (flagName in _this.flags) {\n        return _this.flags[flagName];\n      }\n\n      _this.flags[flagName] = yield _this.evaluateFlag(flagName);\n      return _this.flags[flagName];\n    })();\n  }\n\n  get(flagName) {\n    if (flagName in this.flags) {\n      return this.flags[flagName];\n    }\n\n    const flagValue = this.evaluateFlag(flagName);\n\n    if (isPromise(flagValue)) {\n      throw new Error(`Flag ${flagName} cannot be synchronously evaluated. ` + `Please use getAsync() instead.`);\n    }\n\n    this.flags[flagName] = flagValue;\n    return this.flags[flagName];\n  }\n\n  getNumber(flagName) {\n    return this.get(flagName);\n  }\n\n  getBool(flagName) {\n    return this.get(flagName);\n  }\n\n  getFlags() {\n    return this.flags;\n  } // For backwards compatibility.\n\n\n  get features() {\n    return this.flags;\n  }\n\n  set(flagName, value) {\n    if (this.flagRegistry[flagName] == null) {\n      throw new Error(`Cannot set flag ${flagName} as it has not been registered.`);\n    }\n\n    this.flags[flagName] = value;\n\n    if (this.flagRegistry[flagName].setHook != null) {\n      this.flagRegistry[flagName].setHook(value);\n    }\n  }\n\n  evaluateFlag(flagName) {\n    if (this.flagRegistry[flagName] == null) {\n      throw new Error(`Cannot evaluate flag '${flagName}': no evaluation function found.`);\n    }\n\n    return this.flagRegistry[flagName].evaluationFn();\n  }\n\n  setFlags(flags) {\n    this.flags = Object.assign({}, flags);\n  }\n\n  reset() {\n    this.flags = {};\n    this.urlFlags = {};\n    this.populateURLFlags();\n  }\n\n  populateURLFlags() {\n    if (typeof this.global === 'undefined' || typeof this.global.location === 'undefined' || typeof this.global.location.search === 'undefined') {\n      return;\n    }\n\n    const urlParams = this.getQueryParams(this.global.location.search);\n\n    if (TENSORFLOWJS_FLAGS_PREFIX in urlParams) {\n      const keyValues = urlParams[TENSORFLOWJS_FLAGS_PREFIX].split(',');\n      keyValues.forEach(keyValue => {\n        const [key, value] = keyValue.split(':');\n        this.urlFlags[key] = parseValue(key, value);\n      });\n    }\n  }\n\n}\nexport function getQueryParams(queryString) {\n  const params = {};\n  queryString.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g, (s, ...t) => {\n    decodeParam(params, t[0], t[1]);\n    return t.join('=');\n  });\n  return params;\n}\n\nfunction decodeParam(params, name, value) {\n  params[decodeURIComponent(name)] = decodeURIComponent(value || '');\n}\n\nfunction parseValue(flagName, value) {\n  value = value.toLowerCase();\n\n  if (value === 'true' || value === 'false') {\n    return value === 'true';\n  } else if (`${+value}` === value) {\n    return +value;\n  }\n\n  throw new Error(`Could not parse value flag value ${value} for flag ${flagName}.`);\n}\n/**\n * Returns the current environment (a global singleton).\n *\n * The environment object contains the evaluated feature values as well as the\n * active platform.\n *\n * @doc {heading: 'Environment'}\n */\n\n\nexport function env() {\n  return ENV;\n}\nexport let ENV = null;\nexport function setEnvironmentGlobal(environment) {\n  ENV = environment;\n}","map":{"version":3,"names":["isPromise","TENSORFLOWJS_FLAGS_PREFIX","Environment","constructor","global","flags","flagRegistry","urlFlags","getQueryParams","populateURLFlags","setPlatform","platformName","platform","env","getBool","console","warn","registerFlag","flagName","evaluationFn","setHook","flagValue","set","getAsync","evaluateFlag","get","Error","getNumber","getFlags","features","value","setFlags","Object","assign","reset","location","search","urlParams","keyValues","split","forEach","keyValue","key","parseValue","queryString","params","replace","s","t","decodeParam","join","name","decodeURIComponent","toLowerCase","ENV","setEnvironmentGlobal","environment"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-core/dist/environment.js"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { isPromise } from './util_base';\n// Expects flags from URL in the format ?tfjsflags=FLAG1:1,FLAG2:true.\nconst TENSORFLOWJS_FLAGS_PREFIX = 'tfjsflags';\n/**\n * The environment contains evaluated flags as well as the registered platform.\n * This is always used as a global singleton and can be retrieved with\n * `tf.env()`.\n *\n * @doc {heading: 'Environment'}\n */\nexport class Environment {\n    // tslint:disable-next-line: no-any\n    constructor(global) {\n        this.global = global;\n        this.flags = {};\n        this.flagRegistry = {};\n        this.urlFlags = {};\n        // Jasmine spies on this in 'environment_test.ts'\n        this.getQueryParams = getQueryParams;\n        this.populateURLFlags();\n    }\n    setPlatform(platformName, platform) {\n        if (this.platform != null) {\n            if (!(env().getBool('IS_TEST') || env().getBool('PROD'))) {\n                console.warn(`Platform ${this.platformName} has already been set. ` +\n                    `Overwriting the platform with ${platformName}.`);\n            }\n        }\n        this.platformName = platformName;\n        this.platform = platform;\n    }\n    registerFlag(flagName, evaluationFn, setHook) {\n        this.flagRegistry[flagName] = { evaluationFn, setHook };\n        // Override the flag value from the URL. This has to happen here because\n        // the environment is initialized before flags get registered.\n        if (this.urlFlags[flagName] != null) {\n            const flagValue = this.urlFlags[flagName];\n            if (!(env().getBool('IS_TEST') || env().getBool('PROD'))) {\n                console.warn(`Setting feature override from URL ${flagName}: ${flagValue}.`);\n            }\n            this.set(flagName, flagValue);\n        }\n    }\n    async getAsync(flagName) {\n        if (flagName in this.flags) {\n            return this.flags[flagName];\n        }\n        this.flags[flagName] = await this.evaluateFlag(flagName);\n        return this.flags[flagName];\n    }\n    get(flagName) {\n        if (flagName in this.flags) {\n            return this.flags[flagName];\n        }\n        const flagValue = this.evaluateFlag(flagName);\n        if (isPromise(flagValue)) {\n            throw new Error(`Flag ${flagName} cannot be synchronously evaluated. ` +\n                `Please use getAsync() instead.`);\n        }\n        this.flags[flagName] = flagValue;\n        return this.flags[flagName];\n    }\n    getNumber(flagName) {\n        return this.get(flagName);\n    }\n    getBool(flagName) {\n        return this.get(flagName);\n    }\n    getFlags() {\n        return this.flags;\n    }\n    // For backwards compatibility.\n    get features() {\n        return this.flags;\n    }\n    set(flagName, value) {\n        if (this.flagRegistry[flagName] == null) {\n            throw new Error(`Cannot set flag ${flagName} as it has not been registered.`);\n        }\n        this.flags[flagName] = value;\n        if (this.flagRegistry[flagName].setHook != null) {\n            this.flagRegistry[flagName].setHook(value);\n        }\n    }\n    evaluateFlag(flagName) {\n        if (this.flagRegistry[flagName] == null) {\n            throw new Error(`Cannot evaluate flag '${flagName}': no evaluation function found.`);\n        }\n        return this.flagRegistry[flagName].evaluationFn();\n    }\n    setFlags(flags) {\n        this.flags = Object.assign({}, flags);\n    }\n    reset() {\n        this.flags = {};\n        this.urlFlags = {};\n        this.populateURLFlags();\n    }\n    populateURLFlags() {\n        if (typeof this.global === 'undefined' ||\n            typeof this.global.location === 'undefined' ||\n            typeof this.global.location.search === 'undefined') {\n            return;\n        }\n        const urlParams = this.getQueryParams(this.global.location.search);\n        if (TENSORFLOWJS_FLAGS_PREFIX in urlParams) {\n            const keyValues = urlParams[TENSORFLOWJS_FLAGS_PREFIX].split(',');\n            keyValues.forEach(keyValue => {\n                const [key, value] = keyValue.split(':');\n                this.urlFlags[key] = parseValue(key, value);\n            });\n        }\n    }\n}\nexport function getQueryParams(queryString) {\n    const params = {};\n    queryString.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g, (s, ...t) => {\n        decodeParam(params, t[0], t[1]);\n        return t.join('=');\n    });\n    return params;\n}\nfunction decodeParam(params, name, value) {\n    params[decodeURIComponent(name)] = decodeURIComponent(value || '');\n}\nfunction parseValue(flagName, value) {\n    value = value.toLowerCase();\n    if (value === 'true' || value === 'false') {\n        return value === 'true';\n    }\n    else if (`${+value}` === value) {\n        return +value;\n    }\n    throw new Error(`Could not parse value flag value ${value} for flag ${flagName}.`);\n}\n/**\n * Returns the current environment (a global singleton).\n *\n * The environment object contains the evaluated feature values as well as the\n * active platform.\n *\n * @doc {heading: 'Environment'}\n */\nexport function env() {\n    return ENV;\n}\nexport let ENV = null;\nexport function setEnvironmentGlobal(environment) {\n    ENV = environment;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}