{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, SpaceToBatchND, util } from '@tensorflow/tfjs-core';\nimport { padV2 } from './PadV2';\nimport { reshape } from './Reshape';\nimport { transpose } from './Transpose';\nexport const spaceToBatchND = args => {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x\n  } = inputs;\n  const {\n    blockShape,\n    paddings\n  } = attrs;\n  util.assert(x.shape.length <= 4, () => 'spaceToBatchND for rank > 4 with a WebGL backend not ' + 'implemented yet');\n  const prod = blockShape.reduce((a, b) => a * b);\n  const completePaddings = [[0, 0]];\n  completePaddings.push(...paddings);\n\n  for (let i = 1 + blockShape.length; i < x.shape.length; ++i) {\n    completePaddings.push([0, 0]);\n  }\n\n  const toDispose = [];\n  const paddedX = padV2({\n    inputs: {\n      x\n    },\n    backend,\n    attrs: {\n      paddings: completePaddings,\n      constantValue: 0\n    }\n  });\n  const reshapedPaddedShape = backend_util.getReshaped(paddedX.shape, blockShape, prod, false);\n  const permutedReshapedPaddedPermutation = backend_util.getPermuted(reshapedPaddedShape.length, blockShape.length, false);\n  const flattenShape = backend_util.getReshapedPermuted(paddedX.shape, blockShape, prod, false);\n  const reshapedPaddedX = reshape({\n    inputs: {\n      x: paddedX\n    },\n    backend,\n    attrs: {\n      shape: reshapedPaddedShape\n    }\n  });\n  const paddedXT = transpose({\n    inputs: {\n      x: reshapedPaddedX\n    },\n    backend,\n    attrs: {\n      perm: permutedReshapedPaddedPermutation\n    }\n  });\n  const result = reshape({\n    inputs: {\n      x: paddedXT\n    },\n    backend,\n    attrs: {\n      shape: flattenShape\n    }\n  });\n  toDispose.push(paddedX);\n  toDispose.push(reshapedPaddedX);\n  toDispose.push(paddedXT);\n  toDispose.forEach(t => backend.disposeIntermediateTensorInfo(t));\n  return result;\n};\nexport const spaceToBatchNDConfig = {\n  kernelName: SpaceToBatchND,\n  backendName: 'webgl',\n  kernelFunc: spaceToBatchND\n};","map":{"version":3,"names":["backend_util","SpaceToBatchND","util","padV2","reshape","transpose","spaceToBatchND","args","inputs","backend","attrs","x","blockShape","paddings","assert","shape","length","prod","reduce","a","b","completePaddings","push","i","toDispose","paddedX","constantValue","reshapedPaddedShape","getReshaped","permutedReshapedPaddedPermutation","getPermuted","flattenShape","getReshapedPermuted","reshapedPaddedX","paddedXT","perm","result","forEach","t","disposeIntermediateTensorInfo","spaceToBatchNDConfig","kernelName","backendName","kernelFunc"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/SpaceToBatchND.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, SpaceToBatchND, util } from '@tensorflow/tfjs-core';\nimport { padV2 } from './PadV2';\nimport { reshape } from './Reshape';\nimport { transpose } from './Transpose';\nexport const spaceToBatchND = (args) => {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { blockShape, paddings } = attrs;\n    util.assert(x.shape.length <= 4, () => 'spaceToBatchND for rank > 4 with a WebGL backend not ' +\n        'implemented yet');\n    const prod = blockShape.reduce((a, b) => a * b);\n    const completePaddings = [[0, 0]];\n    completePaddings.push(...paddings);\n    for (let i = 1 + blockShape.length; i < x.shape.length; ++i) {\n        completePaddings.push([0, 0]);\n    }\n    const toDispose = [];\n    const paddedX = padV2({\n        inputs: { x },\n        backend,\n        attrs: { paddings: completePaddings, constantValue: 0 }\n    });\n    const reshapedPaddedShape = backend_util.getReshaped(paddedX.shape, blockShape, prod, false);\n    const permutedReshapedPaddedPermutation = backend_util.getPermuted(reshapedPaddedShape.length, blockShape.length, false);\n    const flattenShape = backend_util.getReshapedPermuted(paddedX.shape, blockShape, prod, false);\n    const reshapedPaddedX = reshape({ inputs: { x: paddedX }, backend, attrs: { shape: reshapedPaddedShape } });\n    const paddedXT = transpose({\n        inputs: { x: reshapedPaddedX },\n        backend,\n        attrs: { perm: permutedReshapedPaddedPermutation }\n    });\n    const result = reshape({ inputs: { x: paddedXT }, backend, attrs: { shape: flattenShape } });\n    toDispose.push(paddedX);\n    toDispose.push(reshapedPaddedX);\n    toDispose.push(paddedXT);\n    toDispose.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return result;\n};\nexport const spaceToBatchNDConfig = {\n    kernelName: SpaceToBatchND,\n    backendName: 'webgl',\n    kernelFunc: spaceToBatchND\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}