{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, GatherNd, util } from '@tensorflow/tfjs-core';\nimport { GatherNDProgram } from '../gather_nd_gpu';\nimport { gatherNdImplCPU } from '../kernel_utils/shared';\nimport { reshape } from './Reshape';\nexport function gatherNd(args) {\n  const {\n    inputs,\n    backend\n  } = args;\n  const {\n    params,\n    indices\n  } = inputs;\n  const indicesShape = indices.shape;\n  const sliceRank = indicesShape[indicesShape.length - 1];\n  const paramsSize = util.sizeFromShape(params.shape);\n  const [resultShape, numSlices, sliceSize, strides] = backend_util.prepareAndValidate(params, indices);\n  const flattenIndices = reshape({\n    inputs: {\n      x: indices\n    },\n    backend,\n    attrs: {\n      shape: [numSlices, sliceRank]\n    }\n  });\n  const flattenX = reshape({\n    inputs: {\n      x: params\n    },\n    backend,\n    attrs: {\n      shape: [util.sizeFromShape(params.shape) / sliceSize, sliceSize]\n    }\n  });\n\n  if (backend.shouldExecuteOnCPU([params, indices]) || params.dtype === 'string') {\n    const indicesData = backend.readSync(indices.dataId);\n    const paramsBuf = backend.bufferSync(params);\n    const outValue = gatherNdImplCPU(indicesData, paramsBuf, params.dtype, numSlices, sliceRank, sliceSize, strides, params.shape, paramsSize);\n    return backend.makeTensorInfo(resultShape, params.dtype, outValue.values);\n  }\n\n  const program = new GatherNDProgram(sliceRank, strides, [numSlices, sliceSize], params.shape);\n  const res = backend.runWebGLProgram(program, [flattenX, flattenIndices], flattenX.dtype);\n  const reshaped = reshape({\n    inputs: {\n      x: res\n    },\n    backend,\n    attrs: {\n      shape: resultShape\n    }\n  });\n  backend.disposeIntermediateTensorInfo(flattenIndices);\n  backend.disposeIntermediateTensorInfo(flattenX);\n  backend.disposeIntermediateTensorInfo(res);\n  return reshaped;\n}\nexport const gatherNdConfig = {\n  kernelName: GatherNd,\n  backendName: 'webgl',\n  kernelFunc: gatherNd\n};","map":{"version":3,"names":["backend_util","GatherNd","util","GatherNDProgram","gatherNdImplCPU","reshape","gatherNd","args","inputs","backend","params","indices","indicesShape","shape","sliceRank","length","paramsSize","sizeFromShape","resultShape","numSlices","sliceSize","strides","prepareAndValidate","flattenIndices","x","attrs","flattenX","shouldExecuteOnCPU","dtype","indicesData","readSync","dataId","paramsBuf","bufferSync","outValue","makeTensorInfo","values","program","res","runWebGLProgram","reshaped","disposeIntermediateTensorInfo","gatherNdConfig","kernelName","backendName","kernelFunc"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/GatherNd.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, GatherNd, util } from '@tensorflow/tfjs-core';\nimport { GatherNDProgram } from '../gather_nd_gpu';\nimport { gatherNdImplCPU } from '../kernel_utils/shared';\nimport { reshape } from './Reshape';\nexport function gatherNd(args) {\n    const { inputs, backend } = args;\n    const { params, indices } = inputs;\n    const indicesShape = indices.shape;\n    const sliceRank = indicesShape[indicesShape.length - 1];\n    const paramsSize = util.sizeFromShape(params.shape);\n    const [resultShape, numSlices, sliceSize, strides] = backend_util.prepareAndValidate(params, indices);\n    const flattenIndices = reshape({ inputs: { x: indices }, backend, attrs: { shape: [numSlices, sliceRank] } });\n    const flattenX = reshape({\n        inputs: { x: params },\n        backend,\n        attrs: { shape: [(util.sizeFromShape(params.shape) / sliceSize), sliceSize] }\n    });\n    if (backend.shouldExecuteOnCPU([params, indices]) ||\n        params.dtype === 'string') {\n        const indicesData = backend.readSync(indices.dataId);\n        const paramsBuf = backend.bufferSync(params);\n        const outValue = gatherNdImplCPU(indicesData, paramsBuf, params.dtype, numSlices, sliceRank, sliceSize, strides, params.shape, paramsSize);\n        return backend.makeTensorInfo(resultShape, params.dtype, outValue.values);\n    }\n    const program = new GatherNDProgram(sliceRank, strides, [numSlices, sliceSize], params.shape);\n    const res = backend.runWebGLProgram(program, [flattenX, flattenIndices], flattenX.dtype);\n    const reshaped = reshape({ inputs: { x: res }, backend, attrs: { shape: resultShape } });\n    backend.disposeIntermediateTensorInfo(flattenIndices);\n    backend.disposeIntermediateTensorInfo(flattenX);\n    backend.disposeIntermediateTensorInfo(res);\n    return reshaped;\n}\nexport const gatherNdConfig = {\n    kernelName: GatherNd,\n    backendName: 'webgl',\n    kernelFunc: gatherNd\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}