{"ast":null,"code":"/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class ArgMinMaxProgram {\n  constructor(reduceInfo, op, firstPass) {\n    this.variableNames = ['A'];\n    const {\n      windowSize,\n      batchSize,\n      outSize\n    } = reduceInfo;\n\n    if (!firstPass) {\n      this.variableNames.push('bestIndicesA');\n    }\n\n    this.outputShape = [batchSize, outSize];\n    const compOp = op === 'max' ? '>' : '<';\n    const indexSnippet = firstPass ? 'inOffset + i;' : 'round(getBestIndicesA(batch, inOffset + i));';\n    this.userCode = `\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${windowSize};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${windowSize}; i++) {\n          int inIdx = ${indexSnippet};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${compOp} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `;\n  }\n\n}","map":{"version":3,"names":["ArgMinMaxProgram","constructor","reduceInfo","op","firstPass","variableNames","windowSize","batchSize","outSize","push","outputShape","compOp","indexSnippet","userCode"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-webgl/dist/argminmax_gpu.js"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class ArgMinMaxProgram {\n    constructor(reduceInfo, op, firstPass) {\n        this.variableNames = ['A'];\n        const { windowSize, batchSize, outSize } = reduceInfo;\n        if (!firstPass) {\n            this.variableNames.push('bestIndicesA');\n        }\n        this.outputShape = [batchSize, outSize];\n        const compOp = (op === 'max') ? '>' : '<';\n        const indexSnippet = firstPass ?\n            'inOffset + i;' :\n            'round(getBestIndicesA(batch, inOffset + i));';\n        this.userCode = `\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${windowSize};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${windowSize}; i++) {\n          int inIdx = ${indexSnippet};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${compOp} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `;\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,gBAAN,CAAuB;EAC1BC,WAAW,CAACC,UAAD,EAAaC,EAAb,EAAiBC,SAAjB,EAA4B;IACnC,KAAKC,aAAL,GAAqB,CAAC,GAAD,CAArB;IACA,MAAM;MAAEC,UAAF;MAAcC,SAAd;MAAyBC;IAAzB,IAAqCN,UAA3C;;IACA,IAAI,CAACE,SAAL,EAAgB;MACZ,KAAKC,aAAL,CAAmBI,IAAnB,CAAwB,cAAxB;IACH;;IACD,KAAKC,WAAL,GAAmB,CAACH,SAAD,EAAYC,OAAZ,CAAnB;IACA,MAAMG,MAAM,GAAIR,EAAE,KAAK,KAAR,GAAiB,GAAjB,GAAuB,GAAtC;IACA,MAAMS,YAAY,GAAGR,SAAS,GAC1B,eAD0B,GAE1B,8CAFJ;IAGA,KAAKS,QAAL,GAAiB;AACzB;AACA;AACA;AACA;AACA,kCAAkCP,UAAW;AAC7C;AACA;AACA;AACA;AACA,8BAA8BA,UAAW;AACzC,wBAAwBM,YAAa;AACrC;AACA,0BAA0BD,MAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,KApBQ;EAqBH;;AAjCyB"},"metadata":{},"sourceType":"module"}