{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport class SlicePackedProgram {\n  constructor(destSize) {\n    this.variableNames = ['source'];\n    this.packedInputs = true;\n    this.packedOutput = true;\n    this.outputShape = destSize;\n    this.rank = destSize.length;\n    this.customUniforms = [{\n      name: 'start',\n      arrayIndex: this.rank,\n      type: 'int'\n    }];\n    const dtype = getCoordsDataType(this.rank);\n    const coords = getChannels('coords', this.rank);\n    const sourceLoc = getChannels('sourceLoc', this.rank);\n    const innerDims = this.rank === 1 ? 'sourceLoc' : `vec2(${sourceLoc.slice(-2).join()})`;\n    const getChannel = `getChannel(getSource(${sourceLoc.join()}), ${innerDims})`;\n    const upperRow = `\n      result.x = ${getChannel};\n      if (++${coords[this.rank - 1]} < ${destSize[this.rank - 1]}) {\n        ++${sourceLoc[this.rank - 1]};\n        result.y = ${getChannel};\n        --${sourceLoc[this.rank - 1]};\n      }\n    `;\n    const lowerRow = this.rank === 1 ? '' : `\n      --${coords[this.rank - 1]};\n      if (++${coords[this.rank - 2]} < ${destSize[this.rank - 2]}) {\n        ++${sourceLoc[this.rank - 2]};\n        result.z = ${getChannel};\n        if (++${coords[this.rank - 1]} < ${destSize[this.rank - 1]}) {\n          ++${sourceLoc[this.rank - 1]};\n          result.w = ${getChannel};\n        }\n      }\n    `;\n    const sourceLocSetup = this.rank <= 4 ? `sourceLoc = coords +\n            ${dtype}(${destSize.map((_, i) => `start[${i}]`).join()});` : destSize.map((_, i) => `${sourceLoc[i]} = ${coords[i]} + start[${i}];`).join('\\n');\n    this.userCode = `\n      void main() {\n        ${dtype} coords = getOutputCoords();\n        ${dtype} sourceLoc;\n        ${sourceLocSetup}\n        vec4 result = vec4(0.);\n        ${upperRow}\n        ${lowerRow}\n        setOutput(result);\n      }\n    `;\n  }\n\n}","map":{"version":3,"names":["getChannels","getCoordsDataType","SlicePackedProgram","constructor","destSize","variableNames","packedInputs","packedOutput","outputShape","rank","length","customUniforms","name","arrayIndex","type","dtype","coords","sourceLoc","innerDims","slice","join","getChannel","upperRow","lowerRow","sourceLocSetup","map","_","i","userCode"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-webgl/dist/slice_packed_gpu.js"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport class SlicePackedProgram {\n    constructor(destSize) {\n        this.variableNames = ['source'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = destSize;\n        this.rank = destSize.length;\n        this.customUniforms = [{ name: 'start', arrayIndex: this.rank, type: 'int' }];\n        const dtype = getCoordsDataType(this.rank);\n        const coords = getChannels('coords', this.rank);\n        const sourceLoc = getChannels('sourceLoc', this.rank);\n        const innerDims = this.rank === 1 ? 'sourceLoc' : `vec2(${sourceLoc.slice(-2).join()})`;\n        const getChannel = `getChannel(getSource(${sourceLoc.join()}), ${innerDims})`;\n        const upperRow = `\n      result.x = ${getChannel};\n      if (++${coords[this.rank - 1]} < ${destSize[this.rank - 1]}) {\n        ++${sourceLoc[this.rank - 1]};\n        result.y = ${getChannel};\n        --${sourceLoc[this.rank - 1]};\n      }\n    `;\n        const lowerRow = this.rank === 1 ? '' : `\n      --${coords[this.rank - 1]};\n      if (++${coords[this.rank - 2]} < ${destSize[this.rank - 2]}) {\n        ++${sourceLoc[this.rank - 2]};\n        result.z = ${getChannel};\n        if (++${coords[this.rank - 1]} < ${destSize[this.rank - 1]}) {\n          ++${sourceLoc[this.rank - 1]};\n          result.w = ${getChannel};\n        }\n      }\n    `;\n        const sourceLocSetup = this.rank <= 4 ?\n            `sourceLoc = coords +\n            ${dtype}(${destSize.map((_, i) => `start[${i}]`).join()});` :\n            destSize.map((_, i) => `${sourceLoc[i]} = ${coords[i]} + start[${i}];`)\n                .join('\\n');\n        this.userCode = `\n      void main() {\n        ${dtype} coords = getOutputCoords();\n        ${dtype} sourceLoc;\n        ${sourceLocSetup}\n        vec4 result = vec4(0.);\n        ${upperRow}\n        ${lowerRow}\n        setOutput(result);\n      }\n    `;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}