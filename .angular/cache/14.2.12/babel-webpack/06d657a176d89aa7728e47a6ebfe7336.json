{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { useShapeUniforms } from './gpgpu_math';\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport class PackProgram {\n  constructor(outputShape) {\n    this.variableNames = ['A'];\n    this.packedInputs = false;\n    this.packedOutput = true; // Only input / output 3D tensors.\n\n    this.outputShape = outputShape;\n    this.rank = outputShape.length;\n    this.enableShapeUniforms = useShapeUniforms(this.outputShape.length);\n\n    if (this.rank === 0) {\n      this.userCode = `\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      `;\n    } else {\n      const channels = getChannels('rc', this.rank);\n      const dtype = getCoordsDataType(this.rank);\n      const outOfBoundsCondition = this.getOutOfBoundsCondition(channels);\n      const setup = this.getSetup(channels);\n      const output = this.getOutput(channels);\n      this.userCode = `\n        void main() {\n          ${dtype} rc = getOutputCoords();\n\n          if(${outOfBoundsCondition}) {\n            setOutput(vec4(0));\n          } else {\n            ${setup}\n\n            setOutput(vec4(${output}));\n          }\n        }\n      `;\n    }\n  }\n\n  getSourceCoordsArr(dims) {\n    const coords = [];\n\n    for (let row = 0; row <= 1; row++) {\n      for (let col = 0; col <= 1; col++) {\n        let coord = `${row === 0 ? 'r' : 'rp1'}, ${col === 0 ? 'c' : 'cp1'}`;\n\n        for (let d = 2; d < this.rank; d++) {\n          coord = `${dims[dims.length - 1 - d]},` + coord;\n        }\n\n        coords.push(coord);\n      }\n    }\n\n    return coords;\n  }\n\n  getOutOfBoundsCondition(dims) {\n    if (this.rank === 1) {\n      return `rc > ${this.enableShapeUniforms ? 'outShape' : this.outputShape[0]}`;\n    }\n\n    let cond = '';\n\n    for (let i = this.rank - 2; i < this.rank; i++) {\n      cond += `${dims[i]} >= ${this.enableShapeUniforms ? `outShape[${i}]` : this.outputShape[i]}`;\n\n      if (i < this.rank - 1) {\n        cond += '||';\n      }\n    }\n\n    return cond;\n  }\n\n  getSetup(dims) {\n    if (this.rank === 1) {\n      return '';\n    }\n\n    const innerDims = dims.slice(-2);\n    const col = this.enableShapeUniforms ? `outShape[${this.rank} - 1]` : this.outputShape[this.rank - 1];\n    const row = this.enableShapeUniforms ? `outShape[${this.rank} - 2]` : this.outputShape[this.rank - 2];\n    return `\n      int r = ${innerDims[0]};\n      int c = ${innerDims[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${col};\n      bool rEdge = rp1 >= ${row};\n    `;\n  }\n\n  getOutput(dims) {\n    const sourceCoords = this.getSourceCoordsArr(dims);\n\n    if (this.rank === 1) {\n      const outShape = this.enableShapeUniforms ? 'outShape' : this.outputShape[0];\n      return `getA(rc), (rc + 1 >= ${outShape} ? 0. : getA(rc + 1)), 0, 0`;\n    }\n\n    return `getA(${sourceCoords[0]}),\n            cEdge ? 0. : getA(${sourceCoords[1]}),\n            rEdge ? 0. : getA(${sourceCoords[2]}),\n            rEdge || cEdge ? 0. : getA(${sourceCoords[3]})`;\n  }\n\n}","map":{"version":3,"names":["useShapeUniforms","getChannels","getCoordsDataType","PackProgram","constructor","outputShape","variableNames","packedInputs","packedOutput","rank","length","enableShapeUniforms","userCode","channels","dtype","outOfBoundsCondition","getOutOfBoundsCondition","setup","getSetup","output","getOutput","getSourceCoordsArr","dims","coords","row","col","coord","d","push","cond","i","innerDims","slice","sourceCoords","outShape"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-webgl/dist/pack_gpu.js"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { useShapeUniforms } from './gpgpu_math';\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport class PackProgram {\n    constructor(outputShape) {\n        this.variableNames = ['A'];\n        this.packedInputs = false;\n        this.packedOutput = true;\n        // Only input / output 3D tensors.\n        this.outputShape = outputShape;\n        this.rank = outputShape.length;\n        this.enableShapeUniforms = useShapeUniforms(this.outputShape.length);\n        if (this.rank === 0) {\n            this.userCode = `\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      `;\n        }\n        else {\n            const channels = getChannels('rc', this.rank);\n            const dtype = getCoordsDataType(this.rank);\n            const outOfBoundsCondition = this.getOutOfBoundsCondition(channels);\n            const setup = this.getSetup(channels);\n            const output = this.getOutput(channels);\n            this.userCode = `\n        void main() {\n          ${dtype} rc = getOutputCoords();\n\n          if(${outOfBoundsCondition}) {\n            setOutput(vec4(0));\n          } else {\n            ${setup}\n\n            setOutput(vec4(${output}));\n          }\n        }\n      `;\n        }\n    }\n    getSourceCoordsArr(dims) {\n        const coords = [];\n        for (let row = 0; row <= 1; row++) {\n            for (let col = 0; col <= 1; col++) {\n                let coord = `${row === 0 ? 'r' : 'rp1'}, ${col === 0 ? 'c' : 'cp1'}`;\n                for (let d = 2; d < this.rank; d++) {\n                    coord = `${dims[dims.length - 1 - d]},` + coord;\n                }\n                coords.push(coord);\n            }\n        }\n        return coords;\n    }\n    getOutOfBoundsCondition(dims) {\n        if (this.rank === 1) {\n            return `rc > ${this.enableShapeUniforms ? 'outShape' : this.outputShape[0]}`;\n        }\n        let cond = '';\n        for (let i = this.rank - 2; i < this.rank; i++) {\n            cond += `${dims[i]} >= ${this.enableShapeUniforms ? `outShape[${i}]` : this.outputShape[i]}`;\n            if (i < this.rank - 1) {\n                cond += '||';\n            }\n        }\n        return cond;\n    }\n    getSetup(dims) {\n        if (this.rank === 1) {\n            return '';\n        }\n        const innerDims = dims.slice(-2);\n        const col = this.enableShapeUniforms ? `outShape[${this.rank} - 1]` :\n            this.outputShape[this.rank - 1];\n        const row = this.enableShapeUniforms ? `outShape[${this.rank} - 2]` :\n            this.outputShape[this.rank - 2];\n        return `\n      int r = ${innerDims[0]};\n      int c = ${innerDims[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${col};\n      bool rEdge = rp1 >= ${row};\n    `;\n    }\n    getOutput(dims) {\n        const sourceCoords = this.getSourceCoordsArr(dims);\n        if (this.rank === 1) {\n            const outShape = this.enableShapeUniforms ? 'outShape' : this.outputShape[0];\n            return `getA(rc), (rc + 1 >= ${outShape} ? 0. : getA(rc + 1)), 0, 0`;\n        }\n        return `getA(${sourceCoords[0]}),\n            cEdge ? 0. : getA(${sourceCoords[1]}),\n            rEdge ? 0. : getA(${sourceCoords[2]}),\n            rEdge || cEdge ? 0. : getA(${sourceCoords[3]})`;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}