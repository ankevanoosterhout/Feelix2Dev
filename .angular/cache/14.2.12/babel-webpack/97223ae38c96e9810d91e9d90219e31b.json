{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { OneHot, util } from '@tensorflow/tfjs-core';\nimport { OneHotProgram } from '../onehot_gpu';\nimport { reshape } from './Reshape';\nexport const oneHot = args => {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    indices\n  } = inputs;\n  const {\n    dtype,\n    depth,\n    onValue,\n    offValue\n  } = attrs;\n  const indicesSize = util.sizeFromShape(indices.shape);\n  const program = new OneHotProgram(indicesSize, depth, onValue, offValue);\n  const reshaped = reshape({\n    inputs: {\n      x: indices\n    },\n    backend,\n    attrs: {\n      shape: [indicesSize]\n    }\n  });\n  const result = backend.runWebGLProgram(program, [reshaped], dtype);\n  backend.disposeIntermediateTensorInfo(reshaped);\n  const outShape = [...indices.shape, depth];\n  const out = reshape({\n    inputs: {\n      x: result\n    },\n    backend,\n    attrs: {\n      shape: outShape\n    }\n  });\n  backend.disposeIntermediateTensorInfo(result);\n  return out;\n};\nexport const oneHotConfig = {\n  kernelName: OneHot,\n  backendName: 'webgl',\n  kernelFunc: oneHot\n};","map":{"version":3,"names":["OneHot","util","OneHotProgram","reshape","oneHot","args","inputs","backend","attrs","indices","dtype","depth","onValue","offValue","indicesSize","sizeFromShape","shape","program","reshaped","x","result","runWebGLProgram","disposeIntermediateTensorInfo","outShape","out","oneHotConfig","kernelName","backendName","kernelFunc"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/OneHot.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { OneHot, util } from '@tensorflow/tfjs-core';\nimport { OneHotProgram } from '../onehot_gpu';\nimport { reshape } from './Reshape';\nexport const oneHot = (args) => {\n    const { inputs, backend, attrs } = args;\n    const { indices } = inputs;\n    const { dtype, depth, onValue, offValue } = attrs;\n    const indicesSize = util.sizeFromShape(indices.shape);\n    const program = new OneHotProgram(indicesSize, depth, onValue, offValue);\n    const reshaped = reshape({ inputs: { x: indices }, backend, attrs: { shape: [indicesSize] } });\n    const result = backend.runWebGLProgram(program, [reshaped], dtype);\n    backend.disposeIntermediateTensorInfo(reshaped);\n    const outShape = [...indices.shape, depth];\n    const out = reshape({ inputs: { x: result }, backend, attrs: { shape: outShape } });\n    backend.disposeIntermediateTensorInfo(result);\n    return out;\n};\nexport const oneHotConfig = {\n    kernelName: OneHot,\n    backendName: 'webgl',\n    kernelFunc: oneHot\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAT,EAAiBC,IAAjB,QAA6B,uBAA7B;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAO,MAAMC,MAAM,GAAIC,IAAD,IAAU;EAC5B,MAAM;IAAEC,MAAF;IAAUC,OAAV;IAAmBC;EAAnB,IAA6BH,IAAnC;EACA,MAAM;IAAEI;EAAF,IAAcH,MAApB;EACA,MAAM;IAAEI,KAAF;IAASC,KAAT;IAAgBC,OAAhB;IAAyBC;EAAzB,IAAsCL,KAA5C;EACA,MAAMM,WAAW,GAAGb,IAAI,CAACc,aAAL,CAAmBN,OAAO,CAACO,KAA3B,CAApB;EACA,MAAMC,OAAO,GAAG,IAAIf,aAAJ,CAAkBY,WAAlB,EAA+BH,KAA/B,EAAsCC,OAAtC,EAA+CC,QAA/C,CAAhB;EACA,MAAMK,QAAQ,GAAGf,OAAO,CAAC;IAAEG,MAAM,EAAE;MAAEa,CAAC,EAAEV;IAAL,CAAV;IAA0BF,OAA1B;IAAmCC,KAAK,EAAE;MAAEQ,KAAK,EAAE,CAACF,WAAD;IAAT;EAA1C,CAAD,CAAxB;EACA,MAAMM,MAAM,GAAGb,OAAO,CAACc,eAAR,CAAwBJ,OAAxB,EAAiC,CAACC,QAAD,CAAjC,EAA6CR,KAA7C,CAAf;EACAH,OAAO,CAACe,6BAAR,CAAsCJ,QAAtC;EACA,MAAMK,QAAQ,GAAG,CAAC,GAAGd,OAAO,CAACO,KAAZ,EAAmBL,KAAnB,CAAjB;EACA,MAAMa,GAAG,GAAGrB,OAAO,CAAC;IAAEG,MAAM,EAAE;MAAEa,CAAC,EAAEC;IAAL,CAAV;IAAyBb,OAAzB;IAAkCC,KAAK,EAAE;MAAEQ,KAAK,EAAEO;IAAT;EAAzC,CAAD,CAAnB;EACAhB,OAAO,CAACe,6BAAR,CAAsCF,MAAtC;EACA,OAAOI,GAAP;AACH,CAbM;AAcP,OAAO,MAAMC,YAAY,GAAG;EACxBC,UAAU,EAAE1B,MADY;EAExB2B,WAAW,EAAE,OAFW;EAGxBC,UAAU,EAAExB;AAHY,CAArB"},"metadata":{},"sourceType":"module"}