{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Step } from '@tensorflow/tfjs-core';\nimport { CHECK_NAN_SNIPPET, UnaryOpProgram } from '../unaryop_gpu';\nexport function step({\n  inputs,\n  attrs,\n  backend\n}) {\n  const {\n    x\n  } = inputs;\n  const opSnippet = CHECK_NAN_SNIPPET + `\n    return x > 0.0 ? 1.0 : float(${attrs.alpha});\n  `;\n  const program = new UnaryOpProgram(x.shape, opSnippet);\n  return backend.runWebGLProgram(program, [x], x.dtype);\n}\nexport const stepConfig = {\n  kernelName: Step,\n  backendName: 'webgl',\n  kernelFunc: step\n};","map":{"version":3,"names":["Step","CHECK_NAN_SNIPPET","UnaryOpProgram","step","inputs","attrs","backend","x","opSnippet","alpha","program","shape","runWebGLProgram","dtype","stepConfig","kernelName","backendName","kernelFunc"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Step.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Step } from '@tensorflow/tfjs-core';\nimport { CHECK_NAN_SNIPPET, UnaryOpProgram } from '../unaryop_gpu';\nexport function step({ inputs, attrs, backend }) {\n    const { x } = inputs;\n    const opSnippet = CHECK_NAN_SNIPPET + `\n    return x > 0.0 ? 1.0 : float(${attrs.alpha});\n  `;\n    const program = new UnaryOpProgram(x.shape, opSnippet);\n    return backend.runWebGLProgram(program, [x], x.dtype);\n}\nexport const stepConfig = {\n    kernelName: Step,\n    backendName: 'webgl',\n    kernelFunc: step,\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,IAAT,QAAqB,uBAArB;AACA,SAASC,iBAAT,EAA4BC,cAA5B,QAAkD,gBAAlD;AACA,OAAO,SAASC,IAAT,CAAc;EAAEC,MAAF;EAAUC,KAAV;EAAiBC;AAAjB,CAAd,EAA0C;EAC7C,MAAM;IAAEC;EAAF,IAAQH,MAAd;EACA,MAAMI,SAAS,GAAGP,iBAAiB,GAAI;AAC3C,mCAAmCI,KAAK,CAACI,KAAM;AAC/C,GAFI;EAGA,MAAMC,OAAO,GAAG,IAAIR,cAAJ,CAAmBK,CAAC,CAACI,KAArB,EAA4BH,SAA5B,CAAhB;EACA,OAAOF,OAAO,CAACM,eAAR,CAAwBF,OAAxB,EAAiC,CAACH,CAAD,CAAjC,EAAsCA,CAAC,CAACM,KAAxC,CAAP;AACH;AACD,OAAO,MAAMC,UAAU,GAAG;EACtBC,UAAU,EAAEf,IADU;EAEtBgB,WAAW,EAAE,OAFS;EAGtBC,UAAU,EAAEd;AAHU,CAAnB"},"metadata":{},"sourceType":"module"}