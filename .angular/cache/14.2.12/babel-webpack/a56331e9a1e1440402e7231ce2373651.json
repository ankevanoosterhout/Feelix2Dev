{"ast":null,"code":"import linearSolve from 'linear-solve';\nimport { SVD } from 'svd-js';\n\nfunction transpose(outMatrix, a) {\n  const tr = a.length;\n  const tc = a[0].length;\n\n  for (let r = 0; r < tr; r++) {\n    for (let c = 0; c < tc; c++) {\n      outMatrix[c][r] = a[r][c];\n    }\n  }\n}\n\nfunction identity(outMatrix) {\n  for (let r = 0, tr = outMatrix.length; r < tr; r++) {\n    for (let c = 0, tc = outMatrix.length; c < tc; c++) {\n      outMatrix[r][c] = r === c ? 1 : 0;\n    }\n  }\n}\n\nfunction scale(outMatrix, matrix, scalar) {\n  for (let r = 0, tr = outMatrix.length; r < tr; r++) {\n    for (let c = 0, tc = outMatrix.length; c < tc; c++) {\n      outMatrix[r][c] = matrix[r][c] * scalar;\n    }\n  }\n}\n\nfunction multiply(outMatrix, a, b) {\n  if (a === outMatrix || b === outMatrix) {\n    throw new Error('Matrix: Cannot multiply to a matrix in place.');\n  } // a is m x n\n  // b is n x k\n  // outMatrix is m x k\n  // m = a rows\n  // n = a cols or b rows\n  // k = b cols\n\n\n  const m = a.length;\n  const n = b.length;\n  const k = b[0].length; // iterate over m\n\n  for (let r = 0, tr = m; r < tr; r++) {\n    // iterate over k\n    for (let c = 0, tc = k; c < tc; c++) {\n      let sum = 0; // iterate over n\n\n      for (let i = 0, ti = n; i < ti; i++) {\n        sum += a[r][i] * b[i][c];\n      }\n\n      outMatrix[r][c] = sum;\n    }\n  }\n}\n\nfunction create(row, col) {\n  const result = new Array(row);\n\n  for (let i = 0; i < row; i++) {\n    result[i] = new Float64Array(col);\n  }\n\n  return result;\n}\n\nfunction copy(outMatrix, sourceMatrix) {\n  const tr = sourceMatrix.length;\n  const tc = sourceMatrix[0].length;\n\n  for (let r = 0; r < tr; r++) {\n    for (let c = 0; c < tc; c++) {\n      outMatrix[r][c] = sourceMatrix[r][c];\n    }\n  }\n}\n\nfunction clone(matrix) {\n  const rows = matrix.length;\n  const cols = matrix[0].length;\n  const resultMatrix = create(rows, cols);\n  copy(resultMatrix, matrix);\n  return resultMatrix;\n}\n\nfunction solve(outMatrix, matrix, vector) {\n  const res = linearSolve.solve(matrix, vector);\n\n  for (let i = 0, l = res.length; i < l; i++) {\n    outMatrix[i].set(res[i]);\n  }\n}\n\nfunction svd(ru, rq, rv, matrix) {\n  const {\n    u,\n    v,\n    q\n  } = SVD(matrix);\n  const urows = u.length;\n\n  for (let r = 0; r < urows; r++) {\n    ru[r].set(u[r]);\n  }\n\n  const vrows = v.length;\n\n  for (let r = 0; r < vrows; r++) {\n    rv[r].set(v[r]);\n  }\n\n  const qrows = q.length;\n\n  for (let r = 0; r < qrows; r++) {\n    const rqrow = rq[r];\n    const qval = q[r];\n    rqrow.fill(0);\n    rqrow[r] = qval;\n  }\n}\n\nfunction invert(outMatrix, matrix) {\n  const res = linearSolve.invert(matrix);\n  const tr = matrix[0].length;\n  const tc = matrix.length;\n\n  for (let r = 0; r < tr; r++) {\n    for (let c = 0; c < tc; c++) {\n      outMatrix[r][c] = res[r][c];\n    }\n  }\n}\n\nfunction add(outMatrix, a, b) {\n  const tr = a.length;\n  const tc = a[0].length;\n\n  for (let r = 0; r < tr; r++) {\n    for (let c = 0; c < tc; c++) {\n      outMatrix[r][c] = a[r][c] + b[r][c];\n    }\n  }\n}\n\nfunction subtract(outMatrix, a, b) {\n  const tr = a.length;\n  const tc = a[0].length;\n\n  for (let r = 0; r < tr; r++) {\n    for (let c = 0; c < tc; c++) {\n      outMatrix[r][c] = a[r][c] - b[r][c];\n    }\n  }\n}\n\nfunction magnitudeSquared(matrix) {\n  let sum = 0;\n  const rows = matrix.length;\n  const cols = matrix[0].length;\n\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < cols; c++) {\n      sum += matrix[r][c] ** 2;\n    }\n  }\n\n  return sum;\n}\n\nfunction magnitude(matrix) {\n  return Math.sqrt(magnitudeSquared(matrix));\n}\n\nfunction toString(matrix, dec = 3) {\n  const rows = matrix.length;\n  const cols = matrix[0].length;\n  let str = '';\n\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < cols; c++) {\n      str += matrix[r][c].toFixed(dec) + ', ';\n    }\n\n    str += '\\n';\n  }\n\n  return str;\n}\n\nfunction log(matrix, dec) {\n  console.log(toString(matrix, dec));\n}\n\nexport const mat = {\n  transpose,\n  identity,\n  scale,\n  multiply,\n  create,\n  copy,\n  clone,\n  solve,\n  svd,\n  invert,\n  add,\n  subtract,\n  magnitudeSquared,\n  magnitude,\n  toString,\n  log\n};","map":{"version":3,"names":["linearSolve","SVD","transpose","outMatrix","a","tr","length","tc","r","c","identity","scale","matrix","scalar","multiply","b","Error","m","n","k","sum","i","ti","create","row","col","result","Array","Float64Array","copy","sourceMatrix","clone","rows","cols","resultMatrix","solve","vector","res","l","set","svd","ru","rq","rv","u","v","q","urows","vrows","qrows","rqrow","qval","fill","invert","add","subtract","magnitudeSquared","magnitude","Math","sqrt","toString","dec","str","toFixed","log","console","mat"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/closed-chain-ik/src/core/utils/matrix.js"],"sourcesContent":["import linearSolve from 'linear-solve';\r\nimport { SVD } from 'svd-js';\r\n\r\nfunction transpose( outMatrix, a ) {\r\n\r\n\tconst tr = a.length;\r\n\tconst tc = a[ 0 ].length;\r\n\r\n\tfor ( let r = 0; r < tr; r ++ ) {\r\n\r\n\t\tfor ( let c = 0; c < tc; c ++ ) {\r\n\r\n\t\t\toutMatrix[ c ][ r ] = a[ r ][ c ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction identity( outMatrix ) {\r\n\r\n\tfor ( let r = 0, tr = outMatrix.length; r < tr; r ++ ) {\r\n\r\n\t\tfor ( let c = 0, tc = outMatrix.length; c < tc; c ++ ) {\r\n\r\n\t\t\toutMatrix[ r ][ c ] = r === c ? 1 : 0;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction scale( outMatrix, matrix, scalar ) {\r\n\r\n\tfor ( let r = 0, tr = outMatrix.length; r < tr; r ++ ) {\r\n\r\n\t\tfor ( let c = 0, tc = outMatrix.length; c < tc; c ++ ) {\r\n\r\n\t\t\toutMatrix[ r ][ c ] = matrix[ r ][ c ] * scalar;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction multiply( outMatrix, a, b ) {\r\n\r\n\tif ( a === outMatrix || b === outMatrix ) {\r\n\r\n\t\tthrow new Error( 'Matrix: Cannot multiply to a matrix in place.' );\r\n\r\n\t}\r\n\r\n\t// a is m x n\r\n\t// b is n x k\r\n\t// outMatrix is m x k\r\n\r\n\t// m = a rows\r\n\t// n = a cols or b rows\r\n\t// k = b cols\r\n\r\n\tconst m = a.length;\r\n\tconst n = b.length;\r\n\tconst k = b[ 0 ].length;\r\n\r\n\t// iterate over m\r\n\tfor ( let r = 0, tr = m; r < tr; r ++ ) {\r\n\r\n\t\t// iterate over k\r\n\t\tfor ( let c = 0, tc = k; c < tc; c ++ ) {\r\n\r\n\t\t\tlet sum = 0;\r\n\r\n\t\t\t// iterate over n\r\n\t\t\tfor ( let i = 0, ti = n; i < ti; i ++ ) {\r\n\r\n\t\t\t\tsum += a[ r ][ i ] * b[ i ][ c ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\toutMatrix[ r ][ c ] = sum;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction create( row, col ) {\r\n\r\n\tconst result = new Array( row );\r\n\tfor ( let i = 0; i < row; i ++ ) {\r\n\r\n\t\tresult[ i ] = new Float64Array( col );\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nfunction copy( outMatrix, sourceMatrix ) {\r\n\r\n\tconst tr = sourceMatrix.length;\r\n\tconst tc = sourceMatrix[ 0 ].length;\r\n\tfor ( let r = 0; r < tr; r ++ ) {\r\n\r\n\t\tfor ( let c = 0; c < tc; c ++ ) {\r\n\r\n\t\t\toutMatrix[ r ][ c ] = sourceMatrix[ r ][ c ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction clone( matrix ) {\r\n\r\n\tconst rows = matrix.length;\r\n\tconst cols = matrix[ 0 ].length;\r\n\tconst resultMatrix = create( rows, cols );\r\n\tcopy( resultMatrix, matrix );\r\n\treturn resultMatrix;\r\n\r\n}\r\n\r\nfunction solve( outMatrix, matrix, vector ) {\r\n\r\n\tconst res = linearSolve.solve( matrix, vector );\r\n\tfor ( let i = 0, l = res.length; i < l; i ++ ) {\r\n\r\n\t\toutMatrix[ i ].set( res[ i ] );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction svd( ru, rq, rv, matrix ) {\r\n\r\n\tconst { u, v, q } = SVD( matrix );\r\n\r\n\tconst urows = u.length;\r\n\tfor ( let r = 0; r < urows; r ++ ) {\r\n\r\n\t\tru[ r ].set( u[ r ] );\r\n\r\n\t}\r\n\r\n\tconst vrows = v.length;\r\n\tfor ( let r = 0; r < vrows; r ++ ) {\r\n\r\n\t\trv[ r ].set( v[ r ] );\r\n\r\n\t}\r\n\r\n\tconst qrows = q.length;\r\n\tfor ( let r = 0; r < qrows; r ++ ) {\r\n\r\n\t\tconst rqrow = rq[ r ];\r\n\t\tconst qval = q[ r ];\r\n\t\trqrow.fill( 0 );\r\n\t\trqrow[ r ] = qval;\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction invert( outMatrix, matrix ) {\r\n\r\n\tconst res = linearSolve.invert( matrix );\r\n\r\n\tconst tr = matrix[ 0 ].length;\r\n\tconst tc = matrix.length;\r\n\tfor ( let r = 0; r < tr; r ++ ) {\r\n\r\n\t\tfor ( let c = 0; c < tc; c ++ ) {\r\n\r\n\t\t\toutMatrix[ r ][ c ] = res[ r ][ c ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction add( outMatrix, a, b ) {\r\n\r\n\tconst tr = a.length;\r\n\tconst tc = a[ 0 ].length;\r\n\tfor ( let r = 0; r < tr; r ++ ) {\r\n\r\n\t\tfor ( let c = 0; c < tc; c ++ ) {\r\n\r\n\t\t\toutMatrix[ r ][ c ] = a[ r ][ c ] + b[ r ][ c ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction subtract( outMatrix, a, b ) {\r\n\r\n\tconst tr = a.length;\r\n\tconst tc = a[ 0 ].length;\r\n\tfor ( let r = 0; r < tr; r ++ ) {\r\n\r\n\t\tfor ( let c = 0; c < tc; c ++ ) {\r\n\r\n\t\t\toutMatrix[ r ][ c ] = a[ r ][ c ] - b[ r ][ c ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction magnitudeSquared( matrix ) {\r\n\r\n\tlet sum = 0;\r\n\tconst rows = matrix.length;\r\n\tconst cols = matrix[ 0 ].length;\r\n\tfor ( let r = 0; r < rows; r ++ ) {\r\n\r\n\t\tfor ( let c = 0; c < cols; c ++ ) {\r\n\r\n\t\t\tsum += matrix[ r ][ c ] ** 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn sum;\r\n\r\n}\r\n\r\nfunction magnitude( matrix ) {\r\n\r\n\treturn Math.sqrt( magnitudeSquared( matrix ) );\r\n\r\n}\r\n\r\nfunction toString( matrix, dec = 3 ) {\r\n\r\n\tconst rows = matrix.length;\r\n\tconst cols = matrix[ 0 ].length;\r\n\tlet str = '';\r\n\tfor ( let r = 0; r < rows; r ++ ) {\r\n\r\n\t\tfor ( let c = 0; c < cols; c ++ ) {\r\n\r\n\t\t\tstr += matrix[ r ][ c ].toFixed( dec ) + ', ';\r\n\r\n\t\t}\r\n\r\n\t\tstr += '\\n';\r\n\r\n\t}\r\n\r\n\treturn str;\r\n\r\n}\r\n\r\nfunction log( matrix, dec ) {\r\n\r\n\tconsole.log( toString( matrix, dec ) );\r\n\r\n}\r\n\r\nexport const mat = {\r\n\ttranspose,\r\n\tidentity,\r\n\tscale,\r\n\tmultiply,\r\n\tcreate,\r\n\tcopy,\r\n\tclone,\r\n\tsolve,\r\n\tsvd,\r\n\tinvert,\r\n\tadd,\r\n\tsubtract,\r\n\tmagnitudeSquared,\r\n\tmagnitude,\r\n\ttoString,\r\n\tlog,\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}