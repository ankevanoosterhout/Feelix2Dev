{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Slice } from '../kernel_names';\nimport { pad } from '../ops/pad';\nimport { parseSliceParams } from '../ops/slice_util';\nexport const sliceGradConfig = {\n  kernelName: Slice,\n  inputsToSave: ['x'],\n  gradFunc: (dy, saved, attrs) => {\n    const [x] = saved;\n    const {\n      begin,\n      size\n    } = attrs;\n    const inputShape = x.shape;\n    const [begin_, size_] = parseSliceParams(x, begin, size); // Create an Nx2 padding where the first column represents how many\n    // zeros are prepended (at start) for each dimension, and the second\n    // column indicates how many zeros are appended (at end).\n    // The number of zeros to append is the shape of the input\n    // elementwise-subtracted by both the begin vector and sizes vector.\n\n    const paddings = [];\n\n    for (let i = 0; i < dy.rank; i++) {\n      paddings.push([begin_[i], inputShape[i] - begin_[i] - size_[i]]);\n    }\n\n    return {\n      x: () => pad(dy, paddings)\n    };\n  }\n};","map":{"version":3,"names":["Slice","pad","parseSliceParams","sliceGradConfig","kernelName","inputsToSave","gradFunc","dy","saved","attrs","x","begin","size","inputShape","shape","begin_","size_","paddings","i","rank","push"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-core/dist/gradients/Slice_grad.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Slice } from '../kernel_names';\nimport { pad } from '../ops/pad';\nimport { parseSliceParams } from '../ops/slice_util';\nexport const sliceGradConfig = {\n    kernelName: Slice,\n    inputsToSave: ['x'],\n    gradFunc: (dy, saved, attrs) => {\n        const [x] = saved;\n        const { begin, size } = attrs;\n        const inputShape = x.shape;\n        const [begin_, size_] = parseSliceParams(x, begin, size);\n        // Create an Nx2 padding where the first column represents how many\n        // zeros are prepended (at start) for each dimension, and the second\n        // column indicates how many zeros are appended (at end).\n        // The number of zeros to append is the shape of the input\n        // elementwise-subtracted by both the begin vector and sizes vector.\n        const paddings = [];\n        for (let i = 0; i < dy.rank; i++) {\n            paddings.push([begin_[i], inputShape[i] - begin_[i] - size_[i]]);\n        }\n        return { x: () => pad(dy, paddings) };\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,KAAT,QAAsB,iBAAtB;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,OAAO,MAAMC,eAAe,GAAG;EAC3BC,UAAU,EAAEJ,KADe;EAE3BK,YAAY,EAAE,CAAC,GAAD,CAFa;EAG3BC,QAAQ,EAAE,CAACC,EAAD,EAAKC,KAAL,EAAYC,KAAZ,KAAsB;IAC5B,MAAM,CAACC,CAAD,IAAMF,KAAZ;IACA,MAAM;MAAEG,KAAF;MAASC;IAAT,IAAkBH,KAAxB;IACA,MAAMI,UAAU,GAAGH,CAAC,CAACI,KAArB;IACA,MAAM,CAACC,MAAD,EAASC,KAAT,IAAkBd,gBAAgB,CAACQ,CAAD,EAAIC,KAAJ,EAAWC,IAAX,CAAxC,CAJ4B,CAK5B;IACA;IACA;IACA;IACA;;IACA,MAAMK,QAAQ,GAAG,EAAjB;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,EAAE,CAACY,IAAvB,EAA6BD,CAAC,EAA9B,EAAkC;MAC9BD,QAAQ,CAACG,IAAT,CAAc,CAACL,MAAM,CAACG,CAAD,CAAP,EAAYL,UAAU,CAACK,CAAD,CAAV,GAAgBH,MAAM,CAACG,CAAD,CAAtB,GAA4BF,KAAK,CAACE,CAAD,CAA7C,CAAd;IACH;;IACD,OAAO;MAAER,CAAC,EAAE,MAAMT,GAAG,CAACM,EAAD,EAAKU,QAAL;IAAd,CAAP;EACH;AAlB0B,CAAxB"},"metadata":{},"sourceType":"module"}