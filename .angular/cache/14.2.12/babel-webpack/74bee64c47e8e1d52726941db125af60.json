{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Maximum } from '../kernel_names';\nimport { cast } from '../ops/cast';\nimport { greaterEqual } from '../ops/greater_equal';\nimport { less } from '../ops/less';\nimport { mul } from '../ops/mul';\nexport const maximumGradConfig = {\n  kernelName: Maximum,\n  inputsToSave: ['a', 'b'],\n  gradFunc: (dy, saved) => {\n    const [a, b] = saved;\n\n    const derA = () => mul(dy, cast(greaterEqual(a, b), 'float32'));\n\n    const derB = () => mul(dy, cast(less(a, b), 'float32'));\n\n    return {\n      a: derA,\n      b: derB\n    };\n  }\n};","map":{"version":3,"names":["Maximum","cast","greaterEqual","less","mul","maximumGradConfig","kernelName","inputsToSave","gradFunc","dy","saved","a","b","derA","derB"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-core/dist/gradients/Maximum_grad.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Maximum } from '../kernel_names';\nimport { cast } from '../ops/cast';\nimport { greaterEqual } from '../ops/greater_equal';\nimport { less } from '../ops/less';\nimport { mul } from '../ops/mul';\nexport const maximumGradConfig = {\n    kernelName: Maximum,\n    inputsToSave: ['a', 'b'],\n    gradFunc: (dy, saved) => {\n        const [a, b] = saved;\n        const derA = () => mul(dy, cast(greaterEqual(a, b), 'float32'));\n        const derB = () => mul(dy, cast(less(a, b), 'float32'));\n        return { a: derA, b: derB };\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,OAAT,QAAwB,iBAAxB;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,OAAO,MAAMC,iBAAiB,GAAG;EAC7BC,UAAU,EAAEN,OADiB;EAE7BO,YAAY,EAAE,CAAC,GAAD,EAAM,GAAN,CAFe;EAG7BC,QAAQ,EAAE,CAACC,EAAD,EAAKC,KAAL,KAAe;IACrB,MAAM,CAACC,CAAD,EAAIC,CAAJ,IAASF,KAAf;;IACA,MAAMG,IAAI,GAAG,MAAMT,GAAG,CAACK,EAAD,EAAKR,IAAI,CAACC,YAAY,CAACS,CAAD,EAAIC,CAAJ,CAAb,EAAqB,SAArB,CAAT,CAAtB;;IACA,MAAME,IAAI,GAAG,MAAMV,GAAG,CAACK,EAAD,EAAKR,IAAI,CAACE,IAAI,CAACQ,CAAD,EAAIC,CAAJ,CAAL,EAAa,SAAb,CAAT,CAAtB;;IACA,OAAO;MAAED,CAAC,EAAEE,IAAL;MAAWD,CAAC,EAAEE;IAAd,CAAP;EACH;AAR4B,CAA1B"},"metadata":{},"sourceType":"module"}