{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, util } from '@tensorflow/tfjs-core';\nimport { useShapeUniforms } from './gpgpu_math';\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport const CHECK_NAN_SNIPPET_PACKED = `\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n`;\nexport const ELU_DER = `\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n`;\nexport const NOT_EQUAL = `\n  return vec4(notEqual(a, b));\n`;\nexport class BinaryOpPackedProgram {\n  constructor(op, aShape, bShape, checkOutOfBounds = false) {\n    this.variableNames = ['A', 'B'];\n    this.supportsBroadcasting = true;\n    this.packedInputs = true;\n    this.packedOutput = true;\n    this.outputShape = backend_util.assertAndGetBroadcastShape(aShape, bShape);\n    const rank = this.outputShape.length;\n    this.enableShapeUniforms = useShapeUniforms(rank);\n    let checkOutOfBoundsString = '';\n\n    if (checkOutOfBounds) {\n      if (rank === 0 || util.sizeFromShape(this.outputShape) === 1) {\n        checkOutOfBoundsString = `\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        `;\n      } else {\n        const dtype = getCoordsDataType(rank);\n        checkOutOfBoundsString = `\n          ${dtype} coords = getOutputCoords();\n        `;\n\n        if (rank === 1) {\n          if (this.enableShapeUniforms) {\n            checkOutOfBoundsString += `\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;\n          } else {\n            checkOutOfBoundsString += `\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;\n          }\n        } else {\n          const channels = getChannels('coords', rank);\n\n          if (this.enableShapeUniforms) {\n            checkOutOfBoundsString += `\n            bool nextRowOutOfBounds =\n              (${channels[rank - 2]} + 1) >= outShape[${rank} - 2];\n            bool nextColOutOfBounds =\n              (${channels[rank - 1]} + 1) >= outShape[${rank} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `;\n          } else {\n            checkOutOfBoundsString += `\n            bool nextRowOutOfBounds =\n              (${channels[rank - 2]} + 1) >= ${this.outputShape[rank - 2]};\n            bool nextColOutOfBounds =\n              (${channels[rank - 1]} + 1) >= ${this.outputShape[rank - 1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `;\n          }\n        }\n      }\n    }\n\n    this.userCode = `\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${op}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${checkOutOfBoundsString}\n\n        setOutput(result);\n      }\n    `;\n  }\n\n}","map":{"version":3,"names":["backend_util","util","useShapeUniforms","getChannels","getCoordsDataType","CHECK_NAN_SNIPPET_PACKED","ELU_DER","NOT_EQUAL","BinaryOpPackedProgram","constructor","op","aShape","bShape","checkOutOfBounds","variableNames","supportsBroadcasting","packedInputs","packedOutput","outputShape","assertAndGetBroadcastShape","rank","length","enableShapeUniforms","checkOutOfBoundsString","sizeFromShape","dtype","channels","userCode"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-webgl/dist/binaryop_packed_gpu.js"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, util } from '@tensorflow/tfjs-core';\nimport { useShapeUniforms } from './gpgpu_math';\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport const CHECK_NAN_SNIPPET_PACKED = `\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n`;\nexport const ELU_DER = `\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n`;\nexport const NOT_EQUAL = `\n  return vec4(notEqual(a, b));\n`;\nexport class BinaryOpPackedProgram {\n    constructor(op, aShape, bShape, checkOutOfBounds = false) {\n        this.variableNames = ['A', 'B'];\n        this.supportsBroadcasting = true;\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = backend_util.assertAndGetBroadcastShape(aShape, bShape);\n        const rank = this.outputShape.length;\n        this.enableShapeUniforms = useShapeUniforms(rank);\n        let checkOutOfBoundsString = '';\n        if (checkOutOfBounds) {\n            if (rank === 0 || util.sizeFromShape(this.outputShape) === 1) {\n                checkOutOfBoundsString = `\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        `;\n            }\n            else {\n                const dtype = getCoordsDataType(rank);\n                checkOutOfBoundsString = `\n          ${dtype} coords = getOutputCoords();\n        `;\n                if (rank === 1) {\n                    if (this.enableShapeUniforms) {\n                        checkOutOfBoundsString += `\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;\n                    }\n                    else {\n                        checkOutOfBoundsString += `\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;\n                    }\n                }\n                else {\n                    const channels = getChannels('coords', rank);\n                    if (this.enableShapeUniforms) {\n                        checkOutOfBoundsString += `\n            bool nextRowOutOfBounds =\n              (${channels[rank - 2]} + 1) >= outShape[${rank} - 2];\n            bool nextColOutOfBounds =\n              (${channels[rank - 1]} + 1) >= outShape[${rank} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `;\n                    }\n                    else {\n                        checkOutOfBoundsString += `\n            bool nextRowOutOfBounds =\n              (${channels[rank - 2]} + 1) >= ${this.outputShape[rank - 2]};\n            bool nextColOutOfBounds =\n              (${channels[rank - 1]} + 1) >= ${this.outputShape[rank - 1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `;\n                    }\n                }\n            }\n        }\n        this.userCode = `\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${op}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${checkOutOfBoundsString}\n\n        setOutput(result);\n      }\n    `;\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAT,EAAuBC,IAAvB,QAAmC,uBAAnC;AACA,SAASC,gBAAT,QAAiC,cAAjC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,OAAO,MAAMC,wBAAwB,GAAI;AACzC;AACA;AACA;AACA;AACA,CALO;AAMP,OAAO,MAAMC,OAAO,GAAI;AACxB;AACA;AACA,CAHO;AAIP,OAAO,MAAMC,SAAS,GAAI;AAC1B;AACA,CAFO;AAGP,OAAO,MAAMC,qBAAN,CAA4B;EAC/BC,WAAW,CAACC,EAAD,EAAKC,MAAL,EAAaC,MAAb,EAAqBC,gBAAgB,GAAG,KAAxC,EAA+C;IACtD,KAAKC,aAAL,GAAqB,CAAC,GAAD,EAAM,GAAN,CAArB;IACA,KAAKC,oBAAL,GAA4B,IAA5B;IACA,KAAKC,YAAL,GAAoB,IAApB;IACA,KAAKC,YAAL,GAAoB,IAApB;IACA,KAAKC,WAAL,GAAmBlB,YAAY,CAACmB,0BAAb,CAAwCR,MAAxC,EAAgDC,MAAhD,CAAnB;IACA,MAAMQ,IAAI,GAAG,KAAKF,WAAL,CAAiBG,MAA9B;IACA,KAAKC,mBAAL,GAA2BpB,gBAAgB,CAACkB,IAAD,CAA3C;IACA,IAAIG,sBAAsB,GAAG,EAA7B;;IACA,IAAIV,gBAAJ,EAAsB;MAClB,IAAIO,IAAI,KAAK,CAAT,IAAcnB,IAAI,CAACuB,aAAL,CAAmB,KAAKN,WAAxB,MAAyC,CAA3D,EAA8D;QAC1DK,sBAAsB,GAAI;AAC1C;AACA;AACA;AACA,SAJgB;MAKH,CAND,MAOK;QACD,MAAME,KAAK,GAAGrB,iBAAiB,CAACgB,IAAD,CAA/B;QACAG,sBAAsB,GAAI;AAC1C,YAAYE,KAAM;AAClB,SAFgB;;QAGA,IAAIL,IAAI,KAAK,CAAb,EAAgB;UACZ,IAAI,KAAKE,mBAAT,EAA8B;YAC1BC,sBAAsB,IAAK;AACnD;AACA;AACA;AACA,WAJwB;UAKH,CAND,MAOK;YACDA,sBAAsB,IAAK;AACnD,yCAAyC,KAAKL,WAAL,CAAiB,CAAjB,CAAoB;AAC7D;AACA;AACA,WAJwB;UAKH;QACJ,CAfD,MAgBK;UACD,MAAMQ,QAAQ,GAAGvB,WAAW,CAAC,QAAD,EAAWiB,IAAX,CAA5B;;UACA,IAAI,KAAKE,mBAAT,EAA8B;YAC1BC,sBAAsB,IAAK;AACnD;AACA,iBAAiBG,QAAQ,CAACN,IAAI,GAAG,CAAR,CAAW,qBAAoBA,IAAK;AAC7D;AACA,iBAAiBM,QAAQ,CAACN,IAAI,GAAG,CAAR,CAAW,qBAAoBA,IAAK;AAC7D;AACA;AACA;AACA,WARwB;UASH,CAVD,MAWK;YACDG,sBAAsB,IAAK;AACnD;AACA,iBAAiBG,QAAQ,CAACN,IAAI,GAAG,CAAR,CAAW,YAAW,KAAKF,WAAL,CAAiBE,IAAI,GAAG,CAAxB,CAA2B;AAC1E;AACA,iBAAiBM,QAAQ,CAACN,IAAI,GAAG,CAAR,CAAW,YAAW,KAAKF,WAAL,CAAiBE,IAAI,GAAG,CAAxB,CAA2B;AAC1E;AACA;AACA;AACA,WARwB;UASH;QACJ;MACJ;IACJ;;IACD,KAAKO,QAAL,GAAiB;AACzB;AACA,UAAUjB,EAAG;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAUa,sBAAuB;AACjC;AACA;AACA;AACA,KAdQ;EAeH;;AAjF8B"},"metadata":{},"sourceType":"module"}