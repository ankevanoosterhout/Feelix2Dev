{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { EluGrad, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function eluGrad(args) {\n  const {\n    inputs,\n    backend\n  } = args;\n  const {\n    dy,\n    y\n  } = inputs;\n  assertNotComplex([dy, y], 'eluGrad');\n  const resultValues = new Float32Array(util.sizeFromShape(y.shape));\n  const values = backend.data.get(y.dataId).values;\n  const dyValues = backend.data.get(dy.dataId).values;\n\n  for (let i = 0; i < values.length; ++i) {\n    const v = values[i];\n\n    if (v >= 1) {\n      resultValues[i] = dyValues[i];\n    } else {\n      resultValues[i] = dyValues[i] * (v + 1);\n    }\n  }\n\n  return backend.makeTensorInfo(y.shape, 'float32', resultValues);\n}\nexport const eluGradConfig = {\n  kernelName: EluGrad,\n  backendName: 'cpu',\n  kernelFunc: eluGrad\n};","map":{"version":3,"names":["EluGrad","util","assertNotComplex","eluGrad","args","inputs","backend","dy","y","resultValues","Float32Array","sizeFromShape","shape","values","data","get","dataId","dyValues","i","length","v","makeTensorInfo","eluGradConfig","kernelName","backendName","kernelFunc"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/EluGrad.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { EluGrad, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport function eluGrad(args) {\n    const { inputs, backend } = args;\n    const { dy, y } = inputs;\n    assertNotComplex([dy, y], 'eluGrad');\n    const resultValues = new Float32Array(util.sizeFromShape(y.shape));\n    const values = backend.data.get(y.dataId).values;\n    const dyValues = backend.data.get(dy.dataId).values;\n    for (let i = 0; i < values.length; ++i) {\n        const v = values[i];\n        if (v >= 1) {\n            resultValues[i] = dyValues[i];\n        }\n        else {\n            resultValues[i] = dyValues[i] * (v + 1);\n        }\n    }\n    return backend.makeTensorInfo(y.shape, 'float32', resultValues);\n}\nexport const eluGradConfig = {\n    kernelName: EluGrad,\n    backendName: 'cpu',\n    kernelFunc: eluGrad\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,OAAT,EAAkBC,IAAlB,QAA8B,uBAA9B;AACA,SAASC,gBAAT,QAAiC,aAAjC;AACA,OAAO,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;EAC1B,MAAM;IAAEC,MAAF;IAAUC;EAAV,IAAsBF,IAA5B;EACA,MAAM;IAAEG,EAAF;IAAMC;EAAN,IAAYH,MAAlB;EACAH,gBAAgB,CAAC,CAACK,EAAD,EAAKC,CAAL,CAAD,EAAU,SAAV,CAAhB;EACA,MAAMC,YAAY,GAAG,IAAIC,YAAJ,CAAiBT,IAAI,CAACU,aAAL,CAAmBH,CAAC,CAACI,KAArB,CAAjB,CAArB;EACA,MAAMC,MAAM,GAAGP,OAAO,CAACQ,IAAR,CAAaC,GAAb,CAAiBP,CAAC,CAACQ,MAAnB,EAA2BH,MAA1C;EACA,MAAMI,QAAQ,GAAGX,OAAO,CAACQ,IAAR,CAAaC,GAAb,CAAiBR,EAAE,CAACS,MAApB,EAA4BH,MAA7C;;EACA,KAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,MAAM,CAACM,MAA3B,EAAmC,EAAED,CAArC,EAAwC;IACpC,MAAME,CAAC,GAAGP,MAAM,CAACK,CAAD,CAAhB;;IACA,IAAIE,CAAC,IAAI,CAAT,EAAY;MACRX,YAAY,CAACS,CAAD,CAAZ,GAAkBD,QAAQ,CAACC,CAAD,CAA1B;IACH,CAFD,MAGK;MACDT,YAAY,CAACS,CAAD,CAAZ,GAAkBD,QAAQ,CAACC,CAAD,CAAR,IAAeE,CAAC,GAAG,CAAnB,CAAlB;IACH;EACJ;;EACD,OAAOd,OAAO,CAACe,cAAR,CAAuBb,CAAC,CAACI,KAAzB,EAAgC,SAAhC,EAA2CH,YAA3C,CAAP;AACH;AACD,OAAO,MAAMa,aAAa,GAAG;EACzBC,UAAU,EAAEvB,OADa;EAEzBwB,WAAW,EAAE,KAFY;EAGzBC,UAAU,EAAEtB;AAHa,CAAtB"},"metadata":{},"sourceType":"module"}