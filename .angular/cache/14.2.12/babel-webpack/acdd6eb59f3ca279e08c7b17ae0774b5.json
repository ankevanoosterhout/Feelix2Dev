{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\nvar _play;\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from './engine';\nimport { inferShape } from './tensor_util_env';\nimport { arraysEqual, encodeString, flatten, isString, isTypedArray } from './util';\nconst TEST_EPSILON_FLOAT32 = 1e-3;\nexport const TEST_EPSILON_FLOAT16 = 1e-1;\nexport function expectArraysClose(actual, expected, epsilon) {\n  if (epsilon == null) {\n    epsilon = testEpsilon();\n  }\n\n  return expectArraysPredicate(actual, expected, (a, b) => areClose(a, b, epsilon));\n}\nexport function testEpsilon() {\n  return ENGINE.backend.floatPrecision() === 32 ? TEST_EPSILON_FLOAT32 : TEST_EPSILON_FLOAT16;\n}\n\nfunction expectArraysPredicate(actual, expected, predicate) {\n  let checkClassType = true;\n\n  if (isTypedArray(actual) || isTypedArray(expected)) {\n    checkClassType = false;\n  }\n\n  if (isTypedArray(actual) && isTypedArray(expected)) {\n    checkClassType = true;\n  }\n\n  if (checkClassType) {\n    const aType = actual.constructor.name;\n    const bType = expected.constructor.name;\n\n    if (aType !== bType) {\n      throw new Error(`Arrays are of different type. Actual: ${aType}. ` + `Expected: ${bType}`);\n    }\n  }\n\n  if (Array.isArray(actual) && Array.isArray(expected)) {\n    const actualShape = inferShape(actual);\n    const expectedShape = inferShape(expected);\n\n    if (!arraysEqual(actualShape, expectedShape)) {\n      throw new Error(`Arrays have different shapes. ` + `Actual: [${actualShape}]. Expected: [${expectedShape}]`);\n    }\n  }\n\n  const actualFlat = isTypedArray(actual) ? actual : flatten(actual);\n  const expectedFlat = isTypedArray(expected) ? expected : flatten(expected);\n\n  if (actualFlat.length !== expectedFlat.length) {\n    throw new Error(`Arrays have different lengths actual: ${actualFlat.length} vs ` + `expected: ${expectedFlat.length}.\\n` + `Actual:   ${actualFlat}.\\n` + `Expected: ${expectedFlat}.`);\n  }\n\n  for (let i = 0; i < expectedFlat.length; ++i) {\n    const a = actualFlat[i];\n    const e = expectedFlat[i];\n\n    if (!predicate(a, e)) {\n      throw new Error(`Arrays differ: actual[${i}] = ${a}, expected[${i}] = ${e}.\\n` + `Actual:   ${actualFlat}.\\n` + `Expected: ${expectedFlat}.`);\n    }\n  }\n\n  if (typeof expect !== 'undefined') {\n    expect().nothing();\n  }\n}\n\nexport function expectPromiseToFail(fn, done) {\n  fn().then(() => done.fail(), () => done());\n\n  if (typeof expect !== 'undefined') {\n    expect().nothing();\n  }\n}\nexport function expectArraysEqual(actual, expected) {\n  const exp = typeof expected === 'string' || typeof expected === 'number' || typeof expected === 'boolean' ? [expected] : expected;\n\n  if (isString(actual) || isString(actual[0]) || isString(expected) || isString(expected[0])) {\n    // tslint:disable-next-line: triple-equals\n    return expectArraysPredicate(actual, exp, (a, b) => a == b);\n  }\n\n  return expectArraysPredicate(actual, expected, (a, b) => areClose(a, b, 0));\n}\nexport function expectNumbersClose(a, e, epsilon) {\n  if (epsilon == null) {\n    epsilon = testEpsilon();\n  }\n\n  if (!areClose(a, e, epsilon)) {\n    throw new Error(`Numbers differ: actual === ${a}, expected === ${e}`);\n  }\n\n  if (typeof expect !== 'undefined') {\n    expect().nothing();\n  }\n}\n\nfunction areClose(a, e, epsilon) {\n  if (!isFinite(a) && !isFinite(e)) {\n    return true;\n  }\n\n  if (isNaN(a) || isNaN(e) || Math.abs(a - e) > epsilon) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function expectValuesInRange(actual, low, high) {\n  for (let i = 0; i < actual.length; i++) {\n    if (actual[i] < low || actual[i] > high) {\n      throw new Error(`Value out of range:${actual[i]} low: ${low}, high: ${high}`);\n    }\n  }\n}\nexport function expectArrayBuffersEqual(actual, expected) {\n  // Safari does not like comparing ArrayBuffers directly. Wrapping in\n  // a Float32Array solves this issue.\n  const actualArray = new Float32Array(actual);\n  const expectedArray = new Float32Array(expected);\n\n  if (actualArray.length !== expectedArray.length) {\n    throw new Error('Expected ArrayBuffer to be of length ' + `${expectedArray.length}, but it was ${actualArray.length}`);\n  }\n\n  for (let i = 0; i < expectedArray.length; i++) {\n    if (actualArray[i] !== expectedArray[i]) {\n      throw new Error(`Expected ArrayBuffer value at ${i} to be ` + `${expectedArray[i]} but got ${actualArray[i]} instead`);\n    }\n  }\n}\n/** Encodes strings into utf-8 bytes. */\n\nexport function encodeStrings(a) {\n  for (let i = 0; i < a.length; i++) {\n    const val = a[i];\n\n    if (Array.isArray(val)) {\n      encodeStrings(val);\n    } else {\n      a[i] = encodeString(val);\n    }\n  }\n\n  return a;\n}\n/** Creates an HTMLVideoElement with autoplay-friendly default settings. */\n\nexport function createVideoElement(source) {\n  const video = document.createElement('video');\n\n  if ('playsInline' in video) {\n    // tslint:disable-next-line:no-any\n    video.playsInline = true;\n  }\n\n  video.muted = true;\n  video.loop = true;\n  video.style.position = 'fixed';\n  video.style.left = '0px';\n  video.style.top = '0px';\n  video.preload = 'auto';\n  video.appendChild(source);\n  return new Promise(resolve => {\n    video.addEventListener('loadeddata', _ => resolve(video));\n    video.load();\n  });\n}\nexport function play(_x) {\n  return (_play = _play || _asyncToGenerator(function* (video) {\n    yield video.play();\n\n    if ('requestVideoFrameCallback' in video) {\n      yield new Promise(resolve => {\n        // tslint:disable-next-line:no-any\n        video.requestVideoFrameCallback(resolve);\n      });\n    }\n  })).apply(this, arguments);\n}","map":{"version":3,"names":["ENGINE","inferShape","arraysEqual","encodeString","flatten","isString","isTypedArray","TEST_EPSILON_FLOAT32","TEST_EPSILON_FLOAT16","expectArraysClose","actual","expected","epsilon","testEpsilon","expectArraysPredicate","a","b","areClose","backend","floatPrecision","predicate","checkClassType","aType","constructor","name","bType","Error","Array","isArray","actualShape","expectedShape","actualFlat","expectedFlat","length","i","e","expect","nothing","expectPromiseToFail","fn","done","then","fail","expectArraysEqual","exp","expectNumbersClose","isFinite","isNaN","Math","abs","expectValuesInRange","low","high","expectArrayBuffersEqual","actualArray","Float32Array","expectedArray","encodeStrings","val","createVideoElement","source","video","document","createElement","playsInline","muted","loop","style","position","left","top","preload","appendChild","Promise","resolve","addEventListener","_","load","play","requestVideoFrameCallback"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-core/dist/test_util.js"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from './engine';\nimport { inferShape } from './tensor_util_env';\nimport { arraysEqual, encodeString, flatten, isString, isTypedArray } from './util';\nconst TEST_EPSILON_FLOAT32 = 1e-3;\nexport const TEST_EPSILON_FLOAT16 = 1e-1;\nexport function expectArraysClose(actual, expected, epsilon) {\n    if (epsilon == null) {\n        epsilon = testEpsilon();\n    }\n    return expectArraysPredicate(actual, expected, (a, b) => areClose(a, b, epsilon));\n}\nexport function testEpsilon() {\n    return ENGINE.backend.floatPrecision() === 32 ? TEST_EPSILON_FLOAT32 :\n        TEST_EPSILON_FLOAT16;\n}\nfunction expectArraysPredicate(actual, expected, predicate) {\n    let checkClassType = true;\n    if (isTypedArray(actual) || isTypedArray(expected)) {\n        checkClassType = false;\n    }\n    if (isTypedArray(actual) && isTypedArray(expected)) {\n        checkClassType = true;\n    }\n    if (checkClassType) {\n        const aType = actual.constructor.name;\n        const bType = expected.constructor.name;\n        if (aType !== bType) {\n            throw new Error(`Arrays are of different type. Actual: ${aType}. ` +\n                `Expected: ${bType}`);\n        }\n    }\n    if (Array.isArray(actual) && Array.isArray(expected)) {\n        const actualShape = inferShape(actual);\n        const expectedShape = inferShape(expected);\n        if (!arraysEqual(actualShape, expectedShape)) {\n            throw new Error(`Arrays have different shapes. ` +\n                `Actual: [${actualShape}]. Expected: [${expectedShape}]`);\n        }\n    }\n    const actualFlat = isTypedArray(actual) ? actual : flatten(actual);\n    const expectedFlat = isTypedArray(expected) ?\n        expected :\n        flatten(expected);\n    if (actualFlat.length !== expectedFlat.length) {\n        throw new Error(`Arrays have different lengths actual: ${actualFlat.length} vs ` +\n            `expected: ${expectedFlat.length}.\\n` +\n            `Actual:   ${actualFlat}.\\n` +\n            `Expected: ${expectedFlat}.`);\n    }\n    for (let i = 0; i < expectedFlat.length; ++i) {\n        const a = actualFlat[i];\n        const e = expectedFlat[i];\n        if (!predicate(a, e)) {\n            throw new Error(`Arrays differ: actual[${i}] = ${a}, expected[${i}] = ${e}.\\n` +\n                `Actual:   ${actualFlat}.\\n` +\n                `Expected: ${expectedFlat}.`);\n        }\n    }\n    if (typeof expect !== 'undefined') {\n        expect().nothing();\n    }\n}\nexport function expectPromiseToFail(fn, done) {\n    fn().then(() => done.fail(), () => done());\n    if (typeof expect !== 'undefined') {\n        expect().nothing();\n    }\n}\nexport function expectArraysEqual(actual, expected) {\n    const exp = typeof expected === 'string' || typeof expected === 'number' ||\n        typeof expected === 'boolean' ?\n        [expected] :\n        expected;\n    if (isString(actual) || isString(actual[0]) ||\n        isString(expected) || isString(expected[0])) {\n        // tslint:disable-next-line: triple-equals\n        return expectArraysPredicate(actual, exp, (a, b) => a == b);\n    }\n    return expectArraysPredicate(actual, expected, (a, b) => areClose(a, b, 0));\n}\nexport function expectNumbersClose(a, e, epsilon) {\n    if (epsilon == null) {\n        epsilon = testEpsilon();\n    }\n    if (!areClose(a, e, epsilon)) {\n        throw new Error(`Numbers differ: actual === ${a}, expected === ${e}`);\n    }\n    if (typeof expect !== 'undefined') {\n        expect().nothing();\n    }\n}\nfunction areClose(a, e, epsilon) {\n    if (!isFinite(a) && !isFinite(e)) {\n        return true;\n    }\n    if (isNaN(a) || isNaN(e) || Math.abs(a - e) > epsilon) {\n        return false;\n    }\n    return true;\n}\nexport function expectValuesInRange(actual, low, high) {\n    for (let i = 0; i < actual.length; i++) {\n        if (actual[i] < low || actual[i] > high) {\n            throw new Error(`Value out of range:${actual[i]} low: ${low}, high: ${high}`);\n        }\n    }\n}\nexport function expectArrayBuffersEqual(actual, expected) {\n    // Safari does not like comparing ArrayBuffers directly. Wrapping in\n    // a Float32Array solves this issue.\n    const actualArray = new Float32Array(actual);\n    const expectedArray = new Float32Array(expected);\n    if (actualArray.length !== expectedArray.length) {\n        throw new Error('Expected ArrayBuffer to be of length ' +\n            `${expectedArray.length}, but it was ${actualArray.length}`);\n    }\n    for (let i = 0; i < expectedArray.length; i++) {\n        if (actualArray[i] !== expectedArray[i]) {\n            throw new Error(`Expected ArrayBuffer value at ${i} to be ` +\n                `${expectedArray[i]} but got ${actualArray[i]} instead`);\n        }\n    }\n}\n/** Encodes strings into utf-8 bytes. */\nexport function encodeStrings(a) {\n    for (let i = 0; i < a.length; i++) {\n        const val = a[i];\n        if (Array.isArray(val)) {\n            encodeStrings(val);\n        }\n        else {\n            a[i] = encodeString(val);\n        }\n    }\n    return a;\n}\n/** Creates an HTMLVideoElement with autoplay-friendly default settings. */\nexport function createVideoElement(source) {\n    const video = document.createElement('video');\n    if ('playsInline' in video) {\n        // tslint:disable-next-line:no-any\n        video.playsInline = true;\n    }\n    video.muted = true;\n    video.loop = true;\n    video.style.position = 'fixed';\n    video.style.left = '0px';\n    video.style.top = '0px';\n    video.preload = 'auto';\n    video.appendChild(source);\n    return new Promise(resolve => {\n        video.addEventListener('loadeddata', _ => resolve(video));\n        video.load();\n    });\n}\nexport async function play(video) {\n    await video.play();\n    if ('requestVideoFrameCallback' in video) {\n        await new Promise(resolve => {\n            // tslint:disable-next-line:no-any\n            video.requestVideoFrameCallback(resolve);\n        });\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}