{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { localResponseNormalization } from '../../ops/local_response_normalization';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.localResponseNormalization = function (depthRadius, bias, alpha, beta) {\n  this.throwIfDisposed();\n  return localResponseNormalization(this, depthRadius, bias, alpha, beta);\n};","map":{"version":3,"names":["localResponseNormalization","getGlobalTensorClass","prototype","depthRadius","bias","alpha","beta","throwIfDisposed"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/local_response_normalization.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { localResponseNormalization } from '../../ops/local_response_normalization';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.localResponseNormalization =\n    function (depthRadius, bias, alpha, beta) {\n        this.throwIfDisposed();\n        return localResponseNormalization(this, depthRadius, bias, alpha, beta);\n    };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,0BAAT,QAA2C,wCAA3C;AACA,SAASC,oBAAT,QAAqC,cAArC;;AACAA,oBAAoB,GAAGC,SAAvB,CAAiCF,0BAAjC,GACI,UAAUG,WAAV,EAAuBC,IAAvB,EAA6BC,KAA7B,EAAoCC,IAApC,EAA0C;EACtC,KAAKC,eAAL;EACA,OAAOP,0BAA0B,CAAC,IAAD,EAAOG,WAAP,EAAoBC,IAApB,EAA0BC,KAA1B,EAAiCC,IAAjC,CAAjC;AACH,CAJL"},"metadata":{},"sourceType":"module"}