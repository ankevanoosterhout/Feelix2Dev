{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getVecChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport class TransposePackedProgram {\n  constructor(aShape, newDim) {\n    this.variableNames = ['A'];\n    this.packedInputs = true;\n    this.packedOutput = true;\n    const outputShape = new Array(aShape.length);\n\n    for (let i = 0; i < outputShape.length; i++) {\n      outputShape[i] = aShape[newDim[i]];\n    }\n\n    this.outputShape = outputShape;\n    this.rank = outputShape.length;\n\n    if (this.rank > 6) {\n      throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);\n    }\n\n    const dtype = getCoordsDataType(this.rank);\n    const outputOrder = getVecChannels('rc', this.rank);\n    const switchedOrder = new Array(this.rank);\n\n    for (let i = 0; i < newDim.length; i++) {\n      switchedOrder[newDim[i]] = outputOrder[i];\n    }\n\n    const innerDims = `vec2(${switchedOrder.slice(-2).join()})`;\n    const nextColumn = `++${outputOrder[this.rank - 1]} < ${outputShape[this.rank - 1]}`;\n    const getc = `getChannel(getA(${switchedOrder.join()}), ${innerDims})`;\n    this.userCode = `\n    void main() {\n      ${dtype} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${getc};\n      if(${nextColumn}) {\n        result[1] = ${getc};\n      }\n      --${outputOrder[this.rank - 1]};\n      if(++${outputOrder[this.rank - 2]} < ${outputShape[this.rank - 2]}) {\n        result[2] = ${getc};\n        if(${nextColumn}) {\n          result[3] = ${getc};\n        }\n      }\n      setOutput(result);\n    }\n    `;\n  }\n\n}","map":{"version":3,"names":["getVecChannels","getCoordsDataType","TransposePackedProgram","constructor","aShape","newDim","variableNames","packedInputs","packedOutput","outputShape","Array","length","i","rank","Error","dtype","outputOrder","switchedOrder","innerDims","slice","join","nextColumn","getc","userCode"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-webgl/dist/transpose_packed_gpu.js"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getVecChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport class TransposePackedProgram {\n    constructor(aShape, newDim) {\n        this.variableNames = ['A'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        const outputShape = new Array(aShape.length);\n        for (let i = 0; i < outputShape.length; i++) {\n            outputShape[i] = aShape[newDim[i]];\n        }\n        this.outputShape = outputShape;\n        this.rank = outputShape.length;\n        if (this.rank > 6) {\n            throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);\n        }\n        const dtype = getCoordsDataType(this.rank);\n        const outputOrder = getVecChannels('rc', this.rank);\n        const switchedOrder = new Array(this.rank);\n        for (let i = 0; i < newDim.length; i++) {\n            switchedOrder[newDim[i]] = outputOrder[i];\n        }\n        const innerDims = `vec2(${switchedOrder.slice(-2).join()})`;\n        const nextColumn = `++${outputOrder[this.rank - 1]} < ${outputShape[this.rank - 1]}`;\n        const getc = `getChannel(getA(${switchedOrder.join()}), ${innerDims})`;\n        this.userCode = `\n    void main() {\n      ${dtype} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${getc};\n      if(${nextColumn}) {\n        result[1] = ${getc};\n      }\n      --${outputOrder[this.rank - 1]};\n      if(++${outputOrder[this.rank - 2]} < ${outputShape[this.rank - 2]}) {\n        result[2] = ${getc};\n        if(${nextColumn}) {\n          result[3] = ${getc};\n        }\n      }\n      setOutput(result);\n    }\n    `;\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,cAAT,QAA+B,gBAA/B;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,OAAO,MAAMC,sBAAN,CAA6B;EAChCC,WAAW,CAACC,MAAD,EAASC,MAAT,EAAiB;IACxB,KAAKC,aAAL,GAAqB,CAAC,GAAD,CAArB;IACA,KAAKC,YAAL,GAAoB,IAApB;IACA,KAAKC,YAAL,GAAoB,IAApB;IACA,MAAMC,WAAW,GAAG,IAAIC,KAAJ,CAAUN,MAAM,CAACO,MAAjB,CAApB;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,WAAW,CAACE,MAAhC,EAAwCC,CAAC,EAAzC,EAA6C;MACzCH,WAAW,CAACG,CAAD,CAAX,GAAiBR,MAAM,CAACC,MAAM,CAACO,CAAD,CAAP,CAAvB;IACH;;IACD,KAAKH,WAAL,GAAmBA,WAAnB;IACA,KAAKI,IAAL,GAAYJ,WAAW,CAACE,MAAxB;;IACA,IAAI,KAAKE,IAAL,GAAY,CAAhB,EAAmB;MACf,MAAMC,KAAK,CAAE,6BAA4B,KAAKD,IAAK,wBAAxC,CAAX;IACH;;IACD,MAAME,KAAK,GAAGd,iBAAiB,CAAC,KAAKY,IAAN,CAA/B;IACA,MAAMG,WAAW,GAAGhB,cAAc,CAAC,IAAD,EAAO,KAAKa,IAAZ,CAAlC;IACA,MAAMI,aAAa,GAAG,IAAIP,KAAJ,CAAU,KAAKG,IAAf,CAAtB;;IACA,KAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,MAAM,CAACM,MAA3B,EAAmCC,CAAC,EAApC,EAAwC;MACpCK,aAAa,CAACZ,MAAM,CAACO,CAAD,CAAP,CAAb,GAA2BI,WAAW,CAACJ,CAAD,CAAtC;IACH;;IACD,MAAMM,SAAS,GAAI,QAAOD,aAAa,CAACE,KAAd,CAAoB,CAAC,CAArB,EAAwBC,IAAxB,EAA+B,GAAzD;IACA,MAAMC,UAAU,GAAI,KAAIL,WAAW,CAAC,KAAKH,IAAL,GAAY,CAAb,CAAgB,MAAKJ,WAAW,CAAC,KAAKI,IAAL,GAAY,CAAb,CAAgB,EAAnF;IACA,MAAMS,IAAI,GAAI,mBAAkBL,aAAa,CAACG,IAAd,EAAqB,MAAKF,SAAU,GAApE;IACA,KAAKK,QAAL,GAAiB;AACzB;AACA,QAAQR,KAAM;AACd;AACA,oBAAoBO,IAAK;AACzB,WAAWD,UAAW;AACtB,sBAAsBC,IAAK;AAC3B;AACA,UAAUN,WAAW,CAAC,KAAKH,IAAL,GAAY,CAAb,CAAgB;AACrC,aAAaG,WAAW,CAAC,KAAKH,IAAL,GAAY,CAAb,CAAgB,MAAKJ,WAAW,CAAC,KAAKI,IAAL,GAAY,CAAb,CAAgB;AACxE,sBAAsBS,IAAK;AAC3B,aAAaD,UAAW;AACxB,wBAAwBC,IAAK;AAC7B;AACA;AACA;AACA;AACA,KAjBQ;EAkBH;;AAzC+B"},"metadata":{},"sourceType":"module"}