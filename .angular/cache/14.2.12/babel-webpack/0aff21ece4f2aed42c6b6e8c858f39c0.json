{"ast":null,"code":"/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport class ReverseProgram {\n  constructor(xShape, axis) {\n    this.variableNames = ['x'];\n    const rank = xShape.length;\n\n    if (rank > 4) {\n      throw new Error(`WebGL backend: Reverse of rank-${rank} tensor is not yet supported`);\n    }\n\n    this.outputShape = xShape;\n\n    if (rank === 1) {\n      this.userCode = `\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${xShape[0]} - coord - 1));\n        }\n      `;\n      return;\n    }\n\n    const getInCoord = i => {\n      if (axis.indexOf(i) !== -1 && xShape[i] !== 1) {\n        return `${xShape[i]} - coords[${i}] - 1`;\n      }\n\n      return `coords[${i}]`;\n    };\n\n    const inCoords = xShape.map((_, i) => getInCoord(i)).join(',');\n    const type = getCoordsDataType(rank);\n    this.userCode = `\n      void main() {\n        ${type} coords = getOutputCoords();\n        setOutput(getX(${inCoords}));\n      }\n    `;\n  }\n\n}","map":{"version":3,"names":["getCoordsDataType","ReverseProgram","constructor","xShape","axis","variableNames","rank","length","Error","outputShape","userCode","getInCoord","i","indexOf","inCoords","map","_","join","type"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-webgl/dist/reverse_gpu.js"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport class ReverseProgram {\n    constructor(xShape, axis) {\n        this.variableNames = ['x'];\n        const rank = xShape.length;\n        if (rank > 4) {\n            throw new Error(`WebGL backend: Reverse of rank-${rank} tensor is not yet supported`);\n        }\n        this.outputShape = xShape;\n        if (rank === 1) {\n            this.userCode = `\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${xShape[0]} - coord - 1));\n        }\n      `;\n            return;\n        }\n        const getInCoord = (i) => {\n            if (axis.indexOf(i) !== -1 && xShape[i] !== 1) {\n                return `${xShape[i]} - coords[${i}] - 1`;\n            }\n            return `coords[${i}]`;\n        };\n        const inCoords = xShape.map((_, i) => getInCoord(i)).join(',');\n        const type = getCoordsDataType(rank);\n        this.userCode = `\n      void main() {\n        ${type} coords = getOutputCoords();\n        setOutput(getX(${inCoords}));\n      }\n    `;\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,iBAAT,QAAkC,mBAAlC;AACA,OAAO,MAAMC,cAAN,CAAqB;EACxBC,WAAW,CAACC,MAAD,EAASC,IAAT,EAAe;IACtB,KAAKC,aAAL,GAAqB,CAAC,GAAD,CAArB;IACA,MAAMC,IAAI,GAAGH,MAAM,CAACI,MAApB;;IACA,IAAID,IAAI,GAAG,CAAX,EAAc;MACV,MAAM,IAAIE,KAAJ,CAAW,kCAAiCF,IAAK,8BAAjD,CAAN;IACH;;IACD,KAAKG,WAAL,GAAmBN,MAAnB;;IACA,IAAIG,IAAI,KAAK,CAAb,EAAgB;MACZ,KAAKI,QAAL,GAAiB;AAC7B;AACA;AACA,2BAA2BP,MAAM,CAAC,CAAD,CAAI;AACrC;AACA,OALY;MAMA;IACH;;IACD,MAAMQ,UAAU,GAAIC,CAAD,IAAO;MACtB,IAAIR,IAAI,CAACS,OAAL,CAAaD,CAAb,MAAoB,CAAC,CAArB,IAA0BT,MAAM,CAACS,CAAD,CAAN,KAAc,CAA5C,EAA+C;QAC3C,OAAQ,GAAET,MAAM,CAACS,CAAD,CAAI,aAAYA,CAAE,OAAlC;MACH;;MACD,OAAQ,UAASA,CAAE,GAAnB;IACH,CALD;;IAMA,MAAME,QAAQ,GAAGX,MAAM,CAACY,GAAP,CAAW,CAACC,CAAD,EAAIJ,CAAJ,KAAUD,UAAU,CAACC,CAAD,CAA/B,EAAoCK,IAApC,CAAyC,GAAzC,CAAjB;IACA,MAAMC,IAAI,GAAGlB,iBAAiB,CAACM,IAAD,CAA9B;IACA,KAAKI,QAAL,GAAiB;AACzB;AACA,UAAUQ,IAAK;AACf,yBAAyBJ,QAAS;AAClC;AACA,KALQ;EAMH;;AA/BuB"},"metadata":{},"sourceType":"module"}