{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Softmax, util } from '@tensorflow/tfjs-core';\nimport { exp } from './Exp';\nimport { max } from './Max';\nimport { realDiv } from './RealDiv';\nimport { reshape } from './Reshape';\nimport { sub } from './Sub';\nimport { sum } from './Sum';\nexport function softmax(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    logits\n  } = inputs;\n  const {\n    dim\n  } = attrs;\n  const axes = util.parseAxisParam([dim], logits.shape);\n  const maxLogit = max({\n    inputs: {\n      x: logits\n    },\n    backend,\n    attrs: {\n      reductionIndices: axes,\n      keepDims: false\n    }\n  });\n  const expandedShape = backend_util.expandShapeToKeepDim(maxLogit.shape, axes);\n  const maxLogitsReshaped = reshape({\n    inputs: {\n      x: maxLogit\n    },\n    backend,\n    attrs: {\n      shape: expandedShape\n    }\n  });\n  const a = sub({\n    inputs: {\n      a: logits,\n      b: maxLogitsReshaped\n    },\n    backend\n  });\n  const b = exp({\n    inputs: {\n      x: a\n    },\n    backend\n  });\n  const sumExp = sum({\n    inputs: {\n      x: b\n    },\n    backend,\n    attrs: {\n      axis: axes,\n      keepDims: false\n    }\n  });\n  const sumExpReshaped = reshape({\n    inputs: {\n      x: sumExp\n    },\n    backend,\n    attrs: {\n      shape: expandedShape\n    }\n  });\n  const res = realDiv({\n    inputs: {\n      a: b,\n      b: sumExpReshaped\n    },\n    backend\n  });\n  backend.disposeIntermediateTensorInfo(maxLogit);\n  backend.disposeIntermediateTensorInfo(maxLogitsReshaped);\n  backend.disposeIntermediateTensorInfo(a);\n  backend.disposeIntermediateTensorInfo(b);\n  backend.disposeIntermediateTensorInfo(sumExp);\n  backend.disposeIntermediateTensorInfo(sumExpReshaped);\n  return res;\n}\nexport const softmaxConfig = {\n  kernelName: Softmax,\n  backendName: 'webgl',\n  kernelFunc: softmax\n};","map":{"version":3,"names":["backend_util","Softmax","util","exp","max","realDiv","reshape","sub","sum","softmax","args","inputs","backend","attrs","logits","dim","axes","parseAxisParam","shape","maxLogit","x","reductionIndices","keepDims","expandedShape","expandShapeToKeepDim","maxLogitsReshaped","a","b","sumExp","axis","sumExpReshaped","res","disposeIntermediateTensorInfo","softmaxConfig","kernelName","backendName","kernelFunc"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Softmax.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Softmax, util } from '@tensorflow/tfjs-core';\nimport { exp } from './Exp';\nimport { max } from './Max';\nimport { realDiv } from './RealDiv';\nimport { reshape } from './Reshape';\nimport { sub } from './Sub';\nimport { sum } from './Sum';\nexport function softmax(args) {\n    const { inputs, backend, attrs } = args;\n    const { logits } = inputs;\n    const { dim } = attrs;\n    const axes = util.parseAxisParam([dim], logits.shape);\n    const maxLogit = max({\n        inputs: { x: logits },\n        backend,\n        attrs: { reductionIndices: axes, keepDims: false }\n    });\n    const expandedShape = backend_util.expandShapeToKeepDim(maxLogit.shape, axes);\n    const maxLogitsReshaped = reshape({ inputs: { x: maxLogit }, backend, attrs: { shape: expandedShape } });\n    const a = sub({ inputs: { a: logits, b: maxLogitsReshaped }, backend });\n    const b = exp({ inputs: { x: a }, backend });\n    const sumExp = sum({ inputs: { x: b }, backend, attrs: { axis: axes, keepDims: false } });\n    const sumExpReshaped = reshape({ inputs: { x: sumExp }, backend, attrs: { shape: expandedShape } });\n    const res = realDiv({ inputs: { a: b, b: sumExpReshaped }, backend });\n    backend.disposeIntermediateTensorInfo(maxLogit);\n    backend.disposeIntermediateTensorInfo(maxLogitsReshaped);\n    backend.disposeIntermediateTensorInfo(a);\n    backend.disposeIntermediateTensorInfo(b);\n    backend.disposeIntermediateTensorInfo(sumExp);\n    backend.disposeIntermediateTensorInfo(sumExpReshaped);\n    return res;\n}\nexport const softmaxConfig = {\n    kernelName: Softmax,\n    backendName: 'webgl',\n    kernelFunc: softmax\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAT,EAAuBC,OAAvB,EAAgCC,IAAhC,QAA4C,uBAA5C;AACA,SAASC,GAAT,QAAoB,OAApB;AACA,SAASC,GAAT,QAAoB,OAApB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,GAAT,QAAoB,OAApB;AACA,SAASC,GAAT,QAAoB,OAApB;AACA,OAAO,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;EAC1B,MAAM;IAAEC,MAAF;IAAUC,OAAV;IAAmBC;EAAnB,IAA6BH,IAAnC;EACA,MAAM;IAAEI;EAAF,IAAaH,MAAnB;EACA,MAAM;IAAEI;EAAF,IAAUF,KAAhB;EACA,MAAMG,IAAI,GAAGd,IAAI,CAACe,cAAL,CAAoB,CAACF,GAAD,CAApB,EAA2BD,MAAM,CAACI,KAAlC,CAAb;EACA,MAAMC,QAAQ,GAAGf,GAAG,CAAC;IACjBO,MAAM,EAAE;MAAES,CAAC,EAAEN;IAAL,CADS;IAEjBF,OAFiB;IAGjBC,KAAK,EAAE;MAAEQ,gBAAgB,EAAEL,IAApB;MAA0BM,QAAQ,EAAE;IAApC;EAHU,CAAD,CAApB;EAKA,MAAMC,aAAa,GAAGvB,YAAY,CAACwB,oBAAb,CAAkCL,QAAQ,CAACD,KAA3C,EAAkDF,IAAlD,CAAtB;EACA,MAAMS,iBAAiB,GAAGnB,OAAO,CAAC;IAAEK,MAAM,EAAE;MAAES,CAAC,EAAED;IAAL,CAAV;IAA2BP,OAA3B;IAAoCC,KAAK,EAAE;MAAEK,KAAK,EAAEK;IAAT;EAA3C,CAAD,CAAjC;EACA,MAAMG,CAAC,GAAGnB,GAAG,CAAC;IAAEI,MAAM,EAAE;MAAEe,CAAC,EAAEZ,MAAL;MAAaa,CAAC,EAAEF;IAAhB,CAAV;IAA+Cb;EAA/C,CAAD,CAAb;EACA,MAAMe,CAAC,GAAGxB,GAAG,CAAC;IAAEQ,MAAM,EAAE;MAAES,CAAC,EAAEM;IAAL,CAAV;IAAoBd;EAApB,CAAD,CAAb;EACA,MAAMgB,MAAM,GAAGpB,GAAG,CAAC;IAAEG,MAAM,EAAE;MAAES,CAAC,EAAEO;IAAL,CAAV;IAAoBf,OAApB;IAA6BC,KAAK,EAAE;MAAEgB,IAAI,EAAEb,IAAR;MAAcM,QAAQ,EAAE;IAAxB;EAApC,CAAD,CAAlB;EACA,MAAMQ,cAAc,GAAGxB,OAAO,CAAC;IAAEK,MAAM,EAAE;MAAES,CAAC,EAAEQ;IAAL,CAAV;IAAyBhB,OAAzB;IAAkCC,KAAK,EAAE;MAAEK,KAAK,EAAEK;IAAT;EAAzC,CAAD,CAA9B;EACA,MAAMQ,GAAG,GAAG1B,OAAO,CAAC;IAAEM,MAAM,EAAE;MAAEe,CAAC,EAAEC,CAAL;MAAQA,CAAC,EAAEG;IAAX,CAAV;IAAuClB;EAAvC,CAAD,CAAnB;EACAA,OAAO,CAACoB,6BAAR,CAAsCb,QAAtC;EACAP,OAAO,CAACoB,6BAAR,CAAsCP,iBAAtC;EACAb,OAAO,CAACoB,6BAAR,CAAsCN,CAAtC;EACAd,OAAO,CAACoB,6BAAR,CAAsCL,CAAtC;EACAf,OAAO,CAACoB,6BAAR,CAAsCJ,MAAtC;EACAhB,OAAO,CAACoB,6BAAR,CAAsCF,cAAtC;EACA,OAAOC,GAAP;AACH;AACD,OAAO,MAAME,aAAa,GAAG;EACzBC,UAAU,EAAEjC,OADa;EAEzBkC,WAAW,EAAE,OAFY;EAGzBC,UAAU,EAAE3B;AAHa,CAAtB"},"metadata":{},"sourceType":"module"}