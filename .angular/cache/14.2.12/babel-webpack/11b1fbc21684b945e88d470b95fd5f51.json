{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\nvar _ref;\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getParamValue } from './utils';\n\nfunction nmsParams(node, tensorMap, context) {\n  const boxes = getParamValue('boxes', node, tensorMap, context);\n  const scores = getParamValue('scores', node, tensorMap, context);\n  const maxOutputSize = getParamValue('maxOutputSize', node, tensorMap, context);\n  const iouThreshold = getParamValue('iouThreshold', node, tensorMap, context);\n  const scoreThreshold = getParamValue('scoreThreshold', node, tensorMap, context);\n  const softNmsSigma = getParamValue('softNmsSigma', node, tensorMap, context);\n  return {\n    boxes,\n    scores,\n    maxOutputSize,\n    iouThreshold,\n    scoreThreshold,\n    softNmsSigma\n  };\n}\n\nexport const executeOp = function executeOp(_x, _x2, _x3, _x4) {\n  return (_ref = _ref || _asyncToGenerator(function* (node, tensorMap, context, resourceManager, ops = tfOps) {\n    switch (node.op) {\n      case 'NonMaxSuppressionV5':\n        {\n          const {\n            boxes,\n            scores,\n            maxOutputSize,\n            iouThreshold,\n            scoreThreshold,\n            softNmsSigma\n          } = nmsParams(node, tensorMap, context);\n          const result = yield ops.image.nonMaxSuppressionWithScoreAsync(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma);\n          return [result.selectedIndices, result.selectedScores];\n        }\n\n      case 'NonMaxSuppressionV4':\n        {\n          const {\n            boxes,\n            scores,\n            maxOutputSize,\n            iouThreshold,\n            scoreThreshold\n          } = nmsParams(node, tensorMap, context);\n          const padToMaxOutputSize = getParamValue('padToMaxOutputSize', node, tensorMap, context);\n          const result = yield ops.image.nonMaxSuppressionPaddedAsync(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, padToMaxOutputSize);\n          return [result.selectedIndices, result.validOutputs];\n        }\n\n      case 'NonMaxSuppressionV3':\n      case 'NonMaxSuppressionV2':\n        {\n          const {\n            boxes,\n            scores,\n            maxOutputSize,\n            iouThreshold,\n            scoreThreshold\n          } = nmsParams(node, tensorMap, context);\n          return [yield ops.image.nonMaxSuppressionAsync(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold)];\n        }\n\n      case 'Where':\n        {\n          const condition = ops.cast(getParamValue('condition', node, tensorMap, context), 'bool');\n          const result = [yield ops.whereAsync(condition)];\n          condition.dispose();\n          return result;\n        }\n\n      case 'ListDiff':\n        {\n          return ops.setdiff1dAsync(getParamValue('x', node, tensorMap, context), getParamValue('y', node, tensorMap, context));\n        }\n\n      default:\n        throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n  })).apply(this, arguments);\n};\nexport const CATEGORY = 'dynamic';","map":{"version":3,"names":["tfOps","getParamValue","nmsParams","node","tensorMap","context","boxes","scores","maxOutputSize","iouThreshold","scoreThreshold","softNmsSigma","executeOp","resourceManager","ops","op","result","image","nonMaxSuppressionWithScoreAsync","selectedIndices","selectedScores","padToMaxOutputSize","nonMaxSuppressionPaddedAsync","validOutputs","nonMaxSuppressionAsync","condition","cast","whereAsync","dispose","setdiff1dAsync","TypeError","CATEGORY"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-converter/dist/operations/executors/dynamic_executor.js"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\nimport { getParamValue } from './utils';\nfunction nmsParams(node, tensorMap, context) {\n    const boxes = getParamValue('boxes', node, tensorMap, context);\n    const scores = getParamValue('scores', node, tensorMap, context);\n    const maxOutputSize = getParamValue('maxOutputSize', node, tensorMap, context);\n    const iouThreshold = getParamValue('iouThreshold', node, tensorMap, context);\n    const scoreThreshold = getParamValue('scoreThreshold', node, tensorMap, context);\n    const softNmsSigma = getParamValue('softNmsSigma', node, tensorMap, context);\n    return {\n        boxes,\n        scores,\n        maxOutputSize,\n        iouThreshold,\n        scoreThreshold,\n        softNmsSigma\n    };\n}\nexport const executeOp = async (node, tensorMap, context, resourceManager, ops = tfOps) => {\n    switch (node.op) {\n        case 'NonMaxSuppressionV5': {\n            const { boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma } = nmsParams(node, tensorMap, context);\n            const result = await ops.image.nonMaxSuppressionWithScoreAsync(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma);\n            return [result.selectedIndices, result.selectedScores];\n        }\n        case 'NonMaxSuppressionV4': {\n            const { boxes, scores, maxOutputSize, iouThreshold, scoreThreshold } = nmsParams(node, tensorMap, context);\n            const padToMaxOutputSize = getParamValue('padToMaxOutputSize', node, tensorMap, context);\n            const result = await ops.image.nonMaxSuppressionPaddedAsync(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold, padToMaxOutputSize);\n            return [result.selectedIndices, result.validOutputs];\n        }\n        case 'NonMaxSuppressionV3':\n        case 'NonMaxSuppressionV2': {\n            const { boxes, scores, maxOutputSize, iouThreshold, scoreThreshold } = nmsParams(node, tensorMap, context);\n            return [await ops.image.nonMaxSuppressionAsync(boxes, scores, maxOutputSize, iouThreshold, scoreThreshold)];\n        }\n        case 'Where': {\n            const condition = ops.cast(getParamValue('condition', node, tensorMap, context), 'bool');\n            const result = [await ops.whereAsync(condition)];\n            condition.dispose();\n            return result;\n        }\n        case 'ListDiff': {\n            return ops.setdiff1dAsync(getParamValue('x', node, tensorMap, context), getParamValue('y', node, tensorMap, context));\n        }\n        default:\n            throw TypeError(`Node type ${node.op} is not implemented`);\n    }\n};\nexport const CATEGORY = 'dynamic';\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}