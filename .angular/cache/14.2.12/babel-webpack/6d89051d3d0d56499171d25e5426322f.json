{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AddN } from '../kernel_names';\nexport const addNGradConfig = {\n  kernelName: AddN,\n  saveAllInputs: true,\n  gradFunc: (dy, saved) => {\n    const ders = {};\n    saved.forEach((_, i) => {\n      ders[i] = () => dy.clone();\n    });\n    return ders;\n  }\n};","map":{"version":3,"names":["AddN","addNGradConfig","kernelName","saveAllInputs","gradFunc","dy","saved","ders","forEach","_","i","clone"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-core/dist/gradients/AddN_grad.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { AddN } from '../kernel_names';\nexport const addNGradConfig = {\n    kernelName: AddN,\n    saveAllInputs: true,\n    gradFunc: (dy, saved) => {\n        const ders = {};\n        saved.forEach((_, i) => {\n            ders[i] = () => dy.clone();\n        });\n        return ders;\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,IAAT,QAAqB,iBAArB;AACA,OAAO,MAAMC,cAAc,GAAG;EAC1BC,UAAU,EAAEF,IADc;EAE1BG,aAAa,EAAE,IAFW;EAG1BC,QAAQ,EAAE,CAACC,EAAD,EAAKC,KAAL,KAAe;IACrB,MAAMC,IAAI,GAAG,EAAb;IACAD,KAAK,CAACE,OAAN,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAU;MACpBH,IAAI,CAACG,CAAD,CAAJ,GAAU,MAAML,EAAE,CAACM,KAAH,EAAhB;IACH,CAFD;IAGA,OAAOJ,IAAP;EACH;AATyB,CAAvB"},"metadata":{},"sourceType":"module"}