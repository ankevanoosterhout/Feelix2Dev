{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Real } from '@tensorflow/tfjs-core';\nexport function real(args) {\n  const {\n    inputs,\n    backend\n  } = args;\n  const {\n    input\n  } = inputs;\n  const real = backend.data.get(input.dataId).complexTensorInfos.real;\n  const realVal = backend.data.get(real.dataId).values; // When complex tensor is disposed, its underlying parts will be disposed too.\n  // Make new tensor out of the real value of the complex. This makes sure the\n  // value is still accessible even if complex tensor is disposed.\n\n  return backend.makeTensorInfo(real.shape, real.dtype, realVal);\n}\nexport const realConfig = {\n  kernelName: Real,\n  backendName: 'cpu',\n  kernelFunc: real\n};","map":{"version":3,"names":["Real","real","args","inputs","backend","input","data","get","dataId","complexTensorInfos","realVal","values","makeTensorInfo","shape","dtype","realConfig","kernelName","backendName","kernelFunc"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Real.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Real } from '@tensorflow/tfjs-core';\nexport function real(args) {\n    const { inputs, backend } = args;\n    const { input } = inputs;\n    const real = backend.data.get(input.dataId).complexTensorInfos.real;\n    const realVal = backend.data.get(real.dataId).values;\n    // When complex tensor is disposed, its underlying parts will be disposed too.\n    // Make new tensor out of the real value of the complex. This makes sure the\n    // value is still accessible even if complex tensor is disposed.\n    return backend.makeTensorInfo(real.shape, real.dtype, realVal);\n}\nexport const realConfig = {\n    kernelName: Real,\n    backendName: 'cpu',\n    kernelFunc: real\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,IAAT,QAAqB,uBAArB;AACA,OAAO,SAASC,IAAT,CAAcC,IAAd,EAAoB;EACvB,MAAM;IAAEC,MAAF;IAAUC;EAAV,IAAsBF,IAA5B;EACA,MAAM;IAAEG;EAAF,IAAYF,MAAlB;EACA,MAAMF,IAAI,GAAGG,OAAO,CAACE,IAAR,CAAaC,GAAb,CAAiBF,KAAK,CAACG,MAAvB,EAA+BC,kBAA/B,CAAkDR,IAA/D;EACA,MAAMS,OAAO,GAAGN,OAAO,CAACE,IAAR,CAAaC,GAAb,CAAiBN,IAAI,CAACO,MAAtB,EAA8BG,MAA9C,CAJuB,CAKvB;EACA;EACA;;EACA,OAAOP,OAAO,CAACQ,cAAR,CAAuBX,IAAI,CAACY,KAA5B,EAAmCZ,IAAI,CAACa,KAAxC,EAA+CJ,OAA/C,CAAP;AACH;AACD,OAAO,MAAMK,UAAU,GAAG;EACtBC,UAAU,EAAEhB,IADU;EAEtBiB,WAAW,EAAE,KAFS;EAGtBC,UAAU,EAAEjB;AAHU,CAAnB"},"metadata":{},"sourceType":"module"}