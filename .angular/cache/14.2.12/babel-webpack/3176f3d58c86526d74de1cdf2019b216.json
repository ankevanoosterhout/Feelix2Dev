{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LogSoftmax } from '../kernel_names';\nimport { exp } from '../ops/exp';\nimport { mul } from '../ops/mul';\nimport { sub } from '../ops/sub';\nimport { sum } from '../ops/sum';\nexport const logSoftmaxGradConfig = {\n  kernelName: LogSoftmax,\n  inputsToSave: [],\n  outputsToSave: [true],\n  gradFunc: (dy, saved, attrs) => {\n    const [value] = saved;\n    const {\n      axis\n    } = attrs;\n    return {\n      logits: () => {\n        const keepDims = true;\n        const softmax = exp(value);\n        return sub(dy, mul(sum(dy, axis, keepDims), softmax));\n      }\n    };\n  }\n};","map":{"version":3,"names":["LogSoftmax","exp","mul","sub","sum","logSoftmaxGradConfig","kernelName","inputsToSave","outputsToSave","gradFunc","dy","saved","attrs","value","axis","logits","keepDims","softmax"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-core/dist/gradients/LogSoftmax_grad.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LogSoftmax } from '../kernel_names';\nimport { exp } from '../ops/exp';\nimport { mul } from '../ops/mul';\nimport { sub } from '../ops/sub';\nimport { sum } from '../ops/sum';\nexport const logSoftmaxGradConfig = {\n    kernelName: LogSoftmax,\n    inputsToSave: [],\n    outputsToSave: [true],\n    gradFunc: (dy, saved, attrs) => {\n        const [value] = saved;\n        const { axis } = attrs;\n        return {\n            logits: () => {\n                const keepDims = true;\n                const softmax = exp(value);\n                return sub(dy, mul(sum(dy, axis, keepDims), softmax));\n            }\n        };\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAT,QAA2B,iBAA3B;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,OAAO,MAAMC,oBAAoB,GAAG;EAChCC,UAAU,EAAEN,UADoB;EAEhCO,YAAY,EAAE,EAFkB;EAGhCC,aAAa,EAAE,CAAC,IAAD,CAHiB;EAIhCC,QAAQ,EAAE,CAACC,EAAD,EAAKC,KAAL,EAAYC,KAAZ,KAAsB;IAC5B,MAAM,CAACC,KAAD,IAAUF,KAAhB;IACA,MAAM;MAAEG;IAAF,IAAWF,KAAjB;IACA,OAAO;MACHG,MAAM,EAAE,MAAM;QACV,MAAMC,QAAQ,GAAG,IAAjB;QACA,MAAMC,OAAO,GAAGhB,GAAG,CAACY,KAAD,CAAnB;QACA,OAAOV,GAAG,CAACO,EAAD,EAAKR,GAAG,CAACE,GAAG,CAACM,EAAD,EAAKI,IAAL,EAAWE,QAAX,CAAJ,EAA0BC,OAA1B,CAAR,CAAV;MACH;IALE,CAAP;EAOH;AAd+B,CAA7B"},"metadata":{},"sourceType":"module"}