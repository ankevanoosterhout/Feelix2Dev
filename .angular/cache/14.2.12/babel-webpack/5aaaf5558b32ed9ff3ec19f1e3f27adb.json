{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { GatherV2 } from '../kernel_names';\nimport { getUndoAxesPermutation } from '../ops/axis_util';\nimport { reshape } from '../ops/reshape';\nimport { transpose } from '../ops/transpose';\nimport { unsortedSegmentSum } from '../ops/unsorted_segment_sum';\nimport { parseAxisParam } from '../util';\nexport const gatherGradConfig = {\n  kernelName: GatherV2,\n  inputsToSave: ['x', 'indices'],\n  gradFunc: (dy, saved, attrs) => {\n    const [x, indices] = saved;\n    const {\n      axis\n    } = attrs;\n    const parsedAxis = parseAxisParam(axis, x.shape)[0];\n\n    const derX = () => {\n      const paramsShape = x.shape;\n      const indicesSize = indices.size;\n      const outerShape = paramsShape.slice(0, parsedAxis);\n      const outerDims = outerShape.length;\n      const innerShape = paramsShape.slice(axis, paramsShape.length).slice(1);\n      const innerDims = innerShape.length;\n      const outerAxesIndices = arrayRange(0, outerDims);\n      const innerAxesIndices = arrayRange(outerDims + 1, outerDims + 1 + innerDims);\n      const valuesShape = arrayConcat([outerShape, [indicesSize], innerShape]);\n      const values = reshape(dy, valuesShape);\n      const reshapedIndices = reshape(indices, [indicesSize]);\n      const transposeDims = arrayConcat([[outerDims], outerAxesIndices, innerAxesIndices]);\n      const valuesTranspose = transpose(values, transposeDims);\n      let paramsGrad = unsortedSegmentSum(valuesTranspose, reshapedIndices, x.shape[parsedAxis]);\n      const invertTransposeDims = getUndoAxesPermutation(transposeDims);\n      paramsGrad = transpose(paramsGrad, invertTransposeDims);\n      return paramsGrad;\n    };\n\n    return {\n      x: derX,\n      indices: () => indices\n    };\n  }\n};\n\nfunction arrayRange(start, stop) {\n  const result = [];\n\n  for (let i = start; i < stop; ++i) {\n    result.push(i);\n  }\n\n  return result;\n}\n\nfunction arrayConcat(arrays) {\n  const result = [];\n\n  for (let i = 0; i < arrays.length; ++i) {\n    for (let j = 0; j < arrays[i].length; ++j) {\n      result.push(arrays[i][j]);\n    }\n  }\n\n  return result;\n}","map":{"version":3,"names":["GatherV2","getUndoAxesPermutation","reshape","transpose","unsortedSegmentSum","parseAxisParam","gatherGradConfig","kernelName","inputsToSave","gradFunc","dy","saved","attrs","x","indices","axis","parsedAxis","shape","derX","paramsShape","indicesSize","size","outerShape","slice","outerDims","length","innerShape","innerDims","outerAxesIndices","arrayRange","innerAxesIndices","valuesShape","arrayConcat","values","reshapedIndices","transposeDims","valuesTranspose","paramsGrad","invertTransposeDims","start","stop","result","i","push","arrays","j"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-core/dist/gradients/GatherV2_grad.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { GatherV2 } from '../kernel_names';\nimport { getUndoAxesPermutation } from '../ops/axis_util';\nimport { reshape } from '../ops/reshape';\nimport { transpose } from '../ops/transpose';\nimport { unsortedSegmentSum } from '../ops/unsorted_segment_sum';\nimport { parseAxisParam } from '../util';\nexport const gatherGradConfig = {\n    kernelName: GatherV2,\n    inputsToSave: ['x', 'indices'],\n    gradFunc: (dy, saved, attrs) => {\n        const [x, indices] = saved;\n        const { axis } = attrs;\n        const parsedAxis = parseAxisParam(axis, x.shape)[0];\n        const derX = () => {\n            const paramsShape = x.shape;\n            const indicesSize = indices.size;\n            const outerShape = paramsShape.slice(0, parsedAxis);\n            const outerDims = outerShape.length;\n            const innerShape = paramsShape.slice(axis, paramsShape.length).slice(1);\n            const innerDims = innerShape.length;\n            const outerAxesIndices = arrayRange(0, outerDims);\n            const innerAxesIndices = arrayRange(outerDims + 1, outerDims + 1 + innerDims);\n            const valuesShape = arrayConcat([outerShape, [indicesSize], innerShape]);\n            const values = reshape(dy, valuesShape);\n            const reshapedIndices = reshape(indices, [indicesSize]);\n            const transposeDims = arrayConcat([[outerDims], outerAxesIndices, innerAxesIndices]);\n            const valuesTranspose = transpose(values, transposeDims);\n            let paramsGrad = unsortedSegmentSum(valuesTranspose, reshapedIndices, x.shape[parsedAxis]);\n            const invertTransposeDims = getUndoAxesPermutation(transposeDims);\n            paramsGrad = transpose(paramsGrad, invertTransposeDims);\n            return paramsGrad;\n        };\n        return { x: derX, indices: () => indices };\n    }\n};\nfunction arrayRange(start, stop) {\n    const result = [];\n    for (let i = start; i < stop; ++i) {\n        result.push(i);\n    }\n    return result;\n}\nfunction arrayConcat(arrays) {\n    const result = [];\n    for (let i = 0; i < arrays.length; ++i) {\n        for (let j = 0; j < arrays[i].length; ++j) {\n            result.push(arrays[i][j]);\n        }\n    }\n    return result;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}