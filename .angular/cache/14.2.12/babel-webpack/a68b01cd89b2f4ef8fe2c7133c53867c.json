{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { kernel_impls, NonMaxSuppressionV3 } from '@tensorflow/tfjs-core';\nconst nonMaxSuppressionV3Impl = kernel_impls.nonMaxSuppressionV3Impl;\nimport { assertNotComplex } from '../cpu_util';\nexport function nonMaxSuppressionV3(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    boxes,\n    scores\n  } = inputs;\n  const {\n    maxOutputSize,\n    iouThreshold,\n    scoreThreshold\n  } = attrs;\n  assertNotComplex(boxes, 'NonMaxSuppression');\n  const boxesVals = backend.data.get(boxes.dataId).values;\n  const scoresVals = backend.data.get(scores.dataId).values;\n  const {\n    selectedIndices\n  } = nonMaxSuppressionV3Impl(boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold);\n  return backend.makeTensorInfo([selectedIndices.length], 'int32', new Int32Array(selectedIndices));\n}\nexport const nonMaxSuppressionV3Config = {\n  kernelName: NonMaxSuppressionV3,\n  backendName: 'cpu',\n  kernelFunc: nonMaxSuppressionV3\n};","map":{"version":3,"names":["kernel_impls","NonMaxSuppressionV3","nonMaxSuppressionV3Impl","assertNotComplex","nonMaxSuppressionV3","args","inputs","backend","attrs","boxes","scores","maxOutputSize","iouThreshold","scoreThreshold","boxesVals","data","get","dataId","values","scoresVals","selectedIndices","makeTensorInfo","length","Int32Array","nonMaxSuppressionV3Config","kernelName","backendName","kernelFunc"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/NonMaxSuppressionV3.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { kernel_impls, NonMaxSuppressionV3 } from '@tensorflow/tfjs-core';\nconst nonMaxSuppressionV3Impl = kernel_impls.nonMaxSuppressionV3Impl;\nimport { assertNotComplex } from '../cpu_util';\nexport function nonMaxSuppressionV3(args) {\n    const { inputs, backend, attrs } = args;\n    const { boxes, scores } = inputs;\n    const { maxOutputSize, iouThreshold, scoreThreshold } = attrs;\n    assertNotComplex(boxes, 'NonMaxSuppression');\n    const boxesVals = backend.data.get(boxes.dataId).values;\n    const scoresVals = backend.data.get(scores.dataId).values;\n    const { selectedIndices } = nonMaxSuppressionV3Impl(boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold);\n    return backend.makeTensorInfo([selectedIndices.length], 'int32', new Int32Array(selectedIndices));\n}\nexport const nonMaxSuppressionV3Config = {\n    kernelName: NonMaxSuppressionV3,\n    backendName: 'cpu',\n    kernelFunc: nonMaxSuppressionV3\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAT,EAAuBC,mBAAvB,QAAkD,uBAAlD;AACA,MAAMC,uBAAuB,GAAGF,YAAY,CAACE,uBAA7C;AACA,SAASC,gBAAT,QAAiC,aAAjC;AACA,OAAO,SAASC,mBAAT,CAA6BC,IAA7B,EAAmC;EACtC,MAAM;IAAEC,MAAF;IAAUC,OAAV;IAAmBC;EAAnB,IAA6BH,IAAnC;EACA,MAAM;IAAEI,KAAF;IAASC;EAAT,IAAoBJ,MAA1B;EACA,MAAM;IAAEK,aAAF;IAAiBC,YAAjB;IAA+BC;EAA/B,IAAkDL,KAAxD;EACAL,gBAAgB,CAACM,KAAD,EAAQ,mBAAR,CAAhB;EACA,MAAMK,SAAS,GAAGP,OAAO,CAACQ,IAAR,CAAaC,GAAb,CAAiBP,KAAK,CAACQ,MAAvB,EAA+BC,MAAjD;EACA,MAAMC,UAAU,GAAGZ,OAAO,CAACQ,IAAR,CAAaC,GAAb,CAAiBN,MAAM,CAACO,MAAxB,EAAgCC,MAAnD;EACA,MAAM;IAAEE;EAAF,IAAsBlB,uBAAuB,CAACY,SAAD,EAAYK,UAAZ,EAAwBR,aAAxB,EAAuCC,YAAvC,EAAqDC,cAArD,CAAnD;EACA,OAAON,OAAO,CAACc,cAAR,CAAuB,CAACD,eAAe,CAACE,MAAjB,CAAvB,EAAiD,OAAjD,EAA0D,IAAIC,UAAJ,CAAeH,eAAf,CAA1D,CAAP;AACH;AACD,OAAO,MAAMI,yBAAyB,GAAG;EACrCC,UAAU,EAAExB,mBADyB;EAErCyB,WAAW,EAAE,KAFwB;EAGrCC,UAAU,EAAEvB;AAHyB,CAAlC"},"metadata":{},"sourceType":"module"}