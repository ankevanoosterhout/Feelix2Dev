{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Any, backend_util, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { reshape } from './Reshape';\nimport { transpose } from './Transpose';\nexport function any(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x\n  } = inputs;\n  const {\n    axis,\n    keepDims\n  } = attrs;\n  assertNotComplex(x, 'any');\n  const origAxes = util.parseAxisParam(axis, x.shape);\n  let axes = origAxes;\n  const permutedAxes = backend_util.getAxesPermutation(axes, x.shape.length);\n  let $x = x;\n\n  if (permutedAxes != null) {\n    $x = transpose({\n      inputs: {\n        x\n      },\n      backend,\n      attrs: {\n        perm: permutedAxes\n      }\n    });\n    axes = backend_util.getInnerMostAxes(axes.length, x.shape.length);\n  }\n\n  backend_util.assertAxesAreInnerMostDims('any', axes, $x.shape.length);\n  const [outShape, reduceShape] = backend_util.computeOutAndReduceShapes($x.shape, axes);\n  const reduceSize = util.sizeFromShape(reduceShape);\n  const vals = util.makeZerosTypedArray(util.sizeFromShape(outShape), $x.dtype);\n  const aVals = backend.data.get($x.dataId).values;\n\n  for (let i = 0; i < vals.length; ++i) {\n    const offset = i * reduceSize;\n    let anyVal = aVals[offset];\n\n    for (let j = 0; j < reduceSize; ++j) {\n      const value = aVals[offset + j];\n      anyVal = anyVal || value;\n    }\n\n    vals[i] = anyVal;\n  }\n\n  if (permutedAxes != null) {\n    backend.disposeIntermediateTensorInfo($x);\n  }\n\n  const result = backend.makeTensorInfo(outShape, $x.dtype, vals);\n\n  if (keepDims) {\n    const expandedShape = backend_util.expandShapeToKeepDim(outShape, origAxes);\n    const reshapedResult = reshape({\n      inputs: {\n        x: result\n      },\n      backend,\n      attrs: {\n        shape: expandedShape\n      }\n    });\n    backend.disposeIntermediateTensorInfo(result);\n    return reshapedResult;\n  }\n\n  return result;\n}\nexport const anyConfig = {\n  kernelName: Any,\n  backendName: 'cpu',\n  kernelFunc: any\n};","map":{"version":3,"names":["Any","backend_util","util","assertNotComplex","reshape","transpose","any","args","inputs","backend","attrs","x","axis","keepDims","origAxes","parseAxisParam","shape","axes","permutedAxes","getAxesPermutation","length","$x","perm","getInnerMostAxes","assertAxesAreInnerMostDims","outShape","reduceShape","computeOutAndReduceShapes","reduceSize","sizeFromShape","vals","makeZerosTypedArray","dtype","aVals","data","get","dataId","values","i","offset","anyVal","j","value","disposeIntermediateTensorInfo","result","makeTensorInfo","expandedShape","expandShapeToKeepDim","reshapedResult","anyConfig","kernelName","backendName","kernelFunc"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Any.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Any, backend_util, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { reshape } from './Reshape';\nimport { transpose } from './Transpose';\nexport function any(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis, keepDims } = attrs;\n    assertNotComplex(x, 'any');\n    const origAxes = util.parseAxisParam(axis, x.shape);\n    let axes = origAxes;\n    const permutedAxes = backend_util.getAxesPermutation(axes, x.shape.length);\n    let $x = x;\n    if (permutedAxes != null) {\n        $x = transpose({ inputs: { x }, backend, attrs: { perm: permutedAxes } });\n        axes = backend_util.getInnerMostAxes(axes.length, x.shape.length);\n    }\n    backend_util.assertAxesAreInnerMostDims('any', axes, $x.shape.length);\n    const [outShape, reduceShape] = backend_util.computeOutAndReduceShapes($x.shape, axes);\n    const reduceSize = util.sizeFromShape(reduceShape);\n    const vals = util.makeZerosTypedArray(util.sizeFromShape(outShape), $x.dtype);\n    const aVals = backend.data.get($x.dataId).values;\n    for (let i = 0; i < vals.length; ++i) {\n        const offset = i * reduceSize;\n        let anyVal = aVals[offset];\n        for (let j = 0; j < reduceSize; ++j) {\n            const value = aVals[offset + j];\n            anyVal = anyVal || value;\n        }\n        vals[i] = anyVal;\n    }\n    if (permutedAxes != null) {\n        backend.disposeIntermediateTensorInfo($x);\n    }\n    const result = backend.makeTensorInfo(outShape, $x.dtype, vals);\n    if (keepDims) {\n        const expandedShape = backend_util.expandShapeToKeepDim(outShape, origAxes);\n        const reshapedResult = reshape({ inputs: { x: result }, backend, attrs: { shape: expandedShape } });\n        backend.disposeIntermediateTensorInfo(result);\n        return reshapedResult;\n    }\n    return result;\n}\nexport const anyConfig = {\n    kernelName: Any,\n    backendName: 'cpu',\n    kernelFunc: any\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}