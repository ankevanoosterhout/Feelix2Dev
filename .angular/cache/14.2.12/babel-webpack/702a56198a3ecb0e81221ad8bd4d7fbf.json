{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Add } from '@tensorflow/tfjs-core';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nimport { binaryKernelFunc, createComplexBinaryKernelImpl } from '../utils/binary_utils';\nexport const addImpl = createSimpleBinaryKernelImpl((a, b) => a + b);\nexport const addComplexImpl = createComplexBinaryKernelImpl((aReal, aImag, bReal, bImag) => {\n  return {\n    real: aReal + bReal,\n    imag: aImag + bImag\n  };\n});\nexport const add = binaryKernelFunc(Add, addImpl, addComplexImpl);\nexport const addConfig = {\n  kernelName: Add,\n  backendName: 'cpu',\n  kernelFunc: add\n};","map":{"version":3,"names":["Add","createSimpleBinaryKernelImpl","binaryKernelFunc","createComplexBinaryKernelImpl","addImpl","a","b","addComplexImpl","aReal","aImag","bReal","bImag","real","imag","add","addConfig","kernelName","backendName","kernelFunc"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Add.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Add } from '@tensorflow/tfjs-core';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nimport { binaryKernelFunc, createComplexBinaryKernelImpl } from '../utils/binary_utils';\nexport const addImpl = createSimpleBinaryKernelImpl(((a, b) => a + b));\nexport const addComplexImpl = createComplexBinaryKernelImpl(((aReal, aImag, bReal, bImag) => {\n    return { real: aReal + bReal, imag: aImag + bImag };\n}));\nexport const add = binaryKernelFunc(Add, addImpl, addComplexImpl);\nexport const addConfig = {\n    kernelName: Add,\n    backendName: 'cpu',\n    kernelFunc: add\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,GAAT,QAAoB,uBAApB;AACA,SAASC,4BAAT,QAA6C,sBAA7C;AACA,SAASC,gBAAT,EAA2BC,6BAA3B,QAAgE,uBAAhE;AACA,OAAO,MAAMC,OAAO,GAAGH,4BAA4B,CAAE,CAACI,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAhB,CAA5C;AACP,OAAO,MAAMC,cAAc,GAAGJ,6BAA6B,CAAE,CAACK,KAAD,EAAQC,KAAR,EAAeC,KAAf,EAAsBC,KAAtB,KAAgC;EACzF,OAAO;IAAEC,IAAI,EAAEJ,KAAK,GAAGE,KAAhB;IAAuBG,IAAI,EAAEJ,KAAK,GAAGE;EAArC,CAAP;AACH,CAF0D,CAApD;AAGP,OAAO,MAAMG,GAAG,GAAGZ,gBAAgB,CAACF,GAAD,EAAMI,OAAN,EAAeG,cAAf,CAA5B;AACP,OAAO,MAAMQ,SAAS,GAAG;EACrBC,UAAU,EAAEhB,GADS;EAErBiB,WAAW,EAAE,KAFQ;EAGrBC,UAAU,EAAEJ;AAHS,CAAlB"},"metadata":{},"sourceType":"module"}