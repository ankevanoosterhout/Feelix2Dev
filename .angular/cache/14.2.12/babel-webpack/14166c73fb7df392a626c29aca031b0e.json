{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, MaxPool3D, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { pool3d } from '../utils/pool_utils';\nexport function maxPool3D(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x\n  } = inputs;\n  const {\n    filterSize,\n    strides,\n    pad,\n    dimRoundingMode,\n    dataFormat\n  } = attrs;\n  assertNotComplex(x, 'maxPool3d');\n  const convInfo = backend_util.computePool3DInfo(x.shape, filterSize, strides, 1\n  /* dilations */\n  , pad, dimRoundingMode, dataFormat);\n  const xValues = backend.data.get(x.dataId).values;\n  const outBuf = pool3d(xValues, x.shape, x.dtype, util.computeStrides(x.shape), convInfo, 'max');\n  return backend.makeTensorInfo(outBuf.shape, 'float32', outBuf.values);\n}\nexport const maxPool3DConfig = {\n  kernelName: MaxPool3D,\n  backendName: 'cpu',\n  kernelFunc: maxPool3D\n};","map":{"version":3,"names":["backend_util","MaxPool3D","util","assertNotComplex","pool3d","maxPool3D","args","inputs","backend","attrs","x","filterSize","strides","pad","dimRoundingMode","dataFormat","convInfo","computePool3DInfo","shape","xValues","data","get","dataId","values","outBuf","dtype","computeStrides","makeTensorInfo","maxPool3DConfig","kernelName","backendName","kernelFunc"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/MaxPool3D.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, MaxPool3D, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { pool3d } from '../utils/pool_utils';\nexport function maxPool3D(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { filterSize, strides, pad, dimRoundingMode, dataFormat } = attrs;\n    assertNotComplex(x, 'maxPool3d');\n    const convInfo = backend_util.computePool3DInfo(x.shape, filterSize, strides, 1 /* dilations */, pad, dimRoundingMode, dataFormat);\n    const xValues = backend.data.get(x.dataId).values;\n    const outBuf = pool3d(xValues, x.shape, x.dtype, util.computeStrides(x.shape), convInfo, 'max');\n    return backend.makeTensorInfo(outBuf.shape, 'float32', outBuf.values);\n}\nexport const maxPool3DConfig = {\n    kernelName: MaxPool3D,\n    backendName: 'cpu',\n    kernelFunc: maxPool3D\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAT,EAAuBC,SAAvB,EAAkCC,IAAlC,QAA8C,uBAA9C;AACA,SAASC,gBAAT,QAAiC,aAAjC;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;EAC5B,MAAM;IAAEC,MAAF;IAAUC,OAAV;IAAmBC;EAAnB,IAA6BH,IAAnC;EACA,MAAM;IAAEI;EAAF,IAAQH,MAAd;EACA,MAAM;IAAEI,UAAF;IAAcC,OAAd;IAAuBC,GAAvB;IAA4BC,eAA5B;IAA6CC;EAA7C,IAA4DN,KAAlE;EACAN,gBAAgB,CAACO,CAAD,EAAI,WAAJ,CAAhB;EACA,MAAMM,QAAQ,GAAGhB,YAAY,CAACiB,iBAAb,CAA+BP,CAAC,CAACQ,KAAjC,EAAwCP,UAAxC,EAAoDC,OAApD,EAA6D;EAAE;EAA/D,EAAgFC,GAAhF,EAAqFC,eAArF,EAAsGC,UAAtG,CAAjB;EACA,MAAMI,OAAO,GAAGX,OAAO,CAACY,IAAR,CAAaC,GAAb,CAAiBX,CAAC,CAACY,MAAnB,EAA2BC,MAA3C;EACA,MAAMC,MAAM,GAAGpB,MAAM,CAACe,OAAD,EAAUT,CAAC,CAACQ,KAAZ,EAAmBR,CAAC,CAACe,KAArB,EAA4BvB,IAAI,CAACwB,cAAL,CAAoBhB,CAAC,CAACQ,KAAtB,CAA5B,EAA0DF,QAA1D,EAAoE,KAApE,CAArB;EACA,OAAOR,OAAO,CAACmB,cAAR,CAAuBH,MAAM,CAACN,KAA9B,EAAqC,SAArC,EAAgDM,MAAM,CAACD,MAAvD,CAAP;AACH;AACD,OAAO,MAAMK,eAAe,GAAG;EAC3BC,UAAU,EAAE5B,SADe;EAE3B6B,WAAW,EAAE,KAFc;EAG3BC,UAAU,EAAE1B;AAHe,CAAxB"},"metadata":{},"sourceType":"module"}