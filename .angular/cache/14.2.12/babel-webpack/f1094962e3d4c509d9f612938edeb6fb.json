{"ast":null,"code":"/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { StringNGrams } from '@tensorflow/tfjs-core';\nimport { stringNGramsImpl } from './StringNGrams_impl';\nexport function stringNGrams(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    separator,\n    nGramWidths,\n    leftPad,\n    rightPad,\n    padWidth,\n    preserveShortSequences\n  } = attrs;\n  const {\n    data,\n    dataSplits\n  } = inputs;\n  const $data = backend.data.get(data.dataId).values;\n  const $dataSplits = backend.data.get(dataSplits.dataId).values;\n  const [nGrams, nGramsSplits] = stringNGramsImpl($data, $dataSplits, separator, nGramWidths, leftPad, rightPad, padWidth, preserveShortSequences);\n  return [backend.makeTensorInfo([nGrams.length], 'string', nGrams), backend.makeTensorInfo(dataSplits.shape, 'int32', nGramsSplits)];\n}\nexport const stringNGramsConfig = {\n  kernelName: StringNGrams,\n  backendName: 'cpu',\n  kernelFunc: stringNGrams\n};","map":{"version":3,"names":["StringNGrams","stringNGramsImpl","stringNGrams","args","inputs","backend","attrs","separator","nGramWidths","leftPad","rightPad","padWidth","preserveShortSequences","data","dataSplits","$data","get","dataId","values","$dataSplits","nGrams","nGramsSplits","makeTensorInfo","length","shape","stringNGramsConfig","kernelName","backendName","kernelFunc"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StringNGrams.js"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { StringNGrams } from '@tensorflow/tfjs-core';\nimport { stringNGramsImpl } from './StringNGrams_impl';\nexport function stringNGrams(args) {\n    const { inputs, backend, attrs } = args;\n    const { separator, nGramWidths, leftPad, rightPad, padWidth, preserveShortSequences } = attrs;\n    const { data, dataSplits } = inputs;\n    const $data = backend.data.get(data.dataId).values;\n    const $dataSplits = backend.data.get(dataSplits.dataId).values;\n    const [nGrams, nGramsSplits] = stringNGramsImpl($data, $dataSplits, separator, nGramWidths, leftPad, rightPad, padWidth, preserveShortSequences);\n    return [\n        backend.makeTensorInfo([nGrams.length], 'string', nGrams),\n        backend.makeTensorInfo(dataSplits.shape, 'int32', nGramsSplits),\n    ];\n}\nexport const stringNGramsConfig = {\n    kernelName: StringNGrams,\n    backendName: 'cpu',\n    kernelFunc: stringNGrams,\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAT,QAA6B,uBAA7B;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,OAAO,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;EAC/B,MAAM;IAAEC,MAAF;IAAUC,OAAV;IAAmBC;EAAnB,IAA6BH,IAAnC;EACA,MAAM;IAAEI,SAAF;IAAaC,WAAb;IAA0BC,OAA1B;IAAmCC,QAAnC;IAA6CC,QAA7C;IAAuDC;EAAvD,IAAkFN,KAAxF;EACA,MAAM;IAAEO,IAAF;IAAQC;EAAR,IAAuBV,MAA7B;EACA,MAAMW,KAAK,GAAGV,OAAO,CAACQ,IAAR,CAAaG,GAAb,CAAiBH,IAAI,CAACI,MAAtB,EAA8BC,MAA5C;EACA,MAAMC,WAAW,GAAGd,OAAO,CAACQ,IAAR,CAAaG,GAAb,CAAiBF,UAAU,CAACG,MAA5B,EAAoCC,MAAxD;EACA,MAAM,CAACE,MAAD,EAASC,YAAT,IAAyBpB,gBAAgB,CAACc,KAAD,EAAQI,WAAR,EAAqBZ,SAArB,EAAgCC,WAAhC,EAA6CC,OAA7C,EAAsDC,QAAtD,EAAgEC,QAAhE,EAA0EC,sBAA1E,CAA/C;EACA,OAAO,CACHP,OAAO,CAACiB,cAAR,CAAuB,CAACF,MAAM,CAACG,MAAR,CAAvB,EAAwC,QAAxC,EAAkDH,MAAlD,CADG,EAEHf,OAAO,CAACiB,cAAR,CAAuBR,UAAU,CAACU,KAAlC,EAAyC,OAAzC,EAAkDH,YAAlD,CAFG,CAAP;AAIH;AACD,OAAO,MAAMI,kBAAkB,GAAG;EAC9BC,UAAU,EAAE1B,YADkB;EAE9B2B,WAAW,EAAE,KAFiB;EAG9BC,UAAU,EAAE1B;AAHkB,CAA3B"},"metadata":{},"sourceType":"module"}