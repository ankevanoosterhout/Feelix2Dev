{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport class ReversePackedProgram {\n  constructor(xShape, axis) {\n    this.variableNames = ['x'];\n    this.packedInputs = true;\n    this.packedOutput = true;\n    const rank = xShape.length;\n\n    if (rank > 4) {\n      throw new Error(`WebGL backend: Reverse of rank-${rank} tensor is not yet supported`);\n    }\n\n    this.outputShape = xShape;\n    const channels = getChannels('rc', rank);\n    const nextColumn = `${channels[rank - 1]} + 1 < ${this.outputShape[rank - 1]}`;\n    const nextRow = `${channels[rank - 2]} + 1 < ${this.outputShape[rank - 2]}`;\n    const type = getCoordsDataType(rank);\n\n    if (rank === 1) {\n      this.userCode = `\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${xShape[0]} - rc - 1),\n            ${xShape[0]} - rc - 1);\n          if(${nextColumn}){\n              result.g = getChannel(getX(${xShape[0]} - (rc  + 1) - 1),\n                ${xShape[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `;\n    } else {\n      this.userCode = `\n        void main() {\n          ${type} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${getR(channels.slice())};\n          if(${nextColumn}){\n            result.g = ${getG(channels.slice())};\n          }\n          if(${nextRow}) {\n            result.b = ${getB(channels.slice())};\n            if(${nextColumn}) {\n              result.a = ${getA(channels.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `;\n    }\n\n    function getR(channels) {\n      return getChannel(channels);\n    }\n\n    function getG(channels) {\n      channels[rank - 1] = '(' + channels[rank - 1] + ` + 1)`;\n      return getChannel(channels);\n    }\n\n    function getB(channels) {\n      channels[rank - 2] = '(' + channels[rank - 2] + ` + 1)`;\n      return getChannel(channels);\n    }\n\n    function getA(channels) {\n      channels[rank - 1] = '(' + channels[rank - 1] + ` + 1)`;\n      channels[rank - 2] = '(' + channels[rank - 2] + ` + 1)`;\n      return getChannel(channels);\n    }\n\n    function getChannel(channels) {\n      const inCoordsArray = xShape.map((_, i) => getInCoord(i, channels));\n      const inCoords = inCoordsArray.join(',');\n      const innerDims = inCoordsArray.slice(-2).join(',');\n      return `getChannel(getX(${inCoords}), vec2(${innerDims}))`;\n    }\n\n    function getInCoord(i, channels1) {\n      if (axis.indexOf(i) !== -1 && xShape[i] !== 1) {\n        return `${xShape[i]} - ${channels1[i]} - 1`;\n      } else {\n        return `${channels1[i]}`;\n      }\n    }\n  }\n\n}","map":{"version":3,"names":["getChannels","getCoordsDataType","ReversePackedProgram","constructor","xShape","axis","variableNames","packedInputs","packedOutput","rank","length","Error","outputShape","channels","nextColumn","nextRow","type","userCode","getR","slice","getG","getB","getA","getChannel","inCoordsArray","map","_","i","getInCoord","inCoords","join","innerDims","channels1","indexOf"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-webgl/dist/reverse_packed_gpu.js"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport class ReversePackedProgram {\n    constructor(xShape, axis) {\n        this.variableNames = ['x'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        const rank = xShape.length;\n        if (rank > 4) {\n            throw new Error(`WebGL backend: Reverse of rank-${rank} tensor is not yet supported`);\n        }\n        this.outputShape = xShape;\n        const channels = getChannels('rc', rank);\n        const nextColumn = `${channels[rank - 1]} + 1 < ${this.outputShape[rank - 1]}`;\n        const nextRow = `${channels[rank - 2]} + 1 < ${this.outputShape[rank - 2]}`;\n        const type = getCoordsDataType(rank);\n        if (rank === 1) {\n            this.userCode = `\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${xShape[0]} - rc - 1),\n            ${xShape[0]} - rc - 1);\n          if(${nextColumn}){\n              result.g = getChannel(getX(${xShape[0]} - (rc  + 1) - 1),\n                ${xShape[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `;\n        }\n        else {\n            this.userCode = `\n        void main() {\n          ${type} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${getR(channels.slice())};\n          if(${nextColumn}){\n            result.g = ${getG(channels.slice())};\n          }\n          if(${nextRow}) {\n            result.b = ${getB(channels.slice())};\n            if(${nextColumn}) {\n              result.a = ${getA(channels.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `;\n        }\n        function getR(channels) {\n            return getChannel(channels);\n        }\n        function getG(channels) {\n            channels[rank - 1] = '(' + channels[rank - 1] + ` + 1)`;\n            return getChannel(channels);\n        }\n        function getB(channels) {\n            channels[rank - 2] = '(' + channels[rank - 2] + ` + 1)`;\n            return getChannel(channels);\n        }\n        function getA(channels) {\n            channels[rank - 1] = '(' + channels[rank - 1] + ` + 1)`;\n            channels[rank - 2] = '(' + channels[rank - 2] + ` + 1)`;\n            return getChannel(channels);\n        }\n        function getChannel(channels) {\n            const inCoordsArray = xShape.map((_, i) => getInCoord(i, channels));\n            const inCoords = inCoordsArray.join(',');\n            const innerDims = inCoordsArray.slice(-2).join(',');\n            return `getChannel(getX(${inCoords}), vec2(${innerDims}))`;\n        }\n        function getInCoord(i, channels1) {\n            if (axis.indexOf(i) !== -1 && xShape[i] !== 1) {\n                return `${xShape[i]} - ${channels1[i]} - 1`;\n            }\n            else {\n                return `${channels1[i]}`;\n            }\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}