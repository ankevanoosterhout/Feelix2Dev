{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { FFT, util } from '@tensorflow/tfjs-core';\nimport { fftBatch } from '../utils/fft_utils';\nimport { reshape } from './Reshape';\nexport function fft(args) {\n  const {\n    inputs,\n    backend\n  } = args;\n  const {\n    input\n  } = inputs;\n  const inputSize = util.sizeFromShape(input.shape); // Collapse all outer dimensions to a single batch dimension.\n\n  const innerDimensionSize = input.shape[input.shape.length - 1];\n  const batch = inputSize / innerDimensionSize;\n  const input2D = reshape({\n    inputs: {\n      x: input\n    },\n    backend,\n    attrs: {\n      shape: [batch, innerDimensionSize]\n    }\n  });\n  const result = fftBatch(input2D, false, backend);\n  const resultReshaped = reshape({\n    inputs: {\n      x: result\n    },\n    backend,\n    attrs: {\n      shape: input.shape\n    }\n  });\n  backend.disposeIntermediateTensorInfo(input2D);\n  backend.disposeIntermediateTensorInfo(result);\n  return resultReshaped;\n}\nexport const fftConfig = {\n  kernelName: FFT,\n  backendName: 'cpu',\n  kernelFunc: fft\n};","map":{"version":3,"names":["FFT","util","fftBatch","reshape","fft","args","inputs","backend","input","inputSize","sizeFromShape","shape","innerDimensionSize","length","batch","input2D","x","attrs","result","resultReshaped","disposeIntermediateTensorInfo","fftConfig","kernelName","backendName","kernelFunc"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/FFT.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { FFT, util } from '@tensorflow/tfjs-core';\nimport { fftBatch } from '../utils/fft_utils';\nimport { reshape } from './Reshape';\nexport function fft(args) {\n    const { inputs, backend } = args;\n    const { input } = inputs;\n    const inputSize = util.sizeFromShape(input.shape);\n    // Collapse all outer dimensions to a single batch dimension.\n    const innerDimensionSize = input.shape[input.shape.length - 1];\n    const batch = inputSize / innerDimensionSize;\n    const input2D = reshape({\n        inputs: { x: input },\n        backend,\n        attrs: { shape: [batch, innerDimensionSize] }\n    });\n    const result = fftBatch(input2D, false, backend);\n    const resultReshaped = reshape({ inputs: { x: result }, backend, attrs: { shape: input.shape } });\n    backend.disposeIntermediateTensorInfo(input2D);\n    backend.disposeIntermediateTensorInfo(result);\n    return resultReshaped;\n}\nexport const fftConfig = {\n    kernelName: FFT,\n    backendName: 'cpu',\n    kernelFunc: fft\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,GAAT,EAAcC,IAAd,QAA0B,uBAA1B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAO,SAASC,GAAT,CAAaC,IAAb,EAAmB;EACtB,MAAM;IAAEC,MAAF;IAAUC;EAAV,IAAsBF,IAA5B;EACA,MAAM;IAAEG;EAAF,IAAYF,MAAlB;EACA,MAAMG,SAAS,GAAGR,IAAI,CAACS,aAAL,CAAmBF,KAAK,CAACG,KAAzB,CAAlB,CAHsB,CAItB;;EACA,MAAMC,kBAAkB,GAAGJ,KAAK,CAACG,KAAN,CAAYH,KAAK,CAACG,KAAN,CAAYE,MAAZ,GAAqB,CAAjC,CAA3B;EACA,MAAMC,KAAK,GAAGL,SAAS,GAAGG,kBAA1B;EACA,MAAMG,OAAO,GAAGZ,OAAO,CAAC;IACpBG,MAAM,EAAE;MAAEU,CAAC,EAAER;IAAL,CADY;IAEpBD,OAFoB;IAGpBU,KAAK,EAAE;MAAEN,KAAK,EAAE,CAACG,KAAD,EAAQF,kBAAR;IAAT;EAHa,CAAD,CAAvB;EAKA,MAAMM,MAAM,GAAGhB,QAAQ,CAACa,OAAD,EAAU,KAAV,EAAiBR,OAAjB,CAAvB;EACA,MAAMY,cAAc,GAAGhB,OAAO,CAAC;IAAEG,MAAM,EAAE;MAAEU,CAAC,EAAEE;IAAL,CAAV;IAAyBX,OAAzB;IAAkCU,KAAK,EAAE;MAAEN,KAAK,EAAEH,KAAK,CAACG;IAAf;EAAzC,CAAD,CAA9B;EACAJ,OAAO,CAACa,6BAAR,CAAsCL,OAAtC;EACAR,OAAO,CAACa,6BAAR,CAAsCF,MAAtC;EACA,OAAOC,cAAP;AACH;AACD,OAAO,MAAME,SAAS,GAAG;EACrBC,UAAU,EAAEtB,GADS;EAErBuB,WAAW,EAAE,KAFQ;EAGrBC,UAAU,EAAEpB;AAHS,CAAlB"},"metadata":{},"sourceType":"module"}