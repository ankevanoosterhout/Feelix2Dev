{"ast":null,"code":"import { Group, Vector2, Color } from 'three';\nimport { IKJointHelper } from './IKJointHelper.js';\nimport { IKLinkHelper } from './IKLinkHelper.js';\nimport { findRoots } from '../core/utils/findRoots.js';\nconst currLinks = new Set();\nconst currJoints = new Set();\nexport class IKRootsHelper extends Group {\n  constructor(roots = []) {\n    super();\n    this.roots = Array.isArray(roots) ? [...roots] : [roots];\n    this.joints = new Map();\n    this.links = new Map();\n    this.resolution = new Vector2(1000, 1000);\n    this.drawThrough = false;\n    this.color = new Color(0xffffff);\n    this.jointScale = 1;\n    this.updateStructure();\n  }\n\n  _updateHelpers() {\n    const {\n      drawThrough,\n      resolution,\n      color,\n      jointScale\n    } = this;\n    this.traverse(c => {\n      const material = c.material;\n\n      if (material) {\n        material.color.copy(color);\n\n        if (material.isLineMaterial) {\n          material.uniforms.resolution.value.copy(resolution);\n        }\n\n        if (drawThrough) {\n          material.opacity = 0.1;\n          material.transparent = true;\n          material.depthWrite = false;\n          material.depthTest = false;\n        } else {\n          material.opacity = 1;\n          material.transparent = false;\n          material.depthWrite = true;\n          material.depthTest = true;\n        }\n      }\n\n      if (c instanceof IKJointHelper) {\n        c.setJointScale(jointScale);\n      }\n    });\n  }\n\n  setColor(c) {\n    if (c.isColor) {\n      this.color.copy(c);\n    } else {\n      this.color.set(c);\n    }\n\n    this._updateHelpers();\n\n    return this;\n  }\n\n  setJointScale(s) {\n    this.jointScale = s;\n\n    this._updateHelpers();\n\n    return this;\n  }\n\n  setDrawThrough(value) {\n    this.drawThrough = value;\n\n    this._updateHelpers();\n\n    return this;\n  }\n\n  setResolution(width, height) {\n    this.resolution.set(width, height);\n\n    this._updateHelpers();\n\n    return this;\n  }\n\n  updateStructure() {\n    const {\n      joints,\n      links\n    } = this;\n    const roots = findRoots(this.roots);\n    currJoints.clear();\n    joints.forEach((helper, joint) => currJoints.add(joint));\n    currLinks.clear();\n    links.forEach((helper, links) => currLinks.add(links));\n\n    for (let i = 0, l = roots.length; i < l; i++) {\n      const root = roots[i];\n      root.updateMatrixWorld(true);\n      root.traverse(c => {\n        if (c.isJoint) {\n          let helper;\n\n          if (joints.has(c)) {\n            helper = joints.get(c);\n          } else {\n            helper = new IKJointHelper(c);\n            this.add(helper);\n            joints.set(c, helper);\n          }\n\n          helper.update();\n          currJoints.delete(c);\n        } else {\n          let helper;\n\n          if (links.has(c)) {\n            helper = links.get(c);\n          } else {\n            helper = new IKLinkHelper(c);\n            this.add(helper);\n            links.set(c, helper);\n          }\n\n          helper.update();\n          currLinks.delete(c);\n        }\n      });\n    }\n\n    currJoints.forEach(joint => {\n      const helper = joints.get(joint);\n      this.remove(helper);\n      helper.dispose();\n    });\n    currLinks.forEach(link => {\n      const helper = links.get(link);\n      this.remove(helper);\n      helper.dispose();\n    });\n\n    this._updateHelpers();\n  }\n\n  dispose() {\n    const {\n      links,\n      joints\n    } = this;\n    joints.forEach(([joint, helper]) => {\n      this.remove(helper);\n      helper.dispose();\n    });\n    joints.clear();\n    links.forEach(([link, helper]) => {\n      this.remove(helper);\n      helper.dispose();\n    });\n    links.clear();\n  }\n\n}","map":{"version":3,"names":["Group","Vector2","Color","IKJointHelper","IKLinkHelper","findRoots","currLinks","Set","currJoints","IKRootsHelper","constructor","roots","Array","isArray","joints","Map","links","resolution","drawThrough","color","jointScale","updateStructure","_updateHelpers","traverse","c","material","copy","isLineMaterial","uniforms","value","opacity","transparent","depthWrite","depthTest","setJointScale","setColor","isColor","set","s","setDrawThrough","setResolution","width","height","clear","forEach","helper","joint","add","i","l","length","root","updateMatrixWorld","isJoint","has","get","update","delete","remove","dispose","link"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/closed-chain-ik/src/three/IKRootsHelper.js"],"sourcesContent":["import { Group, Vector2, Color } from 'three';\r\nimport { IKJointHelper } from './IKJointHelper.js';\r\nimport { IKLinkHelper } from './IKLinkHelper.js';\r\nimport { findRoots } from '../core/utils/findRoots.js';\r\n\r\nconst currLinks = new Set();\r\nconst currJoints = new Set();\r\nexport class IKRootsHelper extends Group {\r\n\r\n\tconstructor( roots = [] ) {\r\n\r\n\t\tsuper();\r\n\t\tthis.roots = Array.isArray( roots ) ? [ ...roots ] : [ roots ];\r\n\t\tthis.joints = new Map();\r\n\t\tthis.links = new Map();\r\n\t\tthis.resolution = new Vector2( 1000, 1000 );\r\n\t\tthis.drawThrough = false;\r\n\t\tthis.color = new Color( 0xffffff );\r\n\t\tthis.jointScale = 1;\r\n\r\n\t\tthis.updateStructure();\r\n\r\n\t}\r\n\r\n\t_updateHelpers() {\r\n\r\n\t\tconst { drawThrough, resolution, color, jointScale } = this;\r\n\t\tthis.traverse( c => {\r\n\r\n\t\t\tconst material = c.material;\r\n\t\t\tif ( material ) {\r\n\r\n\t\t\t\tmaterial.color.copy( color );\r\n\r\n\t\t\t\tif ( material.isLineMaterial ) {\r\n\r\n\t\t\t\t\tmaterial.uniforms.resolution.value.copy( resolution );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( drawThrough ) {\r\n\r\n\t\t\t\t\tmaterial.opacity = 0.1;\r\n\t\t\t\t\tmaterial.transparent = true;\r\n\t\t\t\t\tmaterial.depthWrite = false;\r\n\t\t\t\t\tmaterial.depthTest = false;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmaterial.opacity = 1;\r\n\t\t\t\t\tmaterial.transparent = false;\r\n\t\t\t\t\tmaterial.depthWrite = true;\r\n\t\t\t\t\tmaterial.depthTest = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( c instanceof IKJointHelper ) {\r\n\r\n\t\t\t\tc.setJointScale( jointScale );\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tsetColor( c ) {\r\n\r\n\t\tif ( c.isColor ) {\r\n\r\n\t\t\tthis.color.copy( c );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.color.set( c );\r\n\r\n\t\t}\r\n\r\n\t\tthis._updateHelpers();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetJointScale( s ) {\r\n\r\n\t\tthis.jointScale = s;\r\n\t\tthis._updateHelpers();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetDrawThrough( value ) {\r\n\r\n\t\tthis.drawThrough = value;\r\n\t\tthis._updateHelpers();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetResolution( width, height ) {\r\n\r\n\t\tthis.resolution.set( width, height );\r\n\t\tthis._updateHelpers();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tupdateStructure() {\r\n\r\n\t\tconst { joints, links } = this;\r\n\r\n\t\tconst roots = findRoots( this.roots );\r\n\r\n\t\tcurrJoints.clear();\r\n\t\tjoints.forEach( ( helper, joint ) => currJoints.add( joint ) );\r\n\r\n\t\tcurrLinks.clear();\r\n\t\tlinks.forEach( ( helper, links ) => currLinks.add( links ) );\r\n\r\n\t\tfor ( let i = 0, l = roots.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst root = roots[ i ];\r\n\t\t\troot.updateMatrixWorld( true );\r\n\t\t\troot.traverse( c => {\r\n\r\n\t\t\t\tif ( c.isJoint ) {\r\n\r\n\t\t\t\t\tlet helper;\r\n\t\t\t\t\tif ( joints.has( c ) ) {\r\n\r\n\t\t\t\t\t\thelper = joints.get( c );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\thelper = new IKJointHelper( c );\r\n\t\t\t\t\t\tthis.add( helper );\r\n\t\t\t\t\t\tjoints.set( c, helper );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\thelper.update();\r\n\t\t\t\t\tcurrJoints.delete( c );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tlet helper;\r\n\t\t\t\t\tif ( links.has( c ) ) {\r\n\r\n\t\t\t\t\t\thelper = links.get( c );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\thelper = new IKLinkHelper( c );\r\n\t\t\t\t\t\tthis.add( helper );\r\n\t\t\t\t\t\tlinks.set( c, helper );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\thelper.update();\r\n\t\t\t\t\tcurrLinks.delete( c );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\r\n\t\tcurrJoints.forEach( joint => {\r\n\r\n\t\t\tconst helper = joints.get( joint );\r\n\t\t\tthis.remove( helper );\r\n\t\t\thelper.dispose();\r\n\r\n\t\t} );\r\n\r\n\t\tcurrLinks.forEach( link => {\r\n\r\n\t\t\tconst helper = links.get( link );\r\n\t\t\tthis.remove( helper );\r\n\t\t\thelper.dispose();\r\n\r\n\t\t} );\r\n\r\n\t\tthis._updateHelpers();\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tconst { links, joints } = this;\r\n\t\tjoints.forEach( ( [ joint, helper ] ) => {\r\n\r\n\t\t\tthis.remove( helper );\r\n\t\t\thelper.dispose();\r\n\r\n\t\t} );\r\n\t\tjoints.clear();\r\n\r\n\t\tlinks.forEach( ( [ link, helper ] ) => {\r\n\r\n\t\t\tthis.remove( helper );\r\n\t\t\thelper.dispose();\r\n\r\n\t\t} );\r\n\t\tlinks.clear();\r\n\r\n\t}\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}