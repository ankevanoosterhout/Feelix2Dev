{"ast":null,"code":"/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Workaround for allowing cjs module to be included in bundle created by\n// rollup.\nimport * as LongExports from 'long'; // tslint:disable-next-line\n\nconst Long = // tslint:disable-next-line\nLongExports.default || LongExports;\nexport function hexToLong(hex) {\n  return Long.fromString(hex, true, 16);\n} // Some primes between 2^63 and 2^64 for various uses.\n// Hex 0xc3a5c85c97cb3127\n\nconst k0 = hexToLong('c3a5c85c97cb3127'); // Hex 0xb492b66fbe98f273\n\nconst k1 = hexToLong('b492b66fbe98f273'); // Hex 0x9ae16a3b2f90404f\n\nconst k2 = hexToLong('9ae16a3b2f90404f');\n\nfunction shiftMix(val) {\n  return val.xor(val.shru(47));\n}\n\nfunction fetch(s, offset, numBytes) {\n  const bytes = s.slice(offset, offset + numBytes);\n  return Long.fromBytes(Array.from(bytes), true, true);\n}\n\nfunction fetch64(s, offset) {\n  return fetch(s, offset, 8);\n}\n\nfunction fetch32(s, offset) {\n  return fetch(s, offset, 4);\n}\n\nfunction rotate64(val, shift) {\n  // Avoid shifting by 64: doing so yields an undefined result.\n  return shift === 0 ? val : val.shru(shift).or(val.shl(64 - shift));\n}\n\nfunction hashLen16(u, v, mul = hexToLong('9ddfea08eb382d69')) {\n  // Murmur-inspired hashing.\n  let a = u.xor(v).mul(mul);\n  a = a.xor(a.shru(47));\n  let b = v.xor(a).mul(mul);\n  b = b.xor(b.shru(47));\n  b = b.mul(mul);\n  return b;\n} // Return a 16-byte hash for 48 bytes.  Quick and dirty.\n// Callers do best to use \"random-looking\" values for a and b.\n\n\nfunction weakHashLen32WithSeeds(w, x, y, z, a, b) {\n  a = a.add(w);\n  b = rotate64(b.add(a).add(z), 21);\n  const c = a;\n  a = a.add(x);\n  a = a.add(y);\n  b = b.add(rotate64(a, 44));\n  return [a.add(z), b.add(c)];\n}\n\nfunction weakHashLen32WithSeedsStr(s, offset, a, b) {\n  return weakHashLen32WithSeeds(fetch64(s, offset), fetch64(s, offset + 8), fetch64(s, offset + 16), fetch64(s, offset + 24), a, b);\n}\n\nfunction hashLen0to16(s, len = s.length) {\n  if (len >= 8) {\n    const mul = k2.add(len * 2);\n    const a = fetch64(s, 0).add(k2);\n    const b = fetch64(s, len - 8);\n    const c = rotate64(b, 37).mul(mul).add(a);\n    const d = rotate64(a, 25).add(b).mul(mul);\n    return hashLen16(c, d, mul);\n  }\n\n  if (len >= 4) {\n    const mul = k2.add(len * 2);\n    const a = fetch32(s, 0);\n    return hashLen16(a.shl(3).add(len), fetch32(s, len - 4), mul);\n  }\n\n  if (len > 0) {\n    const a = s[0];\n    const b = s[len >> 1];\n    const c = s[len - 1];\n    const y = a + (b << 8);\n    const z = len + (c << 2);\n    return shiftMix(k2.mul(y).xor(k0.mul(z))).mul(k2);\n  }\n\n  return k2;\n}\n\nfunction hashLen17to32(s, len = s.length) {\n  const mul = k2.add(len * 2);\n  const a = fetch64(s, 0).mul(k1);\n  const b = fetch64(s, 8);\n  const c = fetch64(s, len - 8).mul(mul);\n  const d = fetch64(s, len - 16).mul(k2);\n  return hashLen16(rotate64(a.add(b), 43).add(rotate64(c, 30)).add(d), a.add(rotate64(b.add(k2), 18)).add(c), mul);\n}\n\nfunction hashLen33to64(s, len = s.length) {\n  const mul = k2.add(len * 2);\n  const a = fetch64(s, 0).mul(k2);\n  const b = fetch64(s, 8);\n  const c = fetch64(s, len - 8).mul(mul);\n  const d = fetch64(s, len - 16).mul(k2);\n  const y = rotate64(a.add(b), 43).add(rotate64(c, 30)).add(d);\n  const z = hashLen16(y, a.add(rotate64(b.add(k2), 18)).add(c), mul);\n  const e = fetch64(s, 16).mul(mul);\n  const f = fetch64(s, 24);\n  const g = y.add(fetch64(s, len - 32)).mul(mul);\n  const h = z.add(fetch64(s, len - 24)).mul(mul);\n  return hashLen16(rotate64(e.add(f), 43).add(rotate64(g, 30)).add(h), e.add(rotate64(f.add(a), 18)).add(g), mul);\n}\n\nexport function fingerPrint64(s, len = s.length) {\n  const seed = Long.fromNumber(81, true);\n\n  if (len <= 32) {\n    if (len <= 16) {\n      return hashLen0to16(s, len);\n    } else {\n      return hashLen17to32(s, len);\n    }\n  } else if (len <= 64) {\n    return hashLen33to64(s, len);\n  } // For strings over 64 bytes we loop.  Internal state consists of\n  // 56 bytes: v, w, x, y, and z.\n\n\n  let x = seed;\n  let y = seed.mul(k1).add(113);\n  let z = shiftMix(y.mul(k2).add(113)).mul(k2);\n  let v = [Long.UZERO, Long.UZERO];\n  let w = [Long.UZERO, Long.UZERO];\n  x = x.mul(k2).add(fetch64(s, 0));\n  let offset = 0; // Set end so that after the loop we have 1 to 64 bytes left to process.\n\n  const end = (len - 1 >> 6) * 64;\n  const last64 = end + (len - 1 & 63) - 63;\n\n  do {\n    x = rotate64(x.add(y).add(v[0]).add(fetch64(s, offset + 8)), 37).mul(k1);\n    y = rotate64(y.add(v[1]).add(fetch64(s, offset + 48)), 42).mul(k1);\n    x = x.xor(w[1]);\n    y = y.add(v[0]).add(fetch64(s, offset + 40));\n    z = rotate64(z.add(w[0]), 33).mul(k1);\n    v = weakHashLen32WithSeedsStr(s, offset, v[1].mul(k1), x.add(w[0]));\n    w = weakHashLen32WithSeedsStr(s, offset + 32, z.add(w[1]), y.add(fetch64(s, offset + 16)));\n    [z, x] = [x, z];\n    offset += 64;\n  } while (offset !== end);\n\n  const mul = k1.add(z.and(0xff).shl(1)); // Point to the last 64 bytes of input.\n\n  offset = last64;\n  w[0] = w[0].add(len - 1 & 63);\n  v[0] = v[0].add(w[0]);\n  w[0] = w[0].add(v[0]);\n  x = rotate64(x.add(y).add(v[0]).add(fetch64(s, offset + 8)), 37).mul(mul);\n  y = rotate64(y.add(v[1]).add(fetch64(s, offset + 48)), 42).mul(mul);\n  x = x.xor(w[1].mul(9));\n  y = y.add(v[0].mul(9).add(fetch64(s, offset + 40)));\n  z = rotate64(z.add(w[0]), 33).mul(mul);\n  v = weakHashLen32WithSeedsStr(s, offset, v[1].mul(mul), x.add(w[0]));\n  w = weakHashLen32WithSeedsStr(s, offset + 32, z.add(w[1]), y.add(fetch64(s, offset + 16)));\n  [z, x] = [x, z];\n  return hashLen16(hashLen16(v[0], w[0], mul).add(shiftMix(y).mul(k0)).add(z), hashLen16(v[1], w[1], mul).add(x), mul);\n}","map":{"version":3,"names":["LongExports","Long","default","hexToLong","hex","fromString","k0","k1","k2","shiftMix","val","xor","shru","fetch","s","offset","numBytes","bytes","slice","fromBytes","Array","from","fetch64","fetch32","rotate64","shift","or","shl","hashLen16","u","v","mul","a","b","weakHashLen32WithSeeds","w","x","y","z","add","c","weakHashLen32WithSeedsStr","hashLen0to16","len","length","d","hashLen17to32","hashLen33to64","e","f","g","h","fingerPrint64","seed","fromNumber","UZERO","end","last64","and"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-core/dist/hash_util.js"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Workaround for allowing cjs module to be included in bundle created by\n// rollup.\nimport * as LongExports from 'long';\n// tslint:disable-next-line\nconst Long = \n// tslint:disable-next-line\nLongExports.default || LongExports;\nexport function hexToLong(hex) {\n    return Long.fromString(hex, true, 16);\n}\n// Some primes between 2^63 and 2^64 for various uses.\n// Hex 0xc3a5c85c97cb3127\nconst k0 = hexToLong('c3a5c85c97cb3127');\n// Hex 0xb492b66fbe98f273\nconst k1 = hexToLong('b492b66fbe98f273');\n// Hex 0x9ae16a3b2f90404f\nconst k2 = hexToLong('9ae16a3b2f90404f');\nfunction shiftMix(val) {\n    return val.xor(val.shru(47));\n}\nfunction fetch(s, offset, numBytes) {\n    const bytes = s.slice(offset, offset + numBytes);\n    return Long.fromBytes(Array.from(bytes), true, true);\n}\nfunction fetch64(s, offset) {\n    return fetch(s, offset, 8);\n}\nfunction fetch32(s, offset) {\n    return fetch(s, offset, 4);\n}\nfunction rotate64(val, shift) {\n    // Avoid shifting by 64: doing so yields an undefined result.\n    return shift === 0 ? val : val.shru(shift).or(val.shl(64 - shift));\n}\nfunction hashLen16(u, v, mul = hexToLong('9ddfea08eb382d69')) {\n    // Murmur-inspired hashing.\n    let a = u.xor(v).mul(mul);\n    a = a.xor(a.shru(47));\n    let b = v.xor(a).mul(mul);\n    b = b.xor(b.shru(47));\n    b = b.mul(mul);\n    return b;\n}\n// Return a 16-byte hash for 48 bytes.  Quick and dirty.\n// Callers do best to use \"random-looking\" values for a and b.\nfunction weakHashLen32WithSeeds(w, x, y, z, a, b) {\n    a = a.add(w);\n    b = rotate64(b.add(a).add(z), 21);\n    const c = a;\n    a = a.add(x);\n    a = a.add(y);\n    b = b.add(rotate64(a, 44));\n    return [a.add(z), b.add(c)];\n}\nfunction weakHashLen32WithSeedsStr(s, offset, a, b) {\n    return weakHashLen32WithSeeds(fetch64(s, offset), fetch64(s, offset + 8), fetch64(s, offset + 16), fetch64(s, offset + 24), a, b);\n}\nfunction hashLen0to16(s, len = s.length) {\n    if (len >= 8) {\n        const mul = k2.add(len * 2);\n        const a = fetch64(s, 0).add(k2);\n        const b = fetch64(s, len - 8);\n        const c = rotate64(b, 37).mul(mul).add(a);\n        const d = rotate64(a, 25).add(b).mul(mul);\n        return hashLen16(c, d, mul);\n    }\n    if (len >= 4) {\n        const mul = k2.add(len * 2);\n        const a = fetch32(s, 0);\n        return hashLen16(a.shl(3).add(len), fetch32(s, len - 4), mul);\n    }\n    if (len > 0) {\n        const a = s[0];\n        const b = s[len >> 1];\n        const c = s[len - 1];\n        const y = a + (b << 8);\n        const z = len + (c << 2);\n        return shiftMix(k2.mul(y).xor(k0.mul(z))).mul(k2);\n    }\n    return k2;\n}\nfunction hashLen17to32(s, len = s.length) {\n    const mul = k2.add(len * 2);\n    const a = fetch64(s, 0).mul(k1);\n    const b = fetch64(s, 8);\n    const c = fetch64(s, len - 8).mul(mul);\n    const d = fetch64(s, len - 16).mul(k2);\n    return hashLen16(rotate64(a.add(b), 43).add(rotate64(c, 30)).add(d), a.add(rotate64(b.add(k2), 18)).add(c), mul);\n}\nfunction hashLen33to64(s, len = s.length) {\n    const mul = k2.add(len * 2);\n    const a = fetch64(s, 0).mul(k2);\n    const b = fetch64(s, 8);\n    const c = fetch64(s, len - 8).mul(mul);\n    const d = fetch64(s, len - 16).mul(k2);\n    const y = rotate64(a.add(b), 43).add(rotate64(c, 30)).add(d);\n    const z = hashLen16(y, a.add(rotate64(b.add(k2), 18)).add(c), mul);\n    const e = fetch64(s, 16).mul(mul);\n    const f = fetch64(s, 24);\n    const g = y.add(fetch64(s, len - 32)).mul(mul);\n    const h = z.add(fetch64(s, len - 24)).mul(mul);\n    return hashLen16(rotate64(e.add(f), 43).add(rotate64(g, 30)).add(h), e.add(rotate64(f.add(a), 18)).add(g), mul);\n}\nexport function fingerPrint64(s, len = s.length) {\n    const seed = Long.fromNumber(81, true);\n    if (len <= 32) {\n        if (len <= 16) {\n            return hashLen0to16(s, len);\n        }\n        else {\n            return hashLen17to32(s, len);\n        }\n    }\n    else if (len <= 64) {\n        return hashLen33to64(s, len);\n    }\n    // For strings over 64 bytes we loop.  Internal state consists of\n    // 56 bytes: v, w, x, y, and z.\n    let x = seed;\n    let y = seed.mul(k1).add(113);\n    let z = shiftMix(y.mul(k2).add(113)).mul(k2);\n    let v = [Long.UZERO, Long.UZERO];\n    let w = [Long.UZERO, Long.UZERO];\n    x = x.mul(k2).add(fetch64(s, 0));\n    let offset = 0;\n    // Set end so that after the loop we have 1 to 64 bytes left to process.\n    const end = ((len - 1) >> 6) * 64;\n    const last64 = end + ((len - 1) & 63) - 63;\n    do {\n        x = rotate64(x.add(y).add(v[0]).add(fetch64(s, offset + 8)), 37).mul(k1);\n        y = rotate64(y.add(v[1]).add(fetch64(s, offset + 48)), 42).mul(k1);\n        x = x.xor(w[1]);\n        y = y.add(v[0]).add(fetch64(s, offset + 40));\n        z = rotate64(z.add(w[0]), 33).mul(k1);\n        v = weakHashLen32WithSeedsStr(s, offset, v[1].mul(k1), x.add(w[0]));\n        w = weakHashLen32WithSeedsStr(s, offset + 32, z.add(w[1]), y.add(fetch64(s, offset + 16)));\n        [z, x] = [x, z];\n        offset += 64;\n    } while (offset !== end);\n    const mul = k1.add(z.and(0xff).shl(1));\n    // Point to the last 64 bytes of input.\n    offset = last64;\n    w[0] = w[0].add((len - 1) & 63);\n    v[0] = v[0].add(w[0]);\n    w[0] = w[0].add(v[0]);\n    x = rotate64(x.add(y).add(v[0]).add(fetch64(s, offset + 8)), 37).mul(mul);\n    y = rotate64(y.add(v[1]).add(fetch64(s, offset + 48)), 42).mul(mul);\n    x = x.xor(w[1].mul(9));\n    y = y.add(v[0].mul(9).add(fetch64(s, offset + 40)));\n    z = rotate64(z.add(w[0]), 33).mul(mul);\n    v = weakHashLen32WithSeedsStr(s, offset, v[1].mul(mul), x.add(w[0]));\n    w = weakHashLen32WithSeedsStr(s, offset + 32, z.add(w[1]), y.add(fetch64(s, offset + 16)));\n    [z, x] = [x, z];\n    return hashLen16(hashLen16(v[0], w[0], mul).add(shiftMix(y).mul(k0)).add(z), hashLen16(v[1], w[1], mul).add(x), mul);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}