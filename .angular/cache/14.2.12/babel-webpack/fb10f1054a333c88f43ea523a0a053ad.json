{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { dilation2d } from '../../ops/dilation2d';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.dilation2d = function (filter, strides, pad, dilations, dataFormat) {\n  this.throwIfDisposed();\n  return dilation2d(this, filter, strides, pad, dilations, dataFormat);\n};","map":{"version":3,"names":["dilation2d","getGlobalTensorClass","prototype","filter","strides","pad","dilations","dataFormat","throwIfDisposed"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/dilation2d.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { dilation2d } from '../../ops/dilation2d';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.dilation2d =\n    function (filter, strides, pad, dilations, dataFormat) {\n        this.throwIfDisposed();\n        return dilation2d(this, filter, strides, pad, dilations, dataFormat);\n    };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAT,QAA2B,sBAA3B;AACA,SAASC,oBAAT,QAAqC,cAArC;;AACAA,oBAAoB,GAAGC,SAAvB,CAAiCF,UAAjC,GACI,UAAUG,MAAV,EAAkBC,OAAlB,EAA2BC,GAA3B,EAAgCC,SAAhC,EAA2CC,UAA3C,EAAuD;EACnD,KAAKC,eAAL;EACA,OAAOR,UAAU,CAAC,IAAD,EAAOG,MAAP,EAAeC,OAAf,EAAwBC,GAAxB,EAA6BC,SAA7B,EAAwCC,UAAxC,CAAjB;AACH,CAJL"},"metadata":{},"sourceType":"module"}