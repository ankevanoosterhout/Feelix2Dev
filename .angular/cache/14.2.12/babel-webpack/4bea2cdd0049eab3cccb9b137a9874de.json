{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, DepthwiseConv2dNative, env, util } from '@tensorflow/tfjs-core';\nimport { DepthwiseConv2DProgram } from '../conv_gpu_depthwise';\nimport { DepthwiseConvPacked2DProgram } from '../conv_packed_gpu_depthwise';\nexport function depthwiseConv2dNative(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x,\n    filter\n  } = inputs;\n  const {\n    strides,\n    pad,\n    dilations,\n    dimRoundingMode\n  } = attrs;\n  let $dilations = dilations;\n\n  if ($dilations == null) {\n    $dilations = [1, 1];\n  }\n\n  util.assert(backend_util.eitherStridesOrDilationsAreOne(strides, $dilations), () => 'Error in depthwiseConv2d: Either strides or dilations must be ' + `1. Got strides ${strides} and dilations '${$dilations}'`);\n  const convInfo = backend_util.computeConv2DInfo(x.shape, filter.shape, strides, $dilations, pad, dimRoundingMode, true\n  /* depthwise */\n  );\n  let program;\n\n  if (env().getBool('WEBGL_PACK_DEPTHWISECONV') && convInfo.strideWidth <= 2 && convInfo.outChannels / convInfo.inChannels === 1) {\n    program = new DepthwiseConvPacked2DProgram(convInfo);\n  } else {\n    program = new DepthwiseConv2DProgram(convInfo);\n  }\n\n  const customValues = [[convInfo.padInfo.top, convInfo.padInfo.left], [convInfo.strideHeight, convInfo.strideWidth], [convInfo.dilationHeight, convInfo.dilationWidth], [convInfo.inHeight, convInfo.inWidth]];\n  return backend.runWebGLProgram(program, [x, filter], 'float32', customValues);\n}\nexport const depthwiseConv2dNativeConfig = {\n  kernelName: DepthwiseConv2dNative,\n  backendName: 'webgl',\n  kernelFunc: depthwiseConv2dNative\n};","map":{"version":3,"names":["backend_util","DepthwiseConv2dNative","env","util","DepthwiseConv2DProgram","DepthwiseConvPacked2DProgram","depthwiseConv2dNative","args","inputs","backend","attrs","x","filter","strides","pad","dilations","dimRoundingMode","$dilations","assert","eitherStridesOrDilationsAreOne","convInfo","computeConv2DInfo","shape","program","getBool","strideWidth","outChannels","inChannels","customValues","padInfo","top","left","strideHeight","dilationHeight","dilationWidth","inHeight","inWidth","runWebGLProgram","depthwiseConv2dNativeConfig","kernelName","backendName","kernelFunc"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/DepthwiseConv2dNative.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, DepthwiseConv2dNative, env, util } from '@tensorflow/tfjs-core';\nimport { DepthwiseConv2DProgram } from '../conv_gpu_depthwise';\nimport { DepthwiseConvPacked2DProgram } from '../conv_packed_gpu_depthwise';\nexport function depthwiseConv2dNative(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, filter } = inputs;\n    const { strides, pad, dilations, dimRoundingMode } = attrs;\n    let $dilations = dilations;\n    if ($dilations == null) {\n        $dilations = [1, 1];\n    }\n    util.assert(backend_util.eitherStridesOrDilationsAreOne(strides, $dilations), () => 'Error in depthwiseConv2d: Either strides or dilations must be ' +\n        `1. Got strides ${strides} and dilations '${$dilations}'`);\n    const convInfo = backend_util.computeConv2DInfo(x.shape, filter.shape, strides, $dilations, pad, dimRoundingMode, true /* depthwise */);\n    let program;\n    if (env().getBool('WEBGL_PACK_DEPTHWISECONV') && convInfo.strideWidth <= 2 &&\n        convInfo.outChannels / convInfo.inChannels === 1) {\n        program = new DepthwiseConvPacked2DProgram(convInfo);\n    }\n    else {\n        program = new DepthwiseConv2DProgram(convInfo);\n    }\n    const customValues = [\n        [convInfo.padInfo.top, convInfo.padInfo.left],\n        [convInfo.strideHeight, convInfo.strideWidth],\n        [convInfo.dilationHeight, convInfo.dilationWidth],\n        [convInfo.inHeight, convInfo.inWidth]\n    ];\n    return backend.runWebGLProgram(program, [x, filter], 'float32', customValues);\n}\nexport const depthwiseConv2dNativeConfig = {\n    kernelName: DepthwiseConv2dNative,\n    backendName: 'webgl',\n    kernelFunc: depthwiseConv2dNative,\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAT,EAAuBC,qBAAvB,EAA8CC,GAA9C,EAAmDC,IAAnD,QAA+D,uBAA/D;AACA,SAASC,sBAAT,QAAuC,uBAAvC;AACA,SAASC,4BAAT,QAA6C,8BAA7C;AACA,OAAO,SAASC,qBAAT,CAA+BC,IAA/B,EAAqC;EACxC,MAAM;IAAEC,MAAF;IAAUC,OAAV;IAAmBC;EAAnB,IAA6BH,IAAnC;EACA,MAAM;IAAEI,CAAF;IAAKC;EAAL,IAAgBJ,MAAtB;EACA,MAAM;IAAEK,OAAF;IAAWC,GAAX;IAAgBC,SAAhB;IAA2BC;EAA3B,IAA+CN,KAArD;EACA,IAAIO,UAAU,GAAGF,SAAjB;;EACA,IAAIE,UAAU,IAAI,IAAlB,EAAwB;IACpBA,UAAU,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAb;EACH;;EACDd,IAAI,CAACe,MAAL,CAAYlB,YAAY,CAACmB,8BAAb,CAA4CN,OAA5C,EAAqDI,UAArD,CAAZ,EAA8E,MAAM,mEAC/E,kBAAiBJ,OAAQ,mBAAkBI,UAAW,GAD3D;EAEA,MAAMG,QAAQ,GAAGpB,YAAY,CAACqB,iBAAb,CAA+BV,CAAC,CAACW,KAAjC,EAAwCV,MAAM,CAACU,KAA/C,EAAsDT,OAAtD,EAA+DI,UAA/D,EAA2EH,GAA3E,EAAgFE,eAAhF,EAAiG;EAAK;EAAtG,CAAjB;EACA,IAAIO,OAAJ;;EACA,IAAIrB,GAAG,GAAGsB,OAAN,CAAc,0BAAd,KAA6CJ,QAAQ,CAACK,WAAT,IAAwB,CAArE,IACAL,QAAQ,CAACM,WAAT,GAAuBN,QAAQ,CAACO,UAAhC,KAA+C,CADnD,EACsD;IAClDJ,OAAO,GAAG,IAAIlB,4BAAJ,CAAiCe,QAAjC,CAAV;EACH,CAHD,MAIK;IACDG,OAAO,GAAG,IAAInB,sBAAJ,CAA2BgB,QAA3B,CAAV;EACH;;EACD,MAAMQ,YAAY,GAAG,CACjB,CAACR,QAAQ,CAACS,OAAT,CAAiBC,GAAlB,EAAuBV,QAAQ,CAACS,OAAT,CAAiBE,IAAxC,CADiB,EAEjB,CAACX,QAAQ,CAACY,YAAV,EAAwBZ,QAAQ,CAACK,WAAjC,CAFiB,EAGjB,CAACL,QAAQ,CAACa,cAAV,EAA0Bb,QAAQ,CAACc,aAAnC,CAHiB,EAIjB,CAACd,QAAQ,CAACe,QAAV,EAAoBf,QAAQ,CAACgB,OAA7B,CAJiB,CAArB;EAMA,OAAO3B,OAAO,CAAC4B,eAAR,CAAwBd,OAAxB,EAAiC,CAACZ,CAAD,EAAIC,MAAJ,CAAjC,EAA8C,SAA9C,EAAyDgB,YAAzD,CAAP;AACH;AACD,OAAO,MAAMU,2BAA2B,GAAG;EACvCC,UAAU,EAAEtC,qBAD2B;EAEvCuC,WAAW,EAAE,OAF0B;EAGvCC,UAAU,EAAEnC;AAH2B,CAApC"},"metadata":{},"sourceType":"module"}