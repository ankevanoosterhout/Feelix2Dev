{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\nvar _resolveScalarsInLogs;\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\nimport { dispose } from '@tensorflow/tfjs-core';\n/**\n * Turn any Scalar values in a Logs object into actual number values.\n *\n * @param logs The `Logs` object to be resolved in place.\n */\n\nexport function resolveScalarsInLogs(_x) {\n  return (_resolveScalarsInLogs = _resolveScalarsInLogs || _asyncToGenerator(function* (logs) {\n    if (logs == null) {\n      return;\n    }\n\n    const promises = [];\n    const keys = [];\n    const scalarsToDispose = [];\n\n    for (const key in logs) {\n      const value = logs[key];\n\n      if (typeof value !== 'number') {\n        const valueScalar = value;\n        promises.push(valueScalar.data());\n        keys.push(key);\n        scalarsToDispose.push(valueScalar);\n      }\n    }\n\n    if (promises.length > 0) {\n      const values = yield Promise.all(promises);\n\n      for (let i = 0; i < values.length; ++i) {\n        logs[keys[i]] = values[i][0];\n      } // Dispose the original scalar tensors.\n\n\n      dispose(scalarsToDispose);\n    }\n  })).apply(this, arguments);\n}\n/**\n * Dispose all Tensors in an UnresolvedLogs object.\n *\n * @param logs An `UnresolvedLogs` object potentially containing `tf.Tensor`s in\n *   places where the values can be `tf.Tensor` or `number`.\n */\n\nexport function disposeTensorsInLogs(logs) {\n  if (logs == null) {\n    return;\n  }\n\n  for (const key in logs) {\n    const value = logs[key];\n\n    if (typeof value !== 'number') {\n      value.dispose();\n    }\n  }\n}","map":{"version":3,"names":["dispose","resolveScalarsInLogs","logs","promises","keys","scalarsToDispose","key","value","valueScalar","push","data","length","values","Promise","all","i","disposeTensorsInLogs"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-layers/dist/logs.js"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\nimport { dispose } from '@tensorflow/tfjs-core';\n/**\n * Turn any Scalar values in a Logs object into actual number values.\n *\n * @param logs The `Logs` object to be resolved in place.\n */\nexport async function resolveScalarsInLogs(logs) {\n    if (logs == null) {\n        return;\n    }\n    const promises = [];\n    const keys = [];\n    const scalarsToDispose = [];\n    for (const key in logs) {\n        const value = logs[key];\n        if (typeof value !== 'number') {\n            const valueScalar = value;\n            promises.push(valueScalar.data());\n            keys.push(key);\n            scalarsToDispose.push(valueScalar);\n        }\n    }\n    if (promises.length > 0) {\n        const values = await Promise.all(promises);\n        for (let i = 0; i < values.length; ++i) {\n            logs[keys[i]] = values[i][0];\n        }\n        // Dispose the original scalar tensors.\n        dispose(scalarsToDispose);\n    }\n}\n/**\n * Dispose all Tensors in an UnresolvedLogs object.\n *\n * @param logs An `UnresolvedLogs` object potentially containing `tf.Tensor`s in\n *   places where the values can be `tf.Tensor` or `number`.\n */\nexport function disposeTensorsInLogs(logs) {\n    if (logs == null) {\n        return;\n    }\n    for (const key in logs) {\n        const value = logs[key];\n        if (typeof value !== 'number') {\n            value.dispose();\n        }\n    }\n}\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,OAAT,QAAwB,uBAAxB;AACA;AACA;AACA;AACA;AACA;;AACA,gBAAsBC,oBAAtB;EAAA,2EAAO,WAAoCC,IAApC,EAA0C;IAC7C,IAAIA,IAAI,IAAI,IAAZ,EAAkB;MACd;IACH;;IACD,MAAMC,QAAQ,GAAG,EAAjB;IACA,MAAMC,IAAI,GAAG,EAAb;IACA,MAAMC,gBAAgB,GAAG,EAAzB;;IACA,KAAK,MAAMC,GAAX,IAAkBJ,IAAlB,EAAwB;MACpB,MAAMK,KAAK,GAAGL,IAAI,CAACI,GAAD,CAAlB;;MACA,IAAI,OAAOC,KAAP,KAAiB,QAArB,EAA+B;QAC3B,MAAMC,WAAW,GAAGD,KAApB;QACAJ,QAAQ,CAACM,IAAT,CAAcD,WAAW,CAACE,IAAZ,EAAd;QACAN,IAAI,CAACK,IAAL,CAAUH,GAAV;QACAD,gBAAgB,CAACI,IAAjB,CAAsBD,WAAtB;MACH;IACJ;;IACD,IAAIL,QAAQ,CAACQ,MAAT,GAAkB,CAAtB,EAAyB;MACrB,MAAMC,MAAM,SAASC,OAAO,CAACC,GAAR,CAAYX,QAAZ,CAArB;;MACA,KAAK,IAAIY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAAM,CAACD,MAA3B,EAAmC,EAAEI,CAArC,EAAwC;QACpCb,IAAI,CAACE,IAAI,CAACW,CAAD,CAAL,CAAJ,GAAgBH,MAAM,CAACG,CAAD,CAAN,CAAU,CAAV,CAAhB;MACH,CAJoB,CAKrB;;;MACAf,OAAO,CAACK,gBAAD,CAAP;IACH;EACJ,CAxBD;AAAA;AAyBA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASW,oBAAT,CAA8Bd,IAA9B,EAAoC;EACvC,IAAIA,IAAI,IAAI,IAAZ,EAAkB;IACd;EACH;;EACD,KAAK,MAAMI,GAAX,IAAkBJ,IAAlB,EAAwB;IACpB,MAAMK,KAAK,GAAGL,IAAI,CAACI,GAAD,CAAlB;;IACA,IAAI,OAAOC,KAAP,KAAiB,QAArB,EAA+B;MAC3BA,KAAK,CAACP,OAAN;IACH;EACJ;AACJ"},"metadata":{},"sourceType":"module"}