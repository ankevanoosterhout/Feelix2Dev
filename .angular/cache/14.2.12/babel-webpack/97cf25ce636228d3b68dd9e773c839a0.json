{"ast":null,"code":"import { BoxGeometry, BufferGeometry, CylinderGeometry, DoubleSide, Euler, Float32BufferAttribute, Line, LineBasicMaterial, Matrix4, Mesh, MeshBasicMaterial, Object3D, OctahedronGeometry, PlaneGeometry, Quaternion, Raycaster, SphereGeometry, TorusGeometry, Vector3 } from 'three';\n\nconst _raycaster = new Raycaster();\n\nconst _tempVector = new Vector3();\n\nconst _tempVector2 = new Vector3();\n\nconst _tempQuaternion = new Quaternion();\n\nconst _unit = {\n  X: new Vector3(1, 0, 0),\n  Y: new Vector3(0, 1, 0),\n  Z: new Vector3(0, 0, 1)\n};\nconst _changeEvent = {\n  type: 'change'\n};\nconst _mouseDownEvent = {\n  type: 'mouseDown'\n};\nconst _mouseUpEvent = {\n  type: 'mouseUp',\n  mode: null\n};\nconst _objectChangeEvent = {\n  type: 'objectChange'\n};\n\nclass TransformControls extends Object3D {\n  constructor(camera, domElement) {\n    super();\n\n    if (domElement === undefined) {\n      console.warn('THREE.TransformControls: The second parameter \"domElement\" is now mandatory.');\n      domElement = document;\n    }\n\n    this.visible = false;\n    this.domElement = domElement;\n    this.domElement.style.touchAction = 'none'; // disable touch scroll\n\n    const _gizmo = new TransformControlsGizmo();\n\n    this._gizmo = _gizmo;\n    this.add(_gizmo);\n\n    const _plane = new TransformControlsPlane();\n\n    this._plane = _plane;\n    this.add(_plane);\n    const scope = this; // Defined getter, setter and store for a property\n\n    function defineProperty(propName, defaultValue) {\n      let propValue = defaultValue;\n      Object.defineProperty(scope, propName, {\n        get: function () {\n          return propValue !== undefined ? propValue : defaultValue;\n        },\n        set: function (value) {\n          if (propValue !== value) {\n            propValue = value;\n            _plane[propName] = value;\n            _gizmo[propName] = value;\n            scope.dispatchEvent({\n              type: propName + '-changed',\n              value: value\n            });\n            scope.dispatchEvent(_changeEvent);\n          }\n        }\n      });\n      scope[propName] = defaultValue;\n      _plane[propName] = defaultValue;\n      _gizmo[propName] = defaultValue;\n    } // Define properties with getters/setter\n    // Setting the defined property will automatically trigger change event\n    // Defined properties are passed down to gizmo and plane\n\n\n    defineProperty('camera', camera);\n    defineProperty('object', undefined);\n    defineProperty('enabled', true);\n    defineProperty('axis', null);\n    defineProperty('mode', 'translate');\n    defineProperty('translationSnap', null);\n    defineProperty('rotationSnap', null);\n    defineProperty('scaleSnap', null);\n    defineProperty('space', 'world');\n    defineProperty('size', 1);\n    defineProperty('dragging', false);\n    defineProperty('showX', true);\n    defineProperty('showY', true);\n    defineProperty('showZ', true); // Reusable utility variables\n\n    const worldPosition = new Vector3();\n    const worldPositionStart = new Vector3();\n    const worldQuaternion = new Quaternion();\n    const worldQuaternionStart = new Quaternion();\n    const cameraPosition = new Vector3();\n    const cameraQuaternion = new Quaternion();\n    const pointStart = new Vector3();\n    const pointEnd = new Vector3();\n    const rotationAxis = new Vector3();\n    const rotationAngle = 0;\n    const eye = new Vector3(); // TODO: remove properties unused in plane and gizmo\n\n    defineProperty('worldPosition', worldPosition);\n    defineProperty('worldPositionStart', worldPositionStart);\n    defineProperty('worldQuaternion', worldQuaternion);\n    defineProperty('worldQuaternionStart', worldQuaternionStart);\n    defineProperty('cameraPosition', cameraPosition);\n    defineProperty('cameraQuaternion', cameraQuaternion);\n    defineProperty('pointStart', pointStart);\n    defineProperty('pointEnd', pointEnd);\n    defineProperty('rotationAxis', rotationAxis);\n    defineProperty('rotationAngle', rotationAngle);\n    defineProperty('eye', eye);\n    this._offset = new Vector3();\n    this._startNorm = new Vector3();\n    this._endNorm = new Vector3();\n    this._cameraScale = new Vector3();\n    this._parentPosition = new Vector3();\n    this._parentQuaternion = new Quaternion();\n    this._parentQuaternionInv = new Quaternion();\n    this._parentScale = new Vector3();\n    this._worldScaleStart = new Vector3();\n    this._worldQuaternionInv = new Quaternion();\n    this._worldScale = new Vector3();\n    this._positionStart = new Vector3();\n    this._quaternionStart = new Quaternion();\n    this._scaleStart = new Vector3();\n    this._getPointer = getPointer.bind(this);\n    this._onPointerDown = onPointerDown.bind(this);\n    this._onPointerHover = onPointerHover.bind(this);\n    this._onPointerMove = onPointerMove.bind(this);\n    this._onPointerUp = onPointerUp.bind(this);\n    this.domElement.addEventListener('pointerdown', this._onPointerDown);\n    this.domElement.addEventListener('pointermove', this._onPointerHover);\n    this.domElement.addEventListener('pointerup', this._onPointerUp);\n  } // updateMatrixWorld  updates key transformation variables\n\n\n  updateMatrixWorld() {\n    if (this.object !== undefined) {\n      this.object.updateMatrixWorld();\n\n      if (this.object.parent === null) {\n        console.error('TransformControls: The attached 3D object must be a part of the scene graph.');\n      } else {\n        this.object.parent.matrixWorld.decompose(this._parentPosition, this._parentQuaternion, this._parentScale);\n      }\n\n      this.object.matrixWorld.decompose(this.worldPosition, this.worldQuaternion, this._worldScale);\n\n      this._parentQuaternionInv.copy(this._parentQuaternion).invert();\n\n      this._worldQuaternionInv.copy(this.worldQuaternion).invert();\n    }\n\n    this.camera.updateMatrixWorld();\n    this.camera.matrixWorld.decompose(this.cameraPosition, this.cameraQuaternion, this._cameraScale);\n    this.eye.copy(this.cameraPosition).sub(this.worldPosition).normalize();\n    super.updateMatrixWorld(this);\n  }\n\n  pointerHover(pointer) {\n    if (this.object === undefined || this.dragging === true) return;\n\n    _raycaster.setFromCamera(pointer, this.camera);\n\n    const intersect = intersectObjectWithRay(this._gizmo.picker[this.mode], _raycaster);\n\n    if (intersect) {\n      this.axis = intersect.object.name;\n    } else {\n      this.axis = null;\n    }\n  }\n\n  pointerDown(pointer) {\n    if (this.object === undefined || this.dragging === true || pointer.button !== 0) return;\n\n    if (this.axis !== null) {\n      _raycaster.setFromCamera(pointer, this.camera);\n\n      const planeIntersect = intersectObjectWithRay(this._plane, _raycaster, true);\n\n      if (planeIntersect) {\n        this.object.updateMatrixWorld();\n        this.object.parent.updateMatrixWorld();\n\n        this._positionStart.copy(this.object.position);\n\n        this._quaternionStart.copy(this.object.quaternion);\n\n        this._scaleStart.copy(this.object.scale);\n\n        this.object.matrixWorld.decompose(this.worldPositionStart, this.worldQuaternionStart, this._worldScaleStart);\n        this.pointStart.copy(planeIntersect.point).sub(this.worldPositionStart);\n      }\n\n      this.dragging = true;\n      _mouseDownEvent.mode = this.mode;\n      this.dispatchEvent(_mouseDownEvent);\n    }\n  }\n\n  pointerMove(pointer) {\n    const axis = this.axis;\n    const mode = this.mode;\n    const object = this.object;\n    let space = this.space;\n\n    if (mode === 'scale') {\n      space = 'local';\n    } else if (axis === 'E' || axis === 'XYZE' || axis === 'XYZ') {\n      space = 'world';\n    }\n\n    if (object === undefined || axis === null || this.dragging === false || pointer.button !== -1) return;\n\n    _raycaster.setFromCamera(pointer, this.camera);\n\n    const planeIntersect = intersectObjectWithRay(this._plane, _raycaster, true);\n    if (!planeIntersect) return;\n    this.pointEnd.copy(planeIntersect.point).sub(this.worldPositionStart);\n\n    if (mode === 'translate') {\n      // Apply translate\n      this._offset.copy(this.pointEnd).sub(this.pointStart);\n\n      if (space === 'local' && axis !== 'XYZ') {\n        this._offset.applyQuaternion(this._worldQuaternionInv);\n      }\n\n      if (axis.indexOf('X') === -1) this._offset.x = 0;\n      if (axis.indexOf('Y') === -1) this._offset.y = 0;\n      if (axis.indexOf('Z') === -1) this._offset.z = 0;\n\n      if (space === 'local' && axis !== 'XYZ') {\n        this._offset.applyQuaternion(this._quaternionStart).divide(this._parentScale);\n      } else {\n        this._offset.applyQuaternion(this._parentQuaternionInv).divide(this._parentScale);\n      }\n\n      object.position.copy(this._offset).add(this._positionStart); // Apply translation snap\n\n      if (this.translationSnap) {\n        if (space === 'local') {\n          object.position.applyQuaternion(_tempQuaternion.copy(this._quaternionStart).invert());\n\n          if (axis.search('X') !== -1) {\n            object.position.x = Math.round(object.position.x / this.translationSnap) * this.translationSnap;\n          }\n\n          if (axis.search('Y') !== -1) {\n            object.position.y = Math.round(object.position.y / this.translationSnap) * this.translationSnap;\n          }\n\n          if (axis.search('Z') !== -1) {\n            object.position.z = Math.round(object.position.z / this.translationSnap) * this.translationSnap;\n          }\n\n          object.position.applyQuaternion(this._quaternionStart);\n        }\n\n        if (space === 'world') {\n          if (object.parent) {\n            object.position.add(_tempVector.setFromMatrixPosition(object.parent.matrixWorld));\n          }\n\n          if (axis.search('X') !== -1) {\n            object.position.x = Math.round(object.position.x / this.translationSnap) * this.translationSnap;\n          }\n\n          if (axis.search('Y') !== -1) {\n            object.position.y = Math.round(object.position.y / this.translationSnap) * this.translationSnap;\n          }\n\n          if (axis.search('Z') !== -1) {\n            object.position.z = Math.round(object.position.z / this.translationSnap) * this.translationSnap;\n          }\n\n          if (object.parent) {\n            object.position.sub(_tempVector.setFromMatrixPosition(object.parent.matrixWorld));\n          }\n        }\n      }\n    } else if (mode === 'scale') {\n      if (axis.search('XYZ') !== -1) {\n        let d = this.pointEnd.length() / this.pointStart.length();\n        if (this.pointEnd.dot(this.pointStart) < 0) d *= -1;\n\n        _tempVector2.set(d, d, d);\n      } else {\n        _tempVector.copy(this.pointStart);\n\n        _tempVector2.copy(this.pointEnd);\n\n        _tempVector.applyQuaternion(this._worldQuaternionInv);\n\n        _tempVector2.applyQuaternion(this._worldQuaternionInv);\n\n        _tempVector2.divide(_tempVector);\n\n        if (axis.search('X') === -1) {\n          _tempVector2.x = 1;\n        }\n\n        if (axis.search('Y') === -1) {\n          _tempVector2.y = 1;\n        }\n\n        if (axis.search('Z') === -1) {\n          _tempVector2.z = 1;\n        }\n      } // Apply scale\n\n\n      object.scale.copy(this._scaleStart).multiply(_tempVector2);\n\n      if (this.scaleSnap) {\n        if (axis.search('X') !== -1) {\n          object.scale.x = Math.round(object.scale.x / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n        }\n\n        if (axis.search('Y') !== -1) {\n          object.scale.y = Math.round(object.scale.y / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n        }\n\n        if (axis.search('Z') !== -1) {\n          object.scale.z = Math.round(object.scale.z / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n        }\n      }\n    } else if (mode === 'rotate') {\n      this._offset.copy(this.pointEnd).sub(this.pointStart);\n\n      const ROTATION_SPEED = 20 / this.worldPosition.distanceTo(_tempVector.setFromMatrixPosition(this.camera.matrixWorld));\n\n      if (axis === 'E') {\n        this.rotationAxis.copy(this.eye);\n        this.rotationAngle = this.pointEnd.angleTo(this.pointStart);\n\n        this._startNorm.copy(this.pointStart).normalize();\n\n        this._endNorm.copy(this.pointEnd).normalize();\n\n        this.rotationAngle *= this._endNorm.cross(this._startNorm).dot(this.eye) < 0 ? 1 : -1;\n      } else if (axis === 'XYZE') {\n        this.rotationAxis.copy(this._offset).cross(this.eye).normalize();\n        this.rotationAngle = this._offset.dot(_tempVector.copy(this.rotationAxis).cross(this.eye)) * ROTATION_SPEED;\n      } else if (axis === 'X' || axis === 'Y' || axis === 'Z') {\n        this.rotationAxis.copy(_unit[axis]);\n\n        _tempVector.copy(_unit[axis]);\n\n        if (space === 'local') {\n          _tempVector.applyQuaternion(this.worldQuaternion);\n        }\n\n        this.rotationAngle = this._offset.dot(_tempVector.cross(this.eye).normalize()) * ROTATION_SPEED;\n      } // Apply rotation snap\n\n\n      if (this.rotationSnap) this.rotationAngle = Math.round(this.rotationAngle / this.rotationSnap) * this.rotationSnap; // Apply rotate\n\n      if (space === 'local' && axis !== 'E' && axis !== 'XYZE') {\n        object.quaternion.copy(this._quaternionStart);\n        object.quaternion.multiply(_tempQuaternion.setFromAxisAngle(this.rotationAxis, this.rotationAngle)).normalize();\n      } else {\n        this.rotationAxis.applyQuaternion(this._parentQuaternionInv);\n        object.quaternion.copy(_tempQuaternion.setFromAxisAngle(this.rotationAxis, this.rotationAngle));\n        object.quaternion.multiply(this._quaternionStart).normalize();\n      }\n    }\n\n    this.dispatchEvent(_changeEvent);\n    this.dispatchEvent(_objectChangeEvent);\n  }\n\n  pointerUp(pointer) {\n    if (pointer.button !== 0) return;\n\n    if (this.dragging && this.axis !== null) {\n      _mouseUpEvent.mode = this.mode;\n      this.dispatchEvent(_mouseUpEvent);\n    }\n\n    this.dragging = false;\n    this.axis = null;\n  }\n\n  dispose() {\n    this.domElement.removeEventListener('pointerdown', this._onPointerDown);\n    this.domElement.removeEventListener('pointermove', this._onPointerHover);\n    this.domElement.removeEventListener('pointermove', this._onPointerMove);\n    this.domElement.removeEventListener('pointerup', this._onPointerUp);\n    this.traverse(function (child) {\n      if (child.geometry) child.geometry.dispose();\n      if (child.material) child.material.dispose();\n    });\n  } // Set current object\n\n\n  attach(object) {\n    this.object = object;\n    this.visible = true;\n    return this;\n  } // Detatch from object\n\n\n  detach() {\n    this.object = undefined;\n    this.visible = false;\n    this.axis = null;\n    return this;\n  }\n\n  reset() {\n    if (!this.enabled) return;\n\n    if (this.dragging) {\n      this.object.position.copy(this._positionStart);\n      this.object.quaternion.copy(this._quaternionStart);\n      this.object.scale.copy(this._scaleStart);\n      this.dispatchEvent(_changeEvent);\n      this.dispatchEvent(_objectChangeEvent);\n      this.pointStart.copy(this.pointEnd);\n    }\n  }\n\n  getRaycaster() {\n    return _raycaster;\n  } // TODO: deprecate\n\n\n  getMode() {\n    return this.mode;\n  }\n\n  setMode(mode) {\n    this.mode = mode;\n  }\n\n  setTranslationSnap(translationSnap) {\n    this.translationSnap = translationSnap;\n  }\n\n  setRotationSnap(rotationSnap) {\n    this.rotationSnap = rotationSnap;\n  }\n\n  setScaleSnap(scaleSnap) {\n    this.scaleSnap = scaleSnap;\n  }\n\n  setSize(size) {\n    this.size = size;\n  }\n\n  setSpace(space) {\n    this.space = space;\n  }\n\n  update() {\n    console.warn('THREE.TransformControls: update function has no more functionality and therefore has been deprecated.');\n  }\n\n}\n\nTransformControls.prototype.isTransformControls = true; // mouse / touch event handlers\n\nfunction getPointer(event) {\n  if (this.domElement.ownerDocument.pointerLockElement) {\n    return {\n      x: 0,\n      y: 0,\n      button: event.button\n    };\n  } else {\n    const rect = this.domElement.getBoundingClientRect();\n    return {\n      x: (event.clientX - rect.left) / rect.width * 2 - 1,\n      y: -(event.clientY - rect.top) / rect.height * 2 + 1,\n      button: event.button\n    };\n  }\n}\n\nfunction onPointerHover(event) {\n  if (!this.enabled) return;\n\n  switch (event.pointerType) {\n    case 'mouse':\n    case 'pen':\n      this.pointerHover(this._getPointer(event));\n      break;\n  }\n}\n\nfunction onPointerDown(event) {\n  if (!this.enabled) return;\n\n  if (!document.pointerLockElement) {\n    this.domElement.setPointerCapture(event.pointerId);\n  }\n\n  this.domElement.addEventListener('pointermove', this._onPointerMove);\n  this.pointerHover(this._getPointer(event));\n  this.pointerDown(this._getPointer(event));\n}\n\nfunction onPointerMove(event) {\n  if (!this.enabled) return;\n  this.pointerMove(this._getPointer(event));\n}\n\nfunction onPointerUp(event) {\n  if (!this.enabled) return;\n  this.domElement.releasePointerCapture(event.pointerId);\n  this.domElement.removeEventListener('pointermove', this._onPointerMove);\n  this.pointerUp(this._getPointer(event));\n}\n\nfunction intersectObjectWithRay(object, raycaster, includeInvisible) {\n  const allIntersections = raycaster.intersectObject(object, true);\n\n  for (let i = 0; i < allIntersections.length; i++) {\n    if (allIntersections[i].object.visible || includeInvisible) {\n      return allIntersections[i];\n    }\n  }\n\n  return false;\n} //\n// Reusable utility variables\n\n\nconst _tempEuler = new Euler();\n\nconst _alignVector = new Vector3(0, 1, 0);\n\nconst _zeroVector = new Vector3(0, 0, 0);\n\nconst _lookAtMatrix = new Matrix4();\n\nconst _tempQuaternion2 = new Quaternion();\n\nconst _identityQuaternion = new Quaternion();\n\nconst _dirVector = new Vector3();\n\nconst _tempMatrix = new Matrix4();\n\nconst _unitX = new Vector3(1, 0, 0);\n\nconst _unitY = new Vector3(0, 1, 0);\n\nconst _unitZ = new Vector3(0, 0, 1);\n\nconst _v1 = new Vector3();\n\nconst _v2 = new Vector3();\n\nconst _v3 = new Vector3();\n\nclass TransformControlsGizmo extends Object3D {\n  constructor() {\n    super();\n    this.type = 'TransformControlsGizmo'; // shared materials\n\n    const gizmoMaterial = new MeshBasicMaterial({\n      depthTest: false,\n      depthWrite: false,\n      fog: false,\n      toneMapped: false,\n      transparent: true\n    });\n    const gizmoLineMaterial = new LineBasicMaterial({\n      depthTest: false,\n      depthWrite: false,\n      fog: false,\n      toneMapped: false,\n      transparent: true\n    }); // Make unique material for each axis/color\n\n    const matInvisible = gizmoMaterial.clone();\n    matInvisible.opacity = 0.15;\n    const matHelper = gizmoLineMaterial.clone();\n    matHelper.opacity = 0.5;\n    const matRed = gizmoMaterial.clone();\n    matRed.color.setHex(0xff0000);\n    const matGreen = gizmoMaterial.clone();\n    matGreen.color.setHex(0x00ff00);\n    const matBlue = gizmoMaterial.clone();\n    matBlue.color.setHex(0x0000ff);\n    const matRedTransparent = gizmoMaterial.clone();\n    matRedTransparent.color.setHex(0xff0000);\n    matRedTransparent.opacity = 0.5;\n    const matGreenTransparent = gizmoMaterial.clone();\n    matGreenTransparent.color.setHex(0x00ff00);\n    matGreenTransparent.opacity = 0.5;\n    const matBlueTransparent = gizmoMaterial.clone();\n    matBlueTransparent.color.setHex(0x0000ff);\n    matBlueTransparent.opacity = 0.5;\n    const matWhiteTransparent = gizmoMaterial.clone();\n    matWhiteTransparent.opacity = 0.25;\n    const matYellowTransparent = gizmoMaterial.clone();\n    matYellowTransparent.color.setHex(0xffff00);\n    matYellowTransparent.opacity = 0.25;\n    const matYellow = gizmoMaterial.clone();\n    matYellow.color.setHex(0xffff00);\n    const matGray = gizmoMaterial.clone();\n    matGray.color.setHex(0x787878); // reusable geometry\n\n    const arrowGeometry = new CylinderGeometry(0, 0.04, 0.1, 12);\n    arrowGeometry.translate(0, 0.05, 0);\n    const scaleHandleGeometry = new BoxGeometry(0.08, 0.08, 0.08);\n    scaleHandleGeometry.translate(0, 0.04, 0);\n    const lineGeometry = new BufferGeometry();\n    lineGeometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 1, 0, 0], 3));\n    const lineGeometry2 = new CylinderGeometry(0.0075, 0.0075, 0.5, 3);\n    lineGeometry2.translate(0, 0.25, 0);\n\n    function CircleGeometry(radius, arc) {\n      const geometry = new TorusGeometry(radius, 0.0075, 3, 64, arc * Math.PI * 2);\n      geometry.rotateY(Math.PI / 2);\n      geometry.rotateX(Math.PI / 2);\n      return geometry;\n    } // Special geometry for transform helper. If scaled with position vector it spans from [0,0,0] to position\n\n\n    function TranslateHelperGeometry() {\n      const geometry = new BufferGeometry();\n      geometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 1, 1, 1], 3));\n      return geometry;\n    } // Gizmo definitions - custom hierarchy definitions for setupGizmo() function\n\n\n    const gizmoTranslate = {\n      X: [[new Mesh(arrowGeometry, matRed), [0.5, 0, 0], [0, 0, -Math.PI / 2]], [new Mesh(arrowGeometry, matRed), [-0.5, 0, 0], [0, 0, Math.PI / 2]], [new Mesh(lineGeometry2, matRed), [0, 0, 0], [0, 0, -Math.PI / 2]]],\n      Y: [[new Mesh(arrowGeometry, matGreen), [0, 0.5, 0]], [new Mesh(arrowGeometry, matGreen), [0, -0.5, 0], [Math.PI, 0, 0]], [new Mesh(lineGeometry2, matGreen)]],\n      Z: [[new Mesh(arrowGeometry, matBlue), [0, 0, 0.5], [Math.PI / 2, 0, 0]], [new Mesh(arrowGeometry, matBlue), [0, 0, -0.5], [-Math.PI / 2, 0, 0]], [new Mesh(lineGeometry2, matBlue), null, [Math.PI / 2, 0, 0]]],\n      XYZ: [[new Mesh(new OctahedronGeometry(0.1, 0), matWhiteTransparent.clone()), [0, 0, 0]]],\n      XY: [[new Mesh(new BoxGeometry(0.15, 0.15, 0.01), matBlueTransparent.clone()), [0.15, 0.15, 0]]],\n      YZ: [[new Mesh(new BoxGeometry(0.15, 0.15, 0.01), matRedTransparent.clone()), [0, 0.15, 0.15], [0, Math.PI / 2, 0]]],\n      XZ: [[new Mesh(new BoxGeometry(0.15, 0.15, 0.01), matGreenTransparent.clone()), [0.15, 0, 0.15], [-Math.PI / 2, 0, 0]]]\n    };\n    const pickerTranslate = {\n      X: [[new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0.3, 0, 0], [0, 0, -Math.PI / 2]], [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [-0.3, 0, 0], [0, 0, Math.PI / 2]]],\n      Y: [[new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, 0.3, 0]], [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, -0.3, 0], [0, 0, Math.PI]]],\n      Z: [[new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, 0, 0.3], [Math.PI / 2, 0, 0]], [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, 0, -0.3], [-Math.PI / 2, 0, 0]]],\n      XYZ: [[new Mesh(new OctahedronGeometry(0.2, 0), matInvisible)]],\n      XY: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.01), matInvisible), [0.15, 0.15, 0]]],\n      YZ: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.01), matInvisible), [0, 0.15, 0.15], [0, Math.PI / 2, 0]]],\n      XZ: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.01), matInvisible), [0.15, 0, 0.15], [-Math.PI / 2, 0, 0]]]\n    };\n    const helperTranslate = {\n      START: [[new Mesh(new OctahedronGeometry(0.01, 2), matHelper), null, null, null, 'helper']],\n      END: [[new Mesh(new OctahedronGeometry(0.01, 2), matHelper), null, null, null, 'helper']],\n      DELTA: [[new Line(TranslateHelperGeometry(), matHelper), null, null, null, 'helper']],\n      X: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], 'helper']],\n      Y: [[new Line(lineGeometry, matHelper.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], 'helper']],\n      Z: [[new Line(lineGeometry, matHelper.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], 'helper']]\n    };\n    const gizmoRotate = {\n      XYZE: [[new Mesh(CircleGeometry(0.5, 1), matGray), null, [0, Math.PI / 2, 0]]],\n      X: [[new Mesh(CircleGeometry(0.5, 0.5), matRed)]],\n      Y: [[new Mesh(CircleGeometry(0.5, 0.5), matGreen), null, [0, 0, -Math.PI / 2]]],\n      Z: [[new Mesh(CircleGeometry(0.5, 0.5), matBlue), null, [0, Math.PI / 2, 0]]],\n      E: [[new Mesh(CircleGeometry(0.75, 1), matYellowTransparent), null, [0, Math.PI / 2, 0]]]\n    };\n    const helperRotate = {\n      AXIS: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], 'helper']]\n    };\n    const pickerRotate = {\n      XYZE: [[new Mesh(new SphereGeometry(0.25, 10, 8), matInvisible)]],\n      X: [[new Mesh(new TorusGeometry(0.5, 0.1, 4, 24), matInvisible), [0, 0, 0], [0, -Math.PI / 2, -Math.PI / 2]]],\n      Y: [[new Mesh(new TorusGeometry(0.5, 0.1, 4, 24), matInvisible), [0, 0, 0], [Math.PI / 2, 0, 0]]],\n      Z: [[new Mesh(new TorusGeometry(0.5, 0.1, 4, 24), matInvisible), [0, 0, 0], [0, 0, -Math.PI / 2]]],\n      E: [[new Mesh(new TorusGeometry(0.75, 0.1, 2, 24), matInvisible)]]\n    };\n    const gizmoScale = {\n      X: [[new Mesh(scaleHandleGeometry, matRed), [0.5, 0, 0], [0, 0, -Math.PI / 2]], [new Mesh(lineGeometry2, matRed), [0, 0, 0], [0, 0, -Math.PI / 2]], [new Mesh(scaleHandleGeometry, matRed), [-0.5, 0, 0], [0, 0, Math.PI / 2]]],\n      Y: [[new Mesh(scaleHandleGeometry, matGreen), [0, 0.5, 0]], [new Mesh(lineGeometry2, matGreen)], [new Mesh(scaleHandleGeometry, matGreen), [0, -0.5, 0], [0, 0, Math.PI]]],\n      Z: [[new Mesh(scaleHandleGeometry, matBlue), [0, 0, 0.5], [Math.PI / 2, 0, 0]], [new Mesh(lineGeometry2, matBlue), [0, 0, 0], [Math.PI / 2, 0, 0]], [new Mesh(scaleHandleGeometry, matBlue), [0, 0, -0.5], [-Math.PI / 2, 0, 0]]],\n      XY: [[new Mesh(new BoxGeometry(0.15, 0.15, 0.01), matBlueTransparent), [0.15, 0.15, 0]]],\n      YZ: [[new Mesh(new BoxGeometry(0.15, 0.15, 0.01), matRedTransparent), [0, 0.15, 0.15], [0, Math.PI / 2, 0]]],\n      XZ: [[new Mesh(new BoxGeometry(0.15, 0.15, 0.01), matGreenTransparent), [0.15, 0, 0.15], [-Math.PI / 2, 0, 0]]],\n      XYZ: [[new Mesh(new BoxGeometry(0.1, 0.1, 0.1), matWhiteTransparent.clone())]]\n    };\n    const pickerScale = {\n      X: [[new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0.3, 0, 0], [0, 0, -Math.PI / 2]], [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [-0.3, 0, 0], [0, 0, Math.PI / 2]]],\n      Y: [[new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, 0.3, 0]], [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, -0.3, 0], [0, 0, Math.PI]]],\n      Z: [[new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, 0, 0.3], [Math.PI / 2, 0, 0]], [new Mesh(new CylinderGeometry(0.2, 0, 0.6, 4), matInvisible), [0, 0, -0.3], [-Math.PI / 2, 0, 0]]],\n      XY: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.01), matInvisible), [0.15, 0.15, 0]]],\n      YZ: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.01), matInvisible), [0, 0.15, 0.15], [0, Math.PI / 2, 0]]],\n      XZ: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.01), matInvisible), [0.15, 0, 0.15], [-Math.PI / 2, 0, 0]]],\n      XYZ: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.2), matInvisible), [0, 0, 0]]]\n    };\n    const helperScale = {\n      X: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], 'helper']],\n      Y: [[new Line(lineGeometry, matHelper.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], 'helper']],\n      Z: [[new Line(lineGeometry, matHelper.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], 'helper']]\n    }; // Creates an Object3D with gizmos described in custom hierarchy definition.\n\n    function setupGizmo(gizmoMap) {\n      const gizmo = new Object3D();\n\n      for (const name in gizmoMap) {\n        for (let i = gizmoMap[name].length; i--;) {\n          const object = gizmoMap[name][i][0].clone();\n          const position = gizmoMap[name][i][1];\n          const rotation = gizmoMap[name][i][2];\n          const scale = gizmoMap[name][i][3];\n          const tag = gizmoMap[name][i][4]; // name and tag properties are essential for picking and updating logic.\n\n          object.name = name;\n          object.tag = tag;\n\n          if (position) {\n            object.position.set(position[0], position[1], position[2]);\n          }\n\n          if (rotation) {\n            object.rotation.set(rotation[0], rotation[1], rotation[2]);\n          }\n\n          if (scale) {\n            object.scale.set(scale[0], scale[1], scale[2]);\n          }\n\n          object.updateMatrix();\n          const tempGeometry = object.geometry.clone();\n          tempGeometry.applyMatrix4(object.matrix);\n          object.geometry = tempGeometry;\n          object.renderOrder = Infinity;\n          object.position.set(0, 0, 0);\n          object.rotation.set(0, 0, 0);\n          object.scale.set(1, 1, 1);\n          gizmo.add(object);\n        }\n      }\n\n      return gizmo;\n    } // Gizmo creation\n\n\n    this.gizmo = {};\n    this.picker = {};\n    this.helper = {};\n    this.add(this.gizmo['translate'] = setupGizmo(gizmoTranslate));\n    this.add(this.gizmo['rotate'] = setupGizmo(gizmoRotate));\n    this.add(this.gizmo['scale'] = setupGizmo(gizmoScale));\n    this.add(this.picker['translate'] = setupGizmo(pickerTranslate));\n    this.add(this.picker['rotate'] = setupGizmo(pickerRotate));\n    this.add(this.picker['scale'] = setupGizmo(pickerScale));\n    this.add(this.helper['translate'] = setupGizmo(helperTranslate));\n    this.add(this.helper['rotate'] = setupGizmo(helperRotate));\n    this.add(this.helper['scale'] = setupGizmo(helperScale)); // Pickers should be hidden always\n\n    this.picker['translate'].visible = false;\n    this.picker['rotate'].visible = false;\n    this.picker['scale'].visible = false;\n  } // updateMatrixWorld will update transformations and appearance of individual handles\n\n\n  updateMatrixWorld(force) {\n    const space = this.mode === 'scale' ? 'local' : this.space; // scale always oriented to local rotation\n\n    const quaternion = space === 'local' ? this.worldQuaternion : _identityQuaternion; // Show only gizmos for current transform mode\n\n    this.gizmo['translate'].visible = this.mode === 'translate';\n    this.gizmo['rotate'].visible = this.mode === 'rotate';\n    this.gizmo['scale'].visible = this.mode === 'scale';\n    this.helper['translate'].visible = this.mode === 'translate';\n    this.helper['rotate'].visible = this.mode === 'rotate';\n    this.helper['scale'].visible = this.mode === 'scale';\n    let handles = [];\n    handles = handles.concat(this.picker[this.mode].children);\n    handles = handles.concat(this.gizmo[this.mode].children);\n    handles = handles.concat(this.helper[this.mode].children);\n\n    for (let i = 0; i < handles.length; i++) {\n      const handle = handles[i]; // hide aligned to camera\n\n      handle.visible = true;\n      handle.rotation.set(0, 0, 0);\n      handle.position.copy(this.worldPosition);\n      let factor;\n\n      if (this.camera.isOrthographicCamera) {\n        factor = (this.camera.top - this.camera.bottom) / this.camera.zoom;\n      } else {\n        factor = this.worldPosition.distanceTo(this.cameraPosition) * Math.min(1.9 * Math.tan(Math.PI * this.camera.fov / 360) / this.camera.zoom, 7);\n      }\n\n      handle.scale.set(1, 1, 1).multiplyScalar(factor * this.size / 4); // TODO: simplify helpers and consider decoupling from gizmo\n\n      if (handle.tag === 'helper') {\n        handle.visible = false;\n\n        if (handle.name === 'AXIS') {\n          handle.position.copy(this.worldPositionStart);\n          handle.visible = !!this.axis;\n\n          if (this.axis === 'X') {\n            _tempQuaternion.setFromEuler(_tempEuler.set(0, 0, 0));\n\n            handle.quaternion.copy(quaternion).multiply(_tempQuaternion);\n\n            if (Math.abs(_alignVector.copy(_unitX).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n              handle.visible = false;\n            }\n          }\n\n          if (this.axis === 'Y') {\n            _tempQuaternion.setFromEuler(_tempEuler.set(0, 0, Math.PI / 2));\n\n            handle.quaternion.copy(quaternion).multiply(_tempQuaternion);\n\n            if (Math.abs(_alignVector.copy(_unitY).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n              handle.visible = false;\n            }\n          }\n\n          if (this.axis === 'Z') {\n            _tempQuaternion.setFromEuler(_tempEuler.set(0, Math.PI / 2, 0));\n\n            handle.quaternion.copy(quaternion).multiply(_tempQuaternion);\n\n            if (Math.abs(_alignVector.copy(_unitZ).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n              handle.visible = false;\n            }\n          }\n\n          if (this.axis === 'XYZE') {\n            _tempQuaternion.setFromEuler(_tempEuler.set(0, Math.PI / 2, 0));\n\n            _alignVector.copy(this.rotationAxis);\n\n            handle.quaternion.setFromRotationMatrix(_lookAtMatrix.lookAt(_zeroVector, _alignVector, _unitY));\n            handle.quaternion.multiply(_tempQuaternion);\n            handle.visible = this.dragging;\n          }\n\n          if (this.axis === 'E') {\n            handle.visible = false;\n          }\n        } else if (handle.name === 'START') {\n          handle.position.copy(this.worldPositionStart);\n          handle.visible = this.dragging;\n        } else if (handle.name === 'END') {\n          handle.position.copy(this.worldPosition);\n          handle.visible = this.dragging;\n        } else if (handle.name === 'DELTA') {\n          handle.position.copy(this.worldPositionStart);\n          handle.quaternion.copy(this.worldQuaternionStart);\n\n          _tempVector.set(1e-10, 1e-10, 1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1);\n\n          _tempVector.applyQuaternion(this.worldQuaternionStart.clone().invert());\n\n          handle.scale.copy(_tempVector);\n          handle.visible = this.dragging;\n        } else {\n          handle.quaternion.copy(quaternion);\n\n          if (this.dragging) {\n            handle.position.copy(this.worldPositionStart);\n          } else {\n            handle.position.copy(this.worldPosition);\n          }\n\n          if (this.axis) {\n            handle.visible = this.axis.search(handle.name) !== -1;\n          }\n        } // If updating helper, skip rest of the loop\n\n\n        continue;\n      } // Align handles to current local or world rotation\n\n\n      handle.quaternion.copy(quaternion);\n\n      if (this.mode === 'translate' || this.mode === 'scale') {\n        // Hide translate and scale axis facing the camera\n        const AXIS_HIDE_TRESHOLD = 0.99;\n        const PLANE_HIDE_TRESHOLD = 0.2;\n\n        if (handle.name === 'X') {\n          if (Math.abs(_alignVector.copy(_unitX).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_TRESHOLD) {\n            handle.scale.set(1e-10, 1e-10, 1e-10);\n            handle.visible = false;\n          }\n        }\n\n        if (handle.name === 'Y') {\n          if (Math.abs(_alignVector.copy(_unitY).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_TRESHOLD) {\n            handle.scale.set(1e-10, 1e-10, 1e-10);\n            handle.visible = false;\n          }\n        }\n\n        if (handle.name === 'Z') {\n          if (Math.abs(_alignVector.copy(_unitZ).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_TRESHOLD) {\n            handle.scale.set(1e-10, 1e-10, 1e-10);\n            handle.visible = false;\n          }\n        }\n\n        if (handle.name === 'XY') {\n          if (Math.abs(_alignVector.copy(_unitZ).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_TRESHOLD) {\n            handle.scale.set(1e-10, 1e-10, 1e-10);\n            handle.visible = false;\n          }\n        }\n\n        if (handle.name === 'YZ') {\n          if (Math.abs(_alignVector.copy(_unitX).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_TRESHOLD) {\n            handle.scale.set(1e-10, 1e-10, 1e-10);\n            handle.visible = false;\n          }\n        }\n\n        if (handle.name === 'XZ') {\n          if (Math.abs(_alignVector.copy(_unitY).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_TRESHOLD) {\n            handle.scale.set(1e-10, 1e-10, 1e-10);\n            handle.visible = false;\n          }\n        }\n      } else if (this.mode === 'rotate') {\n        // Align handles to current local or world rotation\n        _tempQuaternion2.copy(quaternion);\n\n        _alignVector.copy(this.eye).applyQuaternion(_tempQuaternion.copy(quaternion).invert());\n\n        if (handle.name.search('E') !== -1) {\n          handle.quaternion.setFromRotationMatrix(_lookAtMatrix.lookAt(this.eye, _zeroVector, _unitY));\n        }\n\n        if (handle.name === 'X') {\n          _tempQuaternion.setFromAxisAngle(_unitX, Math.atan2(-_alignVector.y, _alignVector.z));\n\n          _tempQuaternion.multiplyQuaternions(_tempQuaternion2, _tempQuaternion);\n\n          handle.quaternion.copy(_tempQuaternion);\n        }\n\n        if (handle.name === 'Y') {\n          _tempQuaternion.setFromAxisAngle(_unitY, Math.atan2(_alignVector.x, _alignVector.z));\n\n          _tempQuaternion.multiplyQuaternions(_tempQuaternion2, _tempQuaternion);\n\n          handle.quaternion.copy(_tempQuaternion);\n        }\n\n        if (handle.name === 'Z') {\n          _tempQuaternion.setFromAxisAngle(_unitZ, Math.atan2(_alignVector.y, _alignVector.x));\n\n          _tempQuaternion.multiplyQuaternions(_tempQuaternion2, _tempQuaternion);\n\n          handle.quaternion.copy(_tempQuaternion);\n        }\n      } // Hide disabled axes\n\n\n      handle.visible = handle.visible && (handle.name.indexOf('X') === -1 || this.showX);\n      handle.visible = handle.visible && (handle.name.indexOf('Y') === -1 || this.showY);\n      handle.visible = handle.visible && (handle.name.indexOf('Z') === -1 || this.showZ);\n      handle.visible = handle.visible && (handle.name.indexOf('E') === -1 || this.showX && this.showY && this.showZ); // highlight selected axis\n\n      handle.material._color = handle.material._color || handle.material.color.clone();\n      handle.material._opacity = handle.material._opacity || handle.material.opacity;\n      handle.material.color.copy(handle.material._color);\n      handle.material.opacity = handle.material._opacity;\n\n      if (this.enabled && this.axis) {\n        if (handle.name === this.axis) {\n          handle.material.color.setHex(0xffff00);\n          handle.material.opacity = 1.0;\n        } else if (this.axis.split('').some(function (a) {\n          return handle.name === a;\n        })) {\n          handle.material.color.setHex(0xffff00);\n          handle.material.opacity = 1.0;\n        }\n      }\n    }\n\n    super.updateMatrixWorld(force);\n  }\n\n}\n\nTransformControlsGizmo.prototype.isTransformControlsGizmo = true; //\n\nclass TransformControlsPlane extends Mesh {\n  constructor() {\n    super(new PlaneGeometry(100000, 100000, 2, 2), new MeshBasicMaterial({\n      visible: false,\n      wireframe: true,\n      side: DoubleSide,\n      transparent: true,\n      opacity: 0.1,\n      toneMapped: false\n    }));\n    this.type = 'TransformControlsPlane';\n  }\n\n  updateMatrixWorld(force) {\n    let space = this.space;\n    this.position.copy(this.worldPosition);\n    if (this.mode === 'scale') space = 'local'; // scale always oriented to local rotation\n\n    _v1.copy(_unitX).applyQuaternion(space === 'local' ? this.worldQuaternion : _identityQuaternion);\n\n    _v2.copy(_unitY).applyQuaternion(space === 'local' ? this.worldQuaternion : _identityQuaternion);\n\n    _v3.copy(_unitZ).applyQuaternion(space === 'local' ? this.worldQuaternion : _identityQuaternion); // Align the plane for current transform mode, axis and space.\n\n\n    _alignVector.copy(_v2);\n\n    switch (this.mode) {\n      case 'translate':\n      case 'scale':\n        switch (this.axis) {\n          case 'X':\n            _alignVector.copy(this.eye).cross(_v1);\n\n            _dirVector.copy(_v1).cross(_alignVector);\n\n            break;\n\n          case 'Y':\n            _alignVector.copy(this.eye).cross(_v2);\n\n            _dirVector.copy(_v2).cross(_alignVector);\n\n            break;\n\n          case 'Z':\n            _alignVector.copy(this.eye).cross(_v3);\n\n            _dirVector.copy(_v3).cross(_alignVector);\n\n            break;\n\n          case 'XY':\n            _dirVector.copy(_v3);\n\n            break;\n\n          case 'YZ':\n            _dirVector.copy(_v1);\n\n            break;\n\n          case 'XZ':\n            _alignVector.copy(_v3);\n\n            _dirVector.copy(_v2);\n\n            break;\n\n          case 'XYZ':\n          case 'E':\n            _dirVector.set(0, 0, 0);\n\n            break;\n        }\n\n        break;\n\n      case 'rotate':\n      default:\n        // special case for rotate\n        _dirVector.set(0, 0, 0);\n\n    }\n\n    if (_dirVector.length() === 0) {\n      // If in rotate mode, make the plane parallel to camera\n      this.quaternion.copy(this.cameraQuaternion);\n    } else {\n      _tempMatrix.lookAt(_tempVector.set(0, 0, 0), _dirVector, _alignVector);\n\n      this.quaternion.setFromRotationMatrix(_tempMatrix);\n    }\n\n    super.updateMatrixWorld(force);\n  }\n\n}\n\nTransformControlsPlane.prototype.isTransformControlsPlane = true;\nexport { TransformControls, TransformControlsGizmo, TransformControlsPlane };","map":{"version":3,"names":["BoxGeometry","BufferGeometry","CylinderGeometry","DoubleSide","Euler","Float32BufferAttribute","Line","LineBasicMaterial","Matrix4","Mesh","MeshBasicMaterial","Object3D","OctahedronGeometry","PlaneGeometry","Quaternion","Raycaster","SphereGeometry","TorusGeometry","Vector3","_raycaster","_tempVector","_tempVector2","_tempQuaternion","_unit","X","Y","Z","_changeEvent","type","_mouseDownEvent","_mouseUpEvent","mode","_objectChangeEvent","TransformControls","constructor","camera","domElement","undefined","console","warn","document","visible","style","touchAction","_gizmo","TransformControlsGizmo","add","_plane","TransformControlsPlane","scope","defineProperty","propName","defaultValue","propValue","Object","get","set","value","dispatchEvent","worldPosition","worldPositionStart","worldQuaternion","worldQuaternionStart","cameraPosition","cameraQuaternion","pointStart","pointEnd","rotationAxis","rotationAngle","eye","_offset","_startNorm","_endNorm","_cameraScale","_parentPosition","_parentQuaternion","_parentQuaternionInv","_parentScale","_worldScaleStart","_worldQuaternionInv","_worldScale","_positionStart","_quaternionStart","_scaleStart","_getPointer","getPointer","bind","_onPointerDown","onPointerDown","_onPointerHover","onPointerHover","_onPointerMove","onPointerMove","_onPointerUp","onPointerUp","addEventListener","updateMatrixWorld","object","parent","error","matrixWorld","decompose","copy","invert","sub","normalize","pointerHover","pointer","dragging","setFromCamera","intersect","intersectObjectWithRay","picker","axis","name","pointerDown","button","planeIntersect","position","quaternion","scale","point","pointerMove","space","applyQuaternion","indexOf","x","y","z","divide","translationSnap","search","Math","round","setFromMatrixPosition","d","length","dot","multiply","scaleSnap","ROTATION_SPEED","distanceTo","angleTo","cross","rotationSnap","setFromAxisAngle","pointerUp","dispose","removeEventListener","traverse","child","geometry","material","attach","detach","reset","enabled","getRaycaster","getMode","setMode","setTranslationSnap","setRotationSnap","setScaleSnap","setSize","size","setSpace","update","prototype","isTransformControls","event","ownerDocument","pointerLockElement","rect","getBoundingClientRect","clientX","left","width","clientY","top","height","pointerType","setPointerCapture","pointerId","releasePointerCapture","raycaster","includeInvisible","allIntersections","intersectObject","i","_tempEuler","_alignVector","_zeroVector","_lookAtMatrix","_tempQuaternion2","_identityQuaternion","_dirVector","_tempMatrix","_unitX","_unitY","_unitZ","_v1","_v2","_v3","gizmoMaterial","depthTest","depthWrite","fog","toneMapped","transparent","gizmoLineMaterial","matInvisible","clone","opacity","matHelper","matRed","color","setHex","matGreen","matBlue","matRedTransparent","matGreenTransparent","matBlueTransparent","matWhiteTransparent","matYellowTransparent","matYellow","matGray","arrowGeometry","translate","scaleHandleGeometry","lineGeometry","setAttribute","lineGeometry2","CircleGeometry","radius","arc","PI","rotateY","rotateX","TranslateHelperGeometry","gizmoTranslate","XYZ","XY","YZ","XZ","pickerTranslate","helperTranslate","START","END","DELTA","gizmoRotate","XYZE","E","helperRotate","AXIS","pickerRotate","gizmoScale","pickerScale","helperScale","setupGizmo","gizmoMap","gizmo","rotation","tag","updateMatrix","tempGeometry","applyMatrix4","matrix","renderOrder","Infinity","helper","force","handles","concat","children","handle","factor","isOrthographicCamera","bottom","zoom","min","tan","fov","multiplyScalar","setFromEuler","abs","setFromRotationMatrix","lookAt","AXIS_HIDE_TRESHOLD","PLANE_HIDE_TRESHOLD","atan2","multiplyQuaternions","showX","showY","showZ","_color","_opacity","split","some","a","isTransformControlsGizmo","wireframe","side","isTransformControlsPlane"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/three/examples/jsm/controls/TransformControls.js"],"sourcesContent":["import {\n\tBoxGeometry,\n\tBufferGeometry,\n\tCylinderGeometry,\n\tDoubleSide,\n\tEuler,\n\tFloat32BufferAttribute,\n\tLine,\n\tLineBasicMaterial,\n\tMatrix4,\n\tMesh,\n\tMeshBasicMaterial,\n\tObject3D,\n\tOctahedronGeometry,\n\tPlaneGeometry,\n\tQuaternion,\n\tRaycaster,\n\tSphereGeometry,\n\tTorusGeometry,\n\tVector3\n} from 'three';\n\nconst _raycaster = new Raycaster();\n\nconst _tempVector = new Vector3();\nconst _tempVector2 = new Vector3();\nconst _tempQuaternion = new Quaternion();\nconst _unit = {\n\tX: new Vector3( 1, 0, 0 ),\n\tY: new Vector3( 0, 1, 0 ),\n\tZ: new Vector3( 0, 0, 1 )\n};\n\nconst _changeEvent = { type: 'change' };\nconst _mouseDownEvent = { type: 'mouseDown' };\nconst _mouseUpEvent = { type: 'mouseUp', mode: null };\nconst _objectChangeEvent = { type: 'objectChange' };\n\nclass TransformControls extends Object3D {\n\n\tconstructor( camera, domElement ) {\n\n\t\tsuper();\n\n\t\tif ( domElement === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.TransformControls: The second parameter \"domElement\" is now mandatory.' );\n\t\t\tdomElement = document;\n\n\t\t}\n\n\t\tthis.visible = false;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\tconst _gizmo = new TransformControlsGizmo();\n\t\tthis._gizmo = _gizmo;\n\t\tthis.add( _gizmo );\n\n\t\tconst _plane = new TransformControlsPlane();\n\t\tthis._plane = _plane;\n\t\tthis.add( _plane );\n\n\t\tconst scope = this;\n\n\t\t// Defined getter, setter and store for a property\n\t\tfunction defineProperty( propName, defaultValue ) {\n\n\t\t\tlet propValue = defaultValue;\n\n\t\t\tObject.defineProperty( scope, propName, {\n\n\t\t\t\tget: function () {\n\n\t\t\t\t\treturn propValue !== undefined ? propValue : defaultValue;\n\n\t\t\t\t},\n\n\t\t\t\tset: function ( value ) {\n\n\t\t\t\t\tif ( propValue !== value ) {\n\n\t\t\t\t\t\tpropValue = value;\n\t\t\t\t\t\t_plane[ propName ] = value;\n\t\t\t\t\t\t_gizmo[ propName ] = value;\n\n\t\t\t\t\t\tscope.dispatchEvent( { type: propName + '-changed', value: value } );\n\t\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tscope[ propName ] = defaultValue;\n\t\t\t_plane[ propName ] = defaultValue;\n\t\t\t_gizmo[ propName ] = defaultValue;\n\n\t\t}\n\n\t\t// Define properties with getters/setter\n\t\t// Setting the defined property will automatically trigger change event\n\t\t// Defined properties are passed down to gizmo and plane\n\n\t\tdefineProperty( 'camera', camera );\n\t\tdefineProperty( 'object', undefined );\n\t\tdefineProperty( 'enabled', true );\n\t\tdefineProperty( 'axis', null );\n\t\tdefineProperty( 'mode', 'translate' );\n\t\tdefineProperty( 'translationSnap', null );\n\t\tdefineProperty( 'rotationSnap', null );\n\t\tdefineProperty( 'scaleSnap', null );\n\t\tdefineProperty( 'space', 'world' );\n\t\tdefineProperty( 'size', 1 );\n\t\tdefineProperty( 'dragging', false );\n\t\tdefineProperty( 'showX', true );\n\t\tdefineProperty( 'showY', true );\n\t\tdefineProperty( 'showZ', true );\n\n\t\t// Reusable utility variables\n\n\t\tconst worldPosition = new Vector3();\n\t\tconst worldPositionStart = new Vector3();\n\t\tconst worldQuaternion = new Quaternion();\n\t\tconst worldQuaternionStart = new Quaternion();\n\t\tconst cameraPosition = new Vector3();\n\t\tconst cameraQuaternion = new Quaternion();\n\t\tconst pointStart = new Vector3();\n\t\tconst pointEnd = new Vector3();\n\t\tconst rotationAxis = new Vector3();\n\t\tconst rotationAngle = 0;\n\t\tconst eye = new Vector3();\n\n\t\t// TODO: remove properties unused in plane and gizmo\n\n\t\tdefineProperty( 'worldPosition', worldPosition );\n\t\tdefineProperty( 'worldPositionStart', worldPositionStart );\n\t\tdefineProperty( 'worldQuaternion', worldQuaternion );\n\t\tdefineProperty( 'worldQuaternionStart', worldQuaternionStart );\n\t\tdefineProperty( 'cameraPosition', cameraPosition );\n\t\tdefineProperty( 'cameraQuaternion', cameraQuaternion );\n\t\tdefineProperty( 'pointStart', pointStart );\n\t\tdefineProperty( 'pointEnd', pointEnd );\n\t\tdefineProperty( 'rotationAxis', rotationAxis );\n\t\tdefineProperty( 'rotationAngle', rotationAngle );\n\t\tdefineProperty( 'eye', eye );\n\n\t\tthis._offset = new Vector3();\n\t\tthis._startNorm = new Vector3();\n\t\tthis._endNorm = new Vector3();\n\t\tthis._cameraScale = new Vector3();\n\n\t\tthis._parentPosition = new Vector3();\n\t\tthis._parentQuaternion = new Quaternion();\n\t\tthis._parentQuaternionInv = new Quaternion();\n\t\tthis._parentScale = new Vector3();\n\n\t\tthis._worldScaleStart = new Vector3();\n\t\tthis._worldQuaternionInv = new Quaternion();\n\t\tthis._worldScale = new Vector3();\n\n\t\tthis._positionStart = new Vector3();\n\t\tthis._quaternionStart = new Quaternion();\n\t\tthis._scaleStart = new Vector3();\n\n\t\tthis._getPointer = getPointer.bind( this );\n\t\tthis._onPointerDown = onPointerDown.bind( this );\n\t\tthis._onPointerHover = onPointerHover.bind( this );\n\t\tthis._onPointerMove = onPointerMove.bind( this );\n\t\tthis._onPointerUp = onPointerUp.bind( this );\n\n\t\tthis.domElement.addEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.addEventListener( 'pointermove', this._onPointerHover );\n\t\tthis.domElement.addEventListener( 'pointerup', this._onPointerUp );\n\n\t}\n\n\t// updateMatrixWorld  updates key transformation variables\n\tupdateMatrixWorld() {\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\tif ( this.object.parent === null ) {\n\n\t\t\t\tconsole.error( 'TransformControls: The attached 3D object must be a part of the scene graph.' );\n\n\t\t\t} else {\n\n\t\t\t\tthis.object.parent.matrixWorld.decompose( this._parentPosition, this._parentQuaternion, this._parentScale );\n\n\t\t\t}\n\n\t\t\tthis.object.matrixWorld.decompose( this.worldPosition, this.worldQuaternion, this._worldScale );\n\n\t\t\tthis._parentQuaternionInv.copy( this._parentQuaternion ).invert();\n\t\t\tthis._worldQuaternionInv.copy( this.worldQuaternion ).invert();\n\n\t\t}\n\n\t\tthis.camera.updateMatrixWorld();\n\t\tthis.camera.matrixWorld.decompose( this.cameraPosition, this.cameraQuaternion, this._cameraScale );\n\n\t\tthis.eye.copy( this.cameraPosition ).sub( this.worldPosition ).normalize();\n\n\t\tsuper.updateMatrixWorld( this );\n\n\t}\n\n\tpointerHover( pointer ) {\n\n\t\tif ( this.object === undefined || this.dragging === true ) return;\n\n\t\t_raycaster.setFromCamera( pointer, this.camera );\n\n\t\tconst intersect = intersectObjectWithRay( this._gizmo.picker[ this.mode ], _raycaster );\n\n\t\tif ( intersect ) {\n\n\t\t\tthis.axis = intersect.object.name;\n\n\t\t} else {\n\n\t\t\tthis.axis = null;\n\n\t\t}\n\n\t}\n\n\tpointerDown( pointer ) {\n\n\t\tif ( this.object === undefined || this.dragging === true || pointer.button !== 0 ) return;\n\n\t\tif ( this.axis !== null ) {\n\n\t\t\t_raycaster.setFromCamera( pointer, this.camera );\n\n\t\t\tconst planeIntersect = intersectObjectWithRay( this._plane, _raycaster, true );\n\n\t\t\tif ( planeIntersect ) {\n\n\t\t\t\tthis.object.updateMatrixWorld();\n\t\t\t\tthis.object.parent.updateMatrixWorld();\n\n\t\t\t\tthis._positionStart.copy( this.object.position );\n\t\t\t\tthis._quaternionStart.copy( this.object.quaternion );\n\t\t\t\tthis._scaleStart.copy( this.object.scale );\n\n\t\t\t\tthis.object.matrixWorld.decompose( this.worldPositionStart, this.worldQuaternionStart, this._worldScaleStart );\n\n\t\t\t\tthis.pointStart.copy( planeIntersect.point ).sub( this.worldPositionStart );\n\n\t\t\t}\n\n\t\t\tthis.dragging = true;\n\t\t\t_mouseDownEvent.mode = this.mode;\n\t\t\tthis.dispatchEvent( _mouseDownEvent );\n\n\t\t}\n\n\t}\n\n\tpointerMove( pointer ) {\n\n\t\tconst axis = this.axis;\n\t\tconst mode = this.mode;\n\t\tconst object = this.object;\n\t\tlet space = this.space;\n\n\t\tif ( mode === 'scale' ) {\n\n\t\t\tspace = 'local';\n\n\t\t} else if ( axis === 'E' || axis === 'XYZE' || axis === 'XYZ' ) {\n\n\t\t\tspace = 'world';\n\n\t\t}\n\n\t\tif ( object === undefined || axis === null || this.dragging === false || pointer.button !== - 1 ) return;\n\n\t\t_raycaster.setFromCamera( pointer, this.camera );\n\n\t\tconst planeIntersect = intersectObjectWithRay( this._plane, _raycaster, true );\n\n\t\tif ( ! planeIntersect ) return;\n\n\t\tthis.pointEnd.copy( planeIntersect.point ).sub( this.worldPositionStart );\n\n\t\tif ( mode === 'translate' ) {\n\n\t\t\t// Apply translate\n\n\t\t\tthis._offset.copy( this.pointEnd ).sub( this.pointStart );\n\n\t\t\tif ( space === 'local' && axis !== 'XYZ' ) {\n\n\t\t\t\tthis._offset.applyQuaternion( this._worldQuaternionInv );\n\n\t\t\t}\n\n\t\t\tif ( axis.indexOf( 'X' ) === - 1 ) this._offset.x = 0;\n\t\t\tif ( axis.indexOf( 'Y' ) === - 1 ) this._offset.y = 0;\n\t\t\tif ( axis.indexOf( 'Z' ) === - 1 ) this._offset.z = 0;\n\n\t\t\tif ( space === 'local' && axis !== 'XYZ' ) {\n\n\t\t\t\tthis._offset.applyQuaternion( this._quaternionStart ).divide( this._parentScale );\n\n\t\t\t} else {\n\n\t\t\t\tthis._offset.applyQuaternion( this._parentQuaternionInv ).divide( this._parentScale );\n\n\t\t\t}\n\n\t\t\tobject.position.copy( this._offset ).add( this._positionStart );\n\n\t\t\t// Apply translation snap\n\n\t\t\tif ( this.translationSnap ) {\n\n\t\t\t\tif ( space === 'local' ) {\n\n\t\t\t\t\tobject.position.applyQuaternion( _tempQuaternion.copy( this._quaternionStart ).invert() );\n\n\t\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.x = Math.round( object.position.x / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.y = Math.round( object.position.y / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.z = Math.round( object.position.z / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.position.applyQuaternion( this._quaternionStart );\n\n\t\t\t\t}\n\n\t\t\t\tif ( space === 'world' ) {\n\n\t\t\t\t\tif ( object.parent ) {\n\n\t\t\t\t\t\tobject.position.add( _tempVector.setFromMatrixPosition( object.parent.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.x = Math.round( object.position.x / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.y = Math.round( object.position.y / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.z = Math.round( object.position.z / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( object.parent ) {\n\n\t\t\t\t\t\tobject.position.sub( _tempVector.setFromMatrixPosition( object.parent.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( mode === 'scale' ) {\n\n\t\t\tif ( axis.search( 'XYZ' ) !== - 1 ) {\n\n\t\t\t\tlet d = this.pointEnd.length() / this.pointStart.length();\n\n\t\t\t\tif ( this.pointEnd.dot( this.pointStart ) < 0 ) d *= - 1;\n\n\t\t\t\t_tempVector2.set( d, d, d );\n\n\t\t\t} else {\n\n\t\t\t\t_tempVector.copy( this.pointStart );\n\t\t\t\t_tempVector2.copy( this.pointEnd );\n\n\t\t\t\t_tempVector.applyQuaternion( this._worldQuaternionInv );\n\t\t\t\t_tempVector2.applyQuaternion( this._worldQuaternionInv );\n\n\t\t\t\t_tempVector2.divide( _tempVector );\n\n\t\t\t\tif ( axis.search( 'X' ) === - 1 ) {\n\n\t\t\t\t\t_tempVector2.x = 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Y' ) === - 1 ) {\n\n\t\t\t\t\t_tempVector2.y = 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Z' ) === - 1 ) {\n\n\t\t\t\t\t_tempVector2.z = 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Apply scale\n\n\t\t\tobject.scale.copy( this._scaleStart ).multiply( _tempVector2 );\n\n\t\t\tif ( this.scaleSnap ) {\n\n\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\n\n\t\t\t\t\tobject.scale.x = Math.round( object.scale.x / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\n\n\t\t\t\t\tobject.scale.y = Math.round( object.scale.y / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\n\n\t\t\t\t\tobject.scale.z = Math.round( object.scale.z / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( mode === 'rotate' ) {\n\n\t\t\tthis._offset.copy( this.pointEnd ).sub( this.pointStart );\n\n\t\t\tconst ROTATION_SPEED = 20 / this.worldPosition.distanceTo( _tempVector.setFromMatrixPosition( this.camera.matrixWorld ) );\n\n\t\t\tif ( axis === 'E' ) {\n\n\t\t\t\tthis.rotationAxis.copy( this.eye );\n\t\t\t\tthis.rotationAngle = this.pointEnd.angleTo( this.pointStart );\n\n\t\t\t\tthis._startNorm.copy( this.pointStart ).normalize();\n\t\t\t\tthis._endNorm.copy( this.pointEnd ).normalize();\n\n\t\t\t\tthis.rotationAngle *= ( this._endNorm.cross( this._startNorm ).dot( this.eye ) < 0 ? 1 : - 1 );\n\n\t\t\t} else if ( axis === 'XYZE' ) {\n\n\t\t\t\tthis.rotationAxis.copy( this._offset ).cross( this.eye ).normalize();\n\t\t\t\tthis.rotationAngle = this._offset.dot( _tempVector.copy( this.rotationAxis ).cross( this.eye ) ) * ROTATION_SPEED;\n\n\t\t\t} else if ( axis === 'X' || axis === 'Y' || axis === 'Z' ) {\n\n\t\t\t\tthis.rotationAxis.copy( _unit[ axis ] );\n\n\t\t\t\t_tempVector.copy( _unit[ axis ] );\n\n\t\t\t\tif ( space === 'local' ) {\n\n\t\t\t\t\t_tempVector.applyQuaternion( this.worldQuaternion );\n\n\t\t\t\t}\n\n\t\t\t\tthis.rotationAngle = this._offset.dot( _tempVector.cross( this.eye ).normalize() ) * ROTATION_SPEED;\n\n\t\t\t}\n\n\t\t\t// Apply rotation snap\n\n\t\t\tif ( this.rotationSnap ) this.rotationAngle = Math.round( this.rotationAngle / this.rotationSnap ) * this.rotationSnap;\n\n\t\t\t// Apply rotate\n\t\t\tif ( space === 'local' && axis !== 'E' && axis !== 'XYZE' ) {\n\n\t\t\t\tobject.quaternion.copy( this._quaternionStart );\n\t\t\t\tobject.quaternion.multiply( _tempQuaternion.setFromAxisAngle( this.rotationAxis, this.rotationAngle ) ).normalize();\n\n\t\t\t} else {\n\n\t\t\t\tthis.rotationAxis.applyQuaternion( this._parentQuaternionInv );\n\t\t\t\tobject.quaternion.copy( _tempQuaternion.setFromAxisAngle( this.rotationAxis, this.rotationAngle ) );\n\t\t\t\tobject.quaternion.multiply( this._quaternionStart ).normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( _changeEvent );\n\t\tthis.dispatchEvent( _objectChangeEvent );\n\n\t}\n\n\tpointerUp( pointer ) {\n\n\t\tif ( pointer.button !== 0 ) return;\n\n\t\tif ( this.dragging && ( this.axis !== null ) ) {\n\n\t\t\t_mouseUpEvent.mode = this.mode;\n\t\t\tthis.dispatchEvent( _mouseUpEvent );\n\n\t\t}\n\n\t\tthis.dragging = false;\n\t\tthis.axis = null;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.domElement.removeEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerHover );\n\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\t\tthis.domElement.removeEventListener( 'pointerup', this._onPointerUp );\n\n\t\tthis.traverse( function ( child ) {\n\n\t\t\tif ( child.geometry ) child.geometry.dispose();\n\t\t\tif ( child.material ) child.material.dispose();\n\n\t\t} );\n\n\t}\n\n\t// Set current object\n\tattach( object ) {\n\n\t\tthis.object = object;\n\t\tthis.visible = true;\n\n\t\treturn this;\n\n\t}\n\n\t// Detatch from object\n\tdetach() {\n\n\t\tthis.object = undefined;\n\t\tthis.visible = false;\n\t\tthis.axis = null;\n\n\t\treturn this;\n\n\t}\n\n\treset() {\n\n\t\tif ( ! this.enabled ) return;\n\n\t\tif ( this.dragging ) {\n\n\t\t\tthis.object.position.copy( this._positionStart );\n\t\t\tthis.object.quaternion.copy( this._quaternionStart );\n\t\t\tthis.object.scale.copy( this._scaleStart );\n\n\t\t\tthis.dispatchEvent( _changeEvent );\n\t\t\tthis.dispatchEvent( _objectChangeEvent );\n\n\t\t\tthis.pointStart.copy( this.pointEnd );\n\n\t\t}\n\n\t}\n\n\tgetRaycaster() {\n\n\t\treturn _raycaster;\n\n\t}\n\n\t// TODO: deprecate\n\n\tgetMode() {\n\n\t\treturn this.mode;\n\n\t}\n\n\tsetMode( mode ) {\n\n\t\tthis.mode = mode;\n\n\t}\n\n\tsetTranslationSnap( translationSnap ) {\n\n\t\tthis.translationSnap = translationSnap;\n\n\t}\n\n\tsetRotationSnap( rotationSnap ) {\n\n\t\tthis.rotationSnap = rotationSnap;\n\n\t}\n\n\tsetScaleSnap( scaleSnap ) {\n\n\t\tthis.scaleSnap = scaleSnap;\n\n\t}\n\n\tsetSize( size ) {\n\n\t\tthis.size = size;\n\n\t}\n\n\tsetSpace( space ) {\n\n\t\tthis.space = space;\n\n\t}\n\n\tupdate() {\n\n\t\tconsole.warn( 'THREE.TransformControls: update function has no more functionality and therefore has been deprecated.' );\n\n\t}\n\n}\n\nTransformControls.prototype.isTransformControls = true;\n\n// mouse / touch event handlers\n\nfunction getPointer( event ) {\n\n\tif ( this.domElement.ownerDocument.pointerLockElement ) {\n\n\t\treturn {\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tbutton: event.button\n\t\t};\n\n\t} else {\n\n\t\tconst rect = this.domElement.getBoundingClientRect();\n\n\t\treturn {\n\t\t\tx: ( event.clientX - rect.left ) / rect.width * 2 - 1,\n\t\t\ty: - ( event.clientY - rect.top ) / rect.height * 2 + 1,\n\t\t\tbutton: event.button\n\t\t};\n\n\t}\n\n}\n\nfunction onPointerHover( event ) {\n\n\tif ( ! this.enabled ) return;\n\n\tswitch ( event.pointerType ) {\n\n\t\tcase 'mouse':\n\t\tcase 'pen':\n\t\t\tthis.pointerHover( this._getPointer( event ) );\n\t\t\tbreak;\n\n\t}\n\n}\n\nfunction onPointerDown( event ) {\n\n\tif ( ! this.enabled ) return;\n\n\tif ( ! document.pointerLockElement ) {\n\n\t\tthis.domElement.setPointerCapture( event.pointerId );\n\n\t}\n\n\tthis.domElement.addEventListener( 'pointermove', this._onPointerMove );\n\n\tthis.pointerHover( this._getPointer( event ) );\n\tthis.pointerDown( this._getPointer( event ) );\n\n}\n\nfunction onPointerMove( event ) {\n\n\tif ( ! this.enabled ) return;\n\n\tthis.pointerMove( this._getPointer( event ) );\n\n}\n\nfunction onPointerUp( event ) {\n\n\tif ( ! this.enabled ) return;\n\n\tthis.domElement.releasePointerCapture( event.pointerId );\n\n\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\n\tthis.pointerUp( this._getPointer( event ) );\n\n}\n\nfunction intersectObjectWithRay( object, raycaster, includeInvisible ) {\n\n\tconst allIntersections = raycaster.intersectObject( object, true );\n\n\tfor ( let i = 0; i < allIntersections.length; i ++ ) {\n\n\t\tif ( allIntersections[ i ].object.visible || includeInvisible ) {\n\n\t\t\treturn allIntersections[ i ];\n\n\t\t}\n\n\t}\n\n\treturn false;\n\n}\n\n//\n\n// Reusable utility variables\n\nconst _tempEuler = new Euler();\nconst _alignVector = new Vector3( 0, 1, 0 );\nconst _zeroVector = new Vector3( 0, 0, 0 );\nconst _lookAtMatrix = new Matrix4();\nconst _tempQuaternion2 = new Quaternion();\nconst _identityQuaternion = new Quaternion();\nconst _dirVector = new Vector3();\nconst _tempMatrix = new Matrix4();\n\nconst _unitX = new Vector3( 1, 0, 0 );\nconst _unitY = new Vector3( 0, 1, 0 );\nconst _unitZ = new Vector3( 0, 0, 1 );\n\nconst _v1 = new Vector3();\nconst _v2 = new Vector3();\nconst _v3 = new Vector3();\n\nclass TransformControlsGizmo extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'TransformControlsGizmo';\n\n\t\t// shared materials\n\n\t\tconst gizmoMaterial = new MeshBasicMaterial( {\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false,\n\t\t\tfog: false,\n\t\t\ttoneMapped: false,\n\t\t\ttransparent: true\n\t\t} );\n\n\t\tconst gizmoLineMaterial = new LineBasicMaterial( {\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false,\n\t\t\tfog: false,\n\t\t\ttoneMapped: false,\n\t\t\ttransparent: true\n\t\t} );\n\n\t\t// Make unique material for each axis/color\n\n\t\tconst matInvisible = gizmoMaterial.clone();\n\t\tmatInvisible.opacity = 0.15;\n\n\t\tconst matHelper = gizmoLineMaterial.clone();\n\t\tmatHelper.opacity = 0.5;\n\n\t\tconst matRed = gizmoMaterial.clone();\n\t\tmatRed.color.setHex( 0xff0000 );\n\n\t\tconst matGreen = gizmoMaterial.clone();\n\t\tmatGreen.color.setHex( 0x00ff00 );\n\n\t\tconst matBlue = gizmoMaterial.clone();\n\t\tmatBlue.color.setHex( 0x0000ff );\n\n\t\tconst matRedTransparent = gizmoMaterial.clone();\n\t\tmatRedTransparent.color.setHex( 0xff0000 );\n\t\tmatRedTransparent.opacity = 0.5;\n\n\t\tconst matGreenTransparent = gizmoMaterial.clone();\n\t\tmatGreenTransparent.color.setHex( 0x00ff00 );\n\t\tmatGreenTransparent.opacity = 0.5;\n\n\t\tconst matBlueTransparent = gizmoMaterial.clone();\n\t\tmatBlueTransparent.color.setHex( 0x0000ff );\n\t\tmatBlueTransparent.opacity = 0.5;\n\n\t\tconst matWhiteTransparent = gizmoMaterial.clone();\n\t\tmatWhiteTransparent.opacity = 0.25;\n\n\t\tconst matYellowTransparent = gizmoMaterial.clone();\n\t\tmatYellowTransparent.color.setHex( 0xffff00 );\n\t\tmatYellowTransparent.opacity = 0.25;\n\n\t\tconst matYellow = gizmoMaterial.clone();\n\t\tmatYellow.color.setHex( 0xffff00 );\n\n\t\tconst matGray = gizmoMaterial.clone();\n\t\tmatGray.color.setHex( 0x787878 );\n\n\t\t// reusable geometry\n\n\t\tconst arrowGeometry = new CylinderGeometry( 0, 0.04, 0.1, 12 );\n\t\tarrowGeometry.translate( 0, 0.05, 0 );\n\n\t\tconst scaleHandleGeometry = new BoxGeometry( 0.08, 0.08, 0.08 );\n\t\tscaleHandleGeometry.translate( 0, 0.04, 0 );\n\n\t\tconst lineGeometry = new BufferGeometry();\n\t\tlineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0,\t1, 0, 0 ], 3 ) );\n\n\t\tconst lineGeometry2 = new CylinderGeometry( 0.0075, 0.0075, 0.5, 3 );\n\t\tlineGeometry2.translate( 0, 0.25, 0 );\n\n\t\tfunction CircleGeometry( radius, arc ) {\n\n\t\t\tconst geometry = new TorusGeometry( radius, 0.0075, 3, 64, arc * Math.PI * 2 );\n\t\t\tgeometry.rotateY( Math.PI / 2 );\n\t\t\tgeometry.rotateX( Math.PI / 2 );\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\t// Special geometry for transform helper. If scaled with position vector it spans from [0,0,0] to position\n\n\t\tfunction TranslateHelperGeometry() {\n\n\t\t\tconst geometry = new BufferGeometry();\n\n\t\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 1, 1, 1 ], 3 ) );\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\t// Gizmo definitions - custom hierarchy definitions for setupGizmo() function\n\n\t\tconst gizmoTranslate = {\n\t\t\tX: [\n\t\t\t\t[ new Mesh( arrowGeometry, matRed ), [ 0.5, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( arrowGeometry, matRed ), [ - 0.5, 0, 0 ], [ 0, 0, Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matRed ), [ 0, 0, 0 ], [ 0, 0, - Math.PI / 2 ]]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( arrowGeometry, matGreen ), [ 0, 0.5, 0 ]],\n\t\t\t\t[ new Mesh( arrowGeometry, matGreen ), [ 0, - 0.5, 0 ], [ Math.PI, 0, 0 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matGreen ) ]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( arrowGeometry, matBlue ), [ 0, 0, 0.5 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( arrowGeometry, matBlue ), [ 0, 0, - 0.5 ], [ - Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matBlue ), null, [ Math.PI / 2, 0, 0 ]]\n\t\t\t],\n\t\t\tXYZ: [\n\t\t\t\t[ new Mesh( new OctahedronGeometry( 0.1, 0 ), matWhiteTransparent.clone() ), [ 0, 0, 0 ]]\n\t\t\t],\n\t\t\tXY: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matBlueTransparent.clone() ), [ 0.15, 0.15, 0 ]]\n\t\t\t],\n\t\t\tYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matRedTransparent.clone() ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ]]\n\t\t\t],\n\t\t\tXZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matGreenTransparent.clone() ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t]\n\t\t};\n\n\t\tconst pickerTranslate = {\n\t\t\tX: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0.3, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ - 0.3, 0, 0 ], [ 0, 0, Math.PI / 2 ]]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0.3, 0 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, - 0.3, 0 ], [ 0, 0, Math.PI ]]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0, 0.3 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0, - 0.3 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t],\n\t\t\tXYZ: [\n\t\t\t\t[ new Mesh( new OctahedronGeometry( 0.2, 0 ), matInvisible ) ]\n\t\t\t],\n\t\t\tXY: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0.15, 0.15, 0 ]]\n\t\t\t],\n\t\t\tYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ]]\n\t\t\t],\n\t\t\tXZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t]\n\t\t};\n\n\t\tconst helperTranslate = {\n\t\t\tSTART: [\n\t\t\t\t[ new Mesh( new OctahedronGeometry( 0.01, 2 ), matHelper ), null, null, null, 'helper' ]\n\t\t\t],\n\t\t\tEND: [\n\t\t\t\t[ new Mesh( new OctahedronGeometry( 0.01, 2 ), matHelper ), null, null, null, 'helper' ]\n\t\t\t],\n\t\t\tDELTA: [\n\t\t\t\t[ new Line( TranslateHelperGeometry(), matHelper ), null, null, null, 'helper' ]\n\t\t\t],\n\t\t\tX: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, - 1e3, 0 ], [ 0, 0, Math.PI / 2 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, 0, - 1e3 ], [ 0, - Math.PI / 2, 0 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t]\n\t\t};\n\n\t\tconst gizmoRotate = {\n\t\t\tXYZE: [\n\t\t\t\t[ new Mesh( CircleGeometry( 0.5, 1 ), matGray ), null, [ 0, Math.PI / 2, 0 ]]\n\t\t\t],\n\t\t\tX: [\n\t\t\t\t[ new Mesh( CircleGeometry( 0.5, 0.5 ), matRed ) ]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( CircleGeometry( 0.5, 0.5 ), matGreen ), null, [ 0, 0, - Math.PI / 2 ]]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( CircleGeometry( 0.5, 0.5 ), matBlue ), null, [ 0, Math.PI / 2, 0 ]]\n\t\t\t],\n\t\t\tE: [\n\t\t\t\t[ new Mesh( CircleGeometry( 0.75, 1 ), matYellowTransparent ), null, [ 0, Math.PI / 2, 0 ]]\n\t\t\t]\n\t\t};\n\n\t\tconst helperRotate = {\n\t\t\tAXIS: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t]\n\t\t};\n\n\t\tconst pickerRotate = {\n\t\t\tXYZE: [\n\t\t\t\t[ new Mesh( new SphereGeometry( 0.25, 10, 8 ), matInvisible ) ]\n\t\t\t],\n\t\t\tX: [\n\t\t\t\t[ new Mesh( new TorusGeometry( 0.5, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ 0, - Math.PI / 2, - Math.PI / 2 ]],\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( new TorusGeometry( 0.5, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( new TorusGeometry( 0.5, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t],\n\t\t\tE: [\n\t\t\t\t[ new Mesh( new TorusGeometry( 0.75, 0.1, 2, 24 ), matInvisible ) ]\n\t\t\t]\n\t\t};\n\n\t\tconst gizmoScale = {\n\t\t\tX: [\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matRed ), [ 0.5, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matRed ), [ 0, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matRed ), [ - 0.5, 0, 0 ], [ 0, 0, Math.PI / 2 ]],\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matGreen ), [ 0, 0.5, 0 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matGreen ) ],\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matGreen ), [ 0, - 0.5, 0 ], [ 0, 0, Math.PI ]],\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matBlue ), [ 0, 0, 0.5 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( lineGeometry2, matBlue ), [ 0, 0, 0 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( scaleHandleGeometry, matBlue ), [ 0, 0, - 0.5 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t],\n\t\t\tXY: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matBlueTransparent ), [ 0.15, 0.15, 0 ]]\n\t\t\t],\n\t\t\tYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matRedTransparent ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ]]\n\t\t\t],\n\t\t\tXZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.15, 0.15, 0.01 ), matGreenTransparent ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t],\n\t\t\tXYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.1, 0.1, 0.1 ), matWhiteTransparent.clone() ) ],\n\t\t\t]\n\t\t};\n\n\t\tconst pickerScale = {\n\t\t\tX: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0.3, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ - 0.3, 0, 0 ], [ 0, 0, Math.PI / 2 ]]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0.3, 0 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, - 0.3, 0 ], [ 0, 0, Math.PI ]]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0, 0.3 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t\t[ new Mesh( new CylinderGeometry( 0.2, 0, 0.6, 4 ), matInvisible ), [ 0, 0, - 0.3 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t\t],\n\t\t\tXY: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0.15, 0.15, 0 ]],\n\t\t\t],\n\t\t\tYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ]],\n\t\t\t],\n\t\t\tXZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.01 ), matInvisible ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ]],\n\t\t\t],\n\t\t\tXYZ: [\n\t\t\t\t[ new Mesh( new BoxGeometry( 0.2, 0.2, 0.2 ), matInvisible ), [ 0, 0, 0 ]],\n\t\t\t]\n\t\t};\n\n\t\tconst helperScale = {\n\t\t\tX: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t],\n\t\t\tY: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, - 1e3, 0 ], [ 0, 0, Math.PI / 2 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t],\n\t\t\tZ: [\n\t\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, 0, - 1e3 ], [ 0, - Math.PI / 2, 0 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t\t]\n\t\t};\n\n\t\t// Creates an Object3D with gizmos described in custom hierarchy definition.\n\n\t\tfunction setupGizmo( gizmoMap ) {\n\n\t\t\tconst gizmo = new Object3D();\n\n\t\t\tfor ( const name in gizmoMap ) {\n\n\t\t\t\tfor ( let i = gizmoMap[ name ].length; i --; ) {\n\n\t\t\t\t\tconst object = gizmoMap[ name ][ i ][ 0 ].clone();\n\t\t\t\t\tconst position = gizmoMap[ name ][ i ][ 1 ];\n\t\t\t\t\tconst rotation = gizmoMap[ name ][ i ][ 2 ];\n\t\t\t\t\tconst scale = gizmoMap[ name ][ i ][ 3 ];\n\t\t\t\t\tconst tag = gizmoMap[ name ][ i ][ 4 ];\n\n\t\t\t\t\t// name and tag properties are essential for picking and updating logic.\n\t\t\t\t\tobject.name = name;\n\t\t\t\t\tobject.tag = tag;\n\n\t\t\t\t\tif ( position ) {\n\n\t\t\t\t\t\tobject.position.set( position[ 0 ], position[ 1 ], position[ 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( rotation ) {\n\n\t\t\t\t\t\tobject.rotation.set( rotation[ 0 ], rotation[ 1 ], rotation[ 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( scale ) {\n\n\t\t\t\t\t\tobject.scale.set( scale[ 0 ], scale[ 1 ], scale[ 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.updateMatrix();\n\n\t\t\t\t\tconst tempGeometry = object.geometry.clone();\n\t\t\t\t\ttempGeometry.applyMatrix4( object.matrix );\n\t\t\t\t\tobject.geometry = tempGeometry;\n\t\t\t\t\tobject.renderOrder = Infinity;\n\n\t\t\t\t\tobject.position.set( 0, 0, 0 );\n\t\t\t\t\tobject.rotation.set( 0, 0, 0 );\n\t\t\t\t\tobject.scale.set( 1, 1, 1 );\n\n\t\t\t\t\tgizmo.add( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn gizmo;\n\n\t\t}\n\n\t\t// Gizmo creation\n\n\t\tthis.gizmo = {};\n\t\tthis.picker = {};\n\t\tthis.helper = {};\n\n\t\tthis.add( this.gizmo[ 'translate' ] = setupGizmo( gizmoTranslate ) );\n\t\tthis.add( this.gizmo[ 'rotate' ] = setupGizmo( gizmoRotate ) );\n\t\tthis.add( this.gizmo[ 'scale' ] = setupGizmo( gizmoScale ) );\n\t\tthis.add( this.picker[ 'translate' ] = setupGizmo( pickerTranslate ) );\n\t\tthis.add( this.picker[ 'rotate' ] = setupGizmo( pickerRotate ) );\n\t\tthis.add( this.picker[ 'scale' ] = setupGizmo( pickerScale ) );\n\t\tthis.add( this.helper[ 'translate' ] = setupGizmo( helperTranslate ) );\n\t\tthis.add( this.helper[ 'rotate' ] = setupGizmo( helperRotate ) );\n\t\tthis.add( this.helper[ 'scale' ] = setupGizmo( helperScale ) );\n\n\t\t// Pickers should be hidden always\n\n\t\tthis.picker[ 'translate' ].visible = false;\n\t\tthis.picker[ 'rotate' ].visible = false;\n\t\tthis.picker[ 'scale' ].visible = false;\n\n\t}\n\n\t// updateMatrixWorld will update transformations and appearance of individual handles\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst space = ( this.mode === 'scale' ) ? 'local' : this.space; // scale always oriented to local rotation\n\n\t\tconst quaternion = ( space === 'local' ) ? this.worldQuaternion : _identityQuaternion;\n\n\t\t// Show only gizmos for current transform mode\n\n\t\tthis.gizmo[ 'translate' ].visible = this.mode === 'translate';\n\t\tthis.gizmo[ 'rotate' ].visible = this.mode === 'rotate';\n\t\tthis.gizmo[ 'scale' ].visible = this.mode === 'scale';\n\n\t\tthis.helper[ 'translate' ].visible = this.mode === 'translate';\n\t\tthis.helper[ 'rotate' ].visible = this.mode === 'rotate';\n\t\tthis.helper[ 'scale' ].visible = this.mode === 'scale';\n\n\n\t\tlet handles = [];\n\t\thandles = handles.concat( this.picker[ this.mode ].children );\n\t\thandles = handles.concat( this.gizmo[ this.mode ].children );\n\t\thandles = handles.concat( this.helper[ this.mode ].children );\n\n\t\tfor ( let i = 0; i < handles.length; i ++ ) {\n\n\t\t\tconst handle = handles[ i ];\n\n\t\t\t// hide aligned to camera\n\n\t\t\thandle.visible = true;\n\t\t\thandle.rotation.set( 0, 0, 0 );\n\t\t\thandle.position.copy( this.worldPosition );\n\n\t\t\tlet factor;\n\n\t\t\tif ( this.camera.isOrthographicCamera ) {\n\n\t\t\t\tfactor = ( this.camera.top - this.camera.bottom ) / this.camera.zoom;\n\n\t\t\t} else {\n\n\t\t\t\tfactor = this.worldPosition.distanceTo( this.cameraPosition ) * Math.min( 1.9 * Math.tan( Math.PI * this.camera.fov / 360 ) / this.camera.zoom, 7 );\n\n\t\t\t}\n\n\t\t\thandle.scale.set( 1, 1, 1 ).multiplyScalar( factor * this.size / 4 );\n\n\t\t\t// TODO: simplify helpers and consider decoupling from gizmo\n\n\t\t\tif ( handle.tag === 'helper' ) {\n\n\t\t\t\thandle.visible = false;\n\n\t\t\t\tif ( handle.name === 'AXIS' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\t\t\t\t\thandle.visible = !! this.axis;\n\n\t\t\t\t\tif ( this.axis === 'X' ) {\n\n\t\t\t\t\t\t_tempQuaternion.setFromEuler( _tempEuler.set( 0, 0, 0 ) );\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( _tempQuaternion );\n\n\t\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'Y' ) {\n\n\t\t\t\t\t\t_tempQuaternion.setFromEuler( _tempEuler.set( 0, 0, Math.PI / 2 ) );\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( _tempQuaternion );\n\n\t\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'Z' ) {\n\n\t\t\t\t\t\t_tempQuaternion.setFromEuler( _tempEuler.set( 0, Math.PI / 2, 0 ) );\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( _tempQuaternion );\n\n\t\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'XYZE' ) {\n\n\t\t\t\t\t\t_tempQuaternion.setFromEuler( _tempEuler.set( 0, Math.PI / 2, 0 ) );\n\t\t\t\t\t\t_alignVector.copy( this.rotationAxis );\n\t\t\t\t\t\thandle.quaternion.setFromRotationMatrix( _lookAtMatrix.lookAt( _zeroVector, _alignVector, _unitY ) );\n\t\t\t\t\t\thandle.quaternion.multiply( _tempQuaternion );\n\t\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'E' ) {\n\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else if ( handle.name === 'START' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t} else if ( handle.name === 'END' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPosition );\n\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t} else if ( handle.name === 'DELTA' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\t\t\t\t\thandle.quaternion.copy( this.worldQuaternionStart );\n\t\t\t\t\t_tempVector.set( 1e-10, 1e-10, 1e-10 ).add( this.worldPositionStart ).sub( this.worldPosition ).multiplyScalar( - 1 );\n\t\t\t\t\t_tempVector.applyQuaternion( this.worldQuaternionStart.clone().invert() );\n\t\t\t\t\thandle.scale.copy( _tempVector );\n\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t} else {\n\n\t\t\t\t\thandle.quaternion.copy( quaternion );\n\n\t\t\t\t\tif ( this.dragging ) {\n\n\t\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\thandle.position.copy( this.worldPosition );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis ) {\n\n\t\t\t\t\t\thandle.visible = this.axis.search( handle.name ) !== - 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// If updating helper, skip rest of the loop\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// Align handles to current local or world rotation\n\n\t\t\thandle.quaternion.copy( quaternion );\n\n\t\t\tif ( this.mode === 'translate' || this.mode === 'scale' ) {\n\n\t\t\t\t// Hide translate and scale axis facing the camera\n\n\t\t\t\tconst AXIS_HIDE_TRESHOLD = 0.99;\n\t\t\t\tconst PLANE_HIDE_TRESHOLD = 0.2;\n\n\t\t\t\tif ( handle.name === 'X' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Y' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Z' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'XY' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'YZ' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'XZ' ) {\n\n\t\t\t\t\tif ( Math.abs( _alignVector.copy( _unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( this.mode === 'rotate' ) {\n\n\t\t\t\t// Align handles to current local or world rotation\n\n\t\t\t\t_tempQuaternion2.copy( quaternion );\n\t\t\t\t_alignVector.copy( this.eye ).applyQuaternion( _tempQuaternion.copy( quaternion ).invert() );\n\n\t\t\t\tif ( handle.name.search( 'E' ) !== - 1 ) {\n\n\t\t\t\t\thandle.quaternion.setFromRotationMatrix( _lookAtMatrix.lookAt( this.eye, _zeroVector, _unitY ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'X' ) {\n\n\t\t\t\t\t_tempQuaternion.setFromAxisAngle( _unitX, Math.atan2( - _alignVector.y, _alignVector.z ) );\n\t\t\t\t\t_tempQuaternion.multiplyQuaternions( _tempQuaternion2, _tempQuaternion );\n\t\t\t\t\thandle.quaternion.copy( _tempQuaternion );\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Y' ) {\n\n\t\t\t\t\t_tempQuaternion.setFromAxisAngle( _unitY, Math.atan2( _alignVector.x, _alignVector.z ) );\n\t\t\t\t\t_tempQuaternion.multiplyQuaternions( _tempQuaternion2, _tempQuaternion );\n\t\t\t\t\thandle.quaternion.copy( _tempQuaternion );\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Z' ) {\n\n\t\t\t\t\t_tempQuaternion.setFromAxisAngle( _unitZ, Math.atan2( _alignVector.y, _alignVector.x ) );\n\t\t\t\t\t_tempQuaternion.multiplyQuaternions( _tempQuaternion2, _tempQuaternion );\n\t\t\t\t\thandle.quaternion.copy( _tempQuaternion );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Hide disabled axes\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( 'X' ) === - 1 || this.showX );\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( 'Y' ) === - 1 || this.showY );\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( 'Z' ) === - 1 || this.showZ );\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( 'E' ) === - 1 || ( this.showX && this.showY && this.showZ ) );\n\n\t\t\t// highlight selected axis\n\n\t\t\thandle.material._color = handle.material._color || handle.material.color.clone();\n\t\t\thandle.material._opacity = handle.material._opacity || handle.material.opacity;\n\n\t\t\thandle.material.color.copy( handle.material._color );\n\t\t\thandle.material.opacity = handle.material._opacity;\n\n\t\t\tif ( this.enabled && this.axis ) {\n\n\t\t\t\tif ( handle.name === this.axis ) {\n\n\t\t\t\t\thandle.material.color.setHex( 0xffff00 );\n\t\t\t\t\thandle.material.opacity = 1.0;\n\n\t\t\t\t} else if ( this.axis.split( '' ).some( function ( a ) {\n\n\t\t\t\t\treturn handle.name === a;\n\n\t\t\t\t} ) ) {\n\n\t\t\t\t\thandle.material.color.setHex( 0xffff00 );\n\t\t\t\t\thandle.material.opacity = 1.0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\nTransformControlsGizmo.prototype.isTransformControlsGizmo = true;\n\n//\n\nclass TransformControlsPlane extends Mesh {\n\n\tconstructor() {\n\n\t\tsuper(\n\t\t\tnew PlaneGeometry( 100000, 100000, 2, 2 ),\n\t\t\tnew MeshBasicMaterial( { visible: false, wireframe: true, side: DoubleSide, transparent: true, opacity: 0.1, toneMapped: false } )\n\t\t);\n\n\t\tthis.type = 'TransformControlsPlane';\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tlet space = this.space;\n\n\t\tthis.position.copy( this.worldPosition );\n\n\t\tif ( this.mode === 'scale' ) space = 'local'; // scale always oriented to local rotation\n\n\t\t_v1.copy( _unitX ).applyQuaternion( space === 'local' ? this.worldQuaternion : _identityQuaternion );\n\t\t_v2.copy( _unitY ).applyQuaternion( space === 'local' ? this.worldQuaternion : _identityQuaternion );\n\t\t_v3.copy( _unitZ ).applyQuaternion( space === 'local' ? this.worldQuaternion : _identityQuaternion );\n\n\t\t// Align the plane for current transform mode, axis and space.\n\n\t\t_alignVector.copy( _v2 );\n\n\t\tswitch ( this.mode ) {\n\n\t\t\tcase 'translate':\n\t\t\tcase 'scale':\n\t\t\t\tswitch ( this.axis ) {\n\n\t\t\t\t\tcase 'X':\n\t\t\t\t\t\t_alignVector.copy( this.eye ).cross( _v1 );\n\t\t\t\t\t\t_dirVector.copy( _v1 ).cross( _alignVector );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Y':\n\t\t\t\t\t\t_alignVector.copy( this.eye ).cross( _v2 );\n\t\t\t\t\t\t_dirVector.copy( _v2 ).cross( _alignVector );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Z':\n\t\t\t\t\t\t_alignVector.copy( this.eye ).cross( _v3 );\n\t\t\t\t\t\t_dirVector.copy( _v3 ).cross( _alignVector );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'XY':\n\t\t\t\t\t\t_dirVector.copy( _v3 );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'YZ':\n\t\t\t\t\t\t_dirVector.copy( _v1 );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'XZ':\n\t\t\t\t\t\t_alignVector.copy( _v3 );\n\t\t\t\t\t\t_dirVector.copy( _v2 );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'XYZ':\n\t\t\t\t\tcase 'E':\n\t\t\t\t\t\t_dirVector.set( 0, 0, 0 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase 'rotate':\n\t\t\tdefault:\n\t\t\t\t// special case for rotate\n\t\t\t\t_dirVector.set( 0, 0, 0 );\n\n\t\t}\n\n\t\tif ( _dirVector.length() === 0 ) {\n\n\t\t\t// If in rotate mode, make the plane parallel to camera\n\t\t\tthis.quaternion.copy( this.cameraQuaternion );\n\n\t\t} else {\n\n\t\t\t_tempMatrix.lookAt( _tempVector.set( 0, 0, 0 ), _dirVector, _alignVector );\n\n\t\t\tthis.quaternion.setFromRotationMatrix( _tempMatrix );\n\n\t\t}\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n}\n\nTransformControlsPlane.prototype.isTransformControlsPlane = true;\n\nexport { TransformControls, TransformControlsGizmo, TransformControlsPlane };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}