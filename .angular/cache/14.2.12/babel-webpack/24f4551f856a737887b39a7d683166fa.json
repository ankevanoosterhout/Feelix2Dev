{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, BatchToSpaceND, util } from '@tensorflow/tfjs-core';\nimport { reshape } from './Reshape';\nimport { slice } from './Slice';\nimport { transpose } from './Transpose';\nexport const batchToSpaceND = args => {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x\n  } = inputs;\n  const {\n    blockShape,\n    crops\n  } = attrs;\n  util.assert(x.shape.length <= 4, () => 'batchToSpaceND for rank > 4 with a WebGL backend not ' + 'implemented yet');\n  const prod = blockShape.reduce((a, b) => a * b);\n  const reshaped = backend_util.getReshaped(x.shape, blockShape, prod);\n  const permuted = backend_util.getPermuted(reshaped.length, blockShape.length);\n  const reshapedPermuted = backend_util.getReshapedPermuted(x.shape, blockShape, prod);\n  const sliceBeginCoords = backend_util.getSliceBeginCoords(crops, blockShape.length);\n  const sliceSize = backend_util.getSliceSize(reshapedPermuted, crops, blockShape.length);\n  const toDispose = [];\n  const reshapedIntermediate = reshape({\n    inputs: {\n      x\n    },\n    backend,\n    attrs: {\n      shape: reshaped\n    }\n  });\n  const transposedIntermediate = transpose({\n    inputs: {\n      x: reshapedIntermediate\n    },\n    backend,\n    attrs: {\n      perm: permuted\n    }\n  });\n  const reshapedIntermediate2 = reshape({\n    inputs: {\n      x: transposedIntermediate\n    },\n    backend,\n    attrs: {\n      shape: reshapedPermuted\n    }\n  });\n  const sliced = slice({\n    inputs: {\n      x: reshapedIntermediate2\n    },\n    backend,\n    attrs: {\n      begin: sliceBeginCoords,\n      size: sliceSize\n    }\n  });\n  toDispose.push(reshapedIntermediate);\n  toDispose.push(transposedIntermediate);\n  toDispose.push(reshapedIntermediate2);\n  toDispose.forEach(t => backend.disposeIntermediateTensorInfo(t));\n  return sliced;\n};\nexport const batchToSpaceNDConfig = {\n  kernelName: BatchToSpaceND,\n  backendName: 'webgl',\n  kernelFunc: batchToSpaceND\n};","map":{"version":3,"names":["backend_util","BatchToSpaceND","util","reshape","slice","transpose","batchToSpaceND","args","inputs","backend","attrs","x","blockShape","crops","assert","shape","length","prod","reduce","a","b","reshaped","getReshaped","permuted","getPermuted","reshapedPermuted","getReshapedPermuted","sliceBeginCoords","getSliceBeginCoords","sliceSize","getSliceSize","toDispose","reshapedIntermediate","transposedIntermediate","perm","reshapedIntermediate2","sliced","begin","size","push","forEach","t","disposeIntermediateTensorInfo","batchToSpaceNDConfig","kernelName","backendName","kernelFunc"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/BatchToSpaceND.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, BatchToSpaceND, util } from '@tensorflow/tfjs-core';\nimport { reshape } from './Reshape';\nimport { slice } from './Slice';\nimport { transpose } from './Transpose';\nexport const batchToSpaceND = (args) => {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { blockShape, crops } = attrs;\n    util.assert(x.shape.length <= 4, () => 'batchToSpaceND for rank > 4 with a WebGL backend not ' +\n        'implemented yet');\n    const prod = blockShape.reduce((a, b) => a * b);\n    const reshaped = backend_util.getReshaped(x.shape, blockShape, prod);\n    const permuted = backend_util.getPermuted(reshaped.length, blockShape.length);\n    const reshapedPermuted = backend_util.getReshapedPermuted(x.shape, blockShape, prod);\n    const sliceBeginCoords = backend_util.getSliceBeginCoords(crops, blockShape.length);\n    const sliceSize = backend_util.getSliceSize(reshapedPermuted, crops, blockShape.length);\n    const toDispose = [];\n    const reshapedIntermediate = reshape({ inputs: { x }, backend, attrs: { shape: reshaped } });\n    const transposedIntermediate = transpose({ inputs: { x: reshapedIntermediate }, backend, attrs: { perm: permuted } });\n    const reshapedIntermediate2 = reshape({\n        inputs: { x: transposedIntermediate },\n        backend,\n        attrs: { shape: reshapedPermuted }\n    });\n    const sliced = slice({\n        inputs: { x: reshapedIntermediate2 },\n        backend,\n        attrs: { begin: sliceBeginCoords, size: sliceSize }\n    });\n    toDispose.push(reshapedIntermediate);\n    toDispose.push(transposedIntermediate);\n    toDispose.push(reshapedIntermediate2);\n    toDispose.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return sliced;\n};\nexport const batchToSpaceNDConfig = {\n    kernelName: BatchToSpaceND,\n    backendName: 'webgl',\n    kernelFunc: batchToSpaceND\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}