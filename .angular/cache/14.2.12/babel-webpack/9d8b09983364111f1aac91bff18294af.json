{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { reshape } from '../../ops/reshape';\nimport { getGlobalTensorClass } from '../../tensor';\nimport { assert } from '../../util';\n/**\n * Converts a size-1 `tf.Tensor` to a `tf.Scalar`.\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\n\ngetGlobalTensorClass().prototype.asScalar = function () {\n  this.throwIfDisposed();\n  assert(this.size === 1, () => 'The array must have only 1 element.');\n  return reshape(this, []);\n};","map":{"version":3,"names":["reshape","getGlobalTensorClass","assert","prototype","asScalar","throwIfDisposed","size"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-core/dist/public/chained_ops/as_scalar.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { reshape } from '../../ops/reshape';\nimport { getGlobalTensorClass } from '../../tensor';\nimport { assert } from '../../util';\n/**\n * Converts a size-1 `tf.Tensor` to a `tf.Scalar`.\n * @doc {heading: 'Tensors', subheading: 'Classes'}\n */\ngetGlobalTensorClass().prototype.asScalar = function () {\n    this.throwIfDisposed();\n    assert(this.size === 1, () => 'The array must have only 1 element.');\n    return reshape(this, []);\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,OAAT,QAAwB,mBAAxB;AACA,SAASC,oBAAT,QAAqC,cAArC;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA;AACA;AACA;AACA;;AACAD,oBAAoB,GAAGE,SAAvB,CAAiCC,QAAjC,GAA4C,YAAY;EACpD,KAAKC,eAAL;EACAH,MAAM,CAAC,KAAKI,IAAL,KAAc,CAAf,EAAkB,MAAM,qCAAxB,CAAN;EACA,OAAON,OAAO,CAAC,IAAD,EAAO,EAAP,CAAd;AACH,CAJD"},"metadata":{},"sourceType":"module"}