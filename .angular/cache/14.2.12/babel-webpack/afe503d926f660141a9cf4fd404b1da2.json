{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Unpack } from '@tensorflow/tfjs-core';\nimport { reshape } from './Reshape';\nimport { slice } from './Slice';\nexport function unpack(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    value\n  } = inputs;\n  let {\n    axis\n  } = attrs;\n\n  if (axis < 0) {\n    axis += value.shape.length;\n  }\n\n  const x = value;\n  const xRank = x.shape.length;\n  const num = value.shape[axis];\n  const outShape = new Array(xRank - 1);\n  let outIndex = 0;\n\n  for (let i = 0; i < xRank; i++) {\n    if (i !== axis) {\n      outShape[outIndex++] = x.shape[i];\n    }\n  }\n\n  const toDispose = [];\n  const begin = new Array(xRank).fill(0);\n  const size = x.shape.slice();\n  size[axis] = 1;\n  const res = new Array(num);\n\n  for (let i = 0; i < res.length; i++) {\n    begin[axis] = i;\n    const sliced = slice({\n      inputs: {\n        x\n      },\n      backend,\n      attrs: {\n        begin,\n        size\n      }\n    });\n    const reshaped = reshape({\n      inputs: {\n        x: sliced\n      },\n      backend,\n      attrs: {\n        shape: outShape\n      }\n    });\n    res[i] = reshaped;\n    toDispose.push(sliced);\n  }\n\n  toDispose.forEach(t => backend.disposeIntermediateTensorInfo(t));\n  return res;\n}\nexport const unpackConfig = {\n  kernelName: Unpack,\n  backendName: 'webgl',\n  kernelFunc: unpack\n};","map":{"version":3,"names":["Unpack","reshape","slice","unpack","args","inputs","backend","attrs","value","axis","shape","length","x","xRank","num","outShape","Array","outIndex","i","toDispose","begin","fill","size","res","sliced","reshaped","push","forEach","t","disposeIntermediateTensorInfo","unpackConfig","kernelName","backendName","kernelFunc"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Unpack.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Unpack } from '@tensorflow/tfjs-core';\nimport { reshape } from './Reshape';\nimport { slice } from './Slice';\nexport function unpack(args) {\n    const { inputs, backend, attrs } = args;\n    const { value } = inputs;\n    let { axis } = attrs;\n    if (axis < 0) {\n        axis += value.shape.length;\n    }\n    const x = value;\n    const xRank = x.shape.length;\n    const num = value.shape[axis];\n    const outShape = new Array(xRank - 1);\n    let outIndex = 0;\n    for (let i = 0; i < xRank; i++) {\n        if (i !== axis) {\n            outShape[outIndex++] = x.shape[i];\n        }\n    }\n    const toDispose = [];\n    const begin = new Array(xRank).fill(0);\n    const size = x.shape.slice();\n    size[axis] = 1;\n    const res = new Array(num);\n    for (let i = 0; i < res.length; i++) {\n        begin[axis] = i;\n        const sliced = slice({ inputs: { x }, backend, attrs: { begin, size } });\n        const reshaped = reshape({ inputs: { x: sliced }, backend, attrs: { shape: outShape } });\n        res[i] = reshaped;\n        toDispose.push(sliced);\n    }\n    toDispose.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return res;\n}\nexport const unpackConfig = {\n    kernelName: Unpack,\n    backendName: 'webgl',\n    kernelFunc: unpack\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAT,QAAuB,uBAAvB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,OAAO,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;EACzB,MAAM;IAAEC,MAAF;IAAUC,OAAV;IAAmBC;EAAnB,IAA6BH,IAAnC;EACA,MAAM;IAAEI;EAAF,IAAYH,MAAlB;EACA,IAAI;IAAEI;EAAF,IAAWF,KAAf;;EACA,IAAIE,IAAI,GAAG,CAAX,EAAc;IACVA,IAAI,IAAID,KAAK,CAACE,KAAN,CAAYC,MAApB;EACH;;EACD,MAAMC,CAAC,GAAGJ,KAAV;EACA,MAAMK,KAAK,GAAGD,CAAC,CAACF,KAAF,CAAQC,MAAtB;EACA,MAAMG,GAAG,GAAGN,KAAK,CAACE,KAAN,CAAYD,IAAZ,CAAZ;EACA,MAAMM,QAAQ,GAAG,IAAIC,KAAJ,CAAUH,KAAK,GAAG,CAAlB,CAAjB;EACA,IAAII,QAAQ,GAAG,CAAf;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAApB,EAA2BK,CAAC,EAA5B,EAAgC;IAC5B,IAAIA,CAAC,KAAKT,IAAV,EAAgB;MACZM,QAAQ,CAACE,QAAQ,EAAT,CAAR,GAAuBL,CAAC,CAACF,KAAF,CAAQQ,CAAR,CAAvB;IACH;EACJ;;EACD,MAAMC,SAAS,GAAG,EAAlB;EACA,MAAMC,KAAK,GAAG,IAAIJ,KAAJ,CAAUH,KAAV,EAAiBQ,IAAjB,CAAsB,CAAtB,CAAd;EACA,MAAMC,IAAI,GAAGV,CAAC,CAACF,KAAF,CAAQR,KAAR,EAAb;EACAoB,IAAI,CAACb,IAAD,CAAJ,GAAa,CAAb;EACA,MAAMc,GAAG,GAAG,IAAIP,KAAJ,CAAUF,GAAV,CAAZ;;EACA,KAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGK,GAAG,CAACZ,MAAxB,EAAgCO,CAAC,EAAjC,EAAqC;IACjCE,KAAK,CAACX,IAAD,CAAL,GAAcS,CAAd;IACA,MAAMM,MAAM,GAAGtB,KAAK,CAAC;MAAEG,MAAM,EAAE;QAAEO;MAAF,CAAV;MAAiBN,OAAjB;MAA0BC,KAAK,EAAE;QAAEa,KAAF;QAASE;MAAT;IAAjC,CAAD,CAApB;IACA,MAAMG,QAAQ,GAAGxB,OAAO,CAAC;MAAEI,MAAM,EAAE;QAAEO,CAAC,EAAEY;MAAL,CAAV;MAAyBlB,OAAzB;MAAkCC,KAAK,EAAE;QAAEG,KAAK,EAAEK;MAAT;IAAzC,CAAD,CAAxB;IACAQ,GAAG,CAACL,CAAD,CAAH,GAASO,QAAT;IACAN,SAAS,CAACO,IAAV,CAAeF,MAAf;EACH;;EACDL,SAAS,CAACQ,OAAV,CAAkBC,CAAC,IAAItB,OAAO,CAACuB,6BAAR,CAAsCD,CAAtC,CAAvB;EACA,OAAOL,GAAP;AACH;AACD,OAAO,MAAMO,YAAY,GAAG;EACxBC,UAAU,EAAE/B,MADY;EAExBgC,WAAW,EAAE,OAFW;EAGxBC,UAAU,EAAE9B;AAHY,CAArB"},"metadata":{},"sourceType":"module"}