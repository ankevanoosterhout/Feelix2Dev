{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Neg, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { multiplyImpl } from './Multiply';\nexport function negImpl(xVals, xShape, xDtype) {\n  const minusOne = util.createScalarValue(-1, xDtype);\n  return multiplyImpl([], xShape, minusOne, xVals, xDtype);\n}\nexport function neg(args) {\n  const {\n    inputs,\n    backend\n  } = args;\n  const {\n    x\n  } = inputs;\n  assertNotComplex(x, 'neg');\n  const xVals = backend.data.get(x.dataId).values;\n  const [res, newShape] = negImpl(xVals, x.shape, x.dtype);\n  return backend.makeTensorInfo(newShape, x.dtype, res);\n}\nexport const negConfig = {\n  kernelName: Neg,\n  backendName: 'cpu',\n  kernelFunc: neg\n};","map":{"version":3,"names":["Neg","util","assertNotComplex","multiplyImpl","negImpl","xVals","xShape","xDtype","minusOne","createScalarValue","neg","args","inputs","backend","x","data","get","dataId","values","res","newShape","shape","dtype","makeTensorInfo","negConfig","kernelName","backendName","kernelFunc"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Neg.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Neg, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { multiplyImpl } from './Multiply';\nexport function negImpl(xVals, xShape, xDtype) {\n    const minusOne = util.createScalarValue(-1, xDtype);\n    return multiplyImpl([], xShape, minusOne, xVals, xDtype);\n}\nexport function neg(args) {\n    const { inputs, backend } = args;\n    const { x } = inputs;\n    assertNotComplex(x, 'neg');\n    const xVals = backend.data.get(x.dataId).values;\n    const [res, newShape] = negImpl(xVals, x.shape, x.dtype);\n    return backend.makeTensorInfo(newShape, x.dtype, res);\n}\nexport const negConfig = {\n    kernelName: Neg,\n    backendName: 'cpu',\n    kernelFunc: neg\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,GAAT,EAAcC,IAAd,QAA0B,uBAA1B;AACA,SAASC,gBAAT,QAAiC,aAAjC;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAO,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgCC,MAAhC,EAAwC;EAC3C,MAAMC,QAAQ,GAAGP,IAAI,CAACQ,iBAAL,CAAuB,CAAC,CAAxB,EAA2BF,MAA3B,CAAjB;EACA,OAAOJ,YAAY,CAAC,EAAD,EAAKG,MAAL,EAAaE,QAAb,EAAuBH,KAAvB,EAA8BE,MAA9B,CAAnB;AACH;AACD,OAAO,SAASG,GAAT,CAAaC,IAAb,EAAmB;EACtB,MAAM;IAAEC,MAAF;IAAUC;EAAV,IAAsBF,IAA5B;EACA,MAAM;IAAEG;EAAF,IAAQF,MAAd;EACAV,gBAAgB,CAACY,CAAD,EAAI,KAAJ,CAAhB;EACA,MAAMT,KAAK,GAAGQ,OAAO,CAACE,IAAR,CAAaC,GAAb,CAAiBF,CAAC,CAACG,MAAnB,EAA2BC,MAAzC;EACA,MAAM,CAACC,GAAD,EAAMC,QAAN,IAAkBhB,OAAO,CAACC,KAAD,EAAQS,CAAC,CAACO,KAAV,EAAiBP,CAAC,CAACQ,KAAnB,CAA/B;EACA,OAAOT,OAAO,CAACU,cAAR,CAAuBH,QAAvB,EAAiCN,CAAC,CAACQ,KAAnC,EAA0CH,GAA1C,CAAP;AACH;AACD,OAAO,MAAMK,SAAS,GAAG;EACrBC,UAAU,EAAEzB,GADS;EAErB0B,WAAW,EAAE,KAFQ;EAGrBC,UAAU,EAAEjB;AAHS,CAAlB"},"metadata":{},"sourceType":"module"}