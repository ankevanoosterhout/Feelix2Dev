{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Import shared functionality from tfjs-backend-cpu without triggering\n// side effects.\n// tslint:disable-next-line: no-imports-from-dist\nimport * as shared from '@tensorflow/tfjs-backend-cpu/dist/shared';\nconst {\n  addImpl: addImplCPU,\n  bincountImpl: bincountImplCPU,\n  bincountReduceImpl: bincountReduceImplCPU,\n  castImpl: castImplCPU,\n  ceilImpl: ceilImplCPU,\n  concatImpl: concatImplCPU,\n  equalImpl: equalImplCPU,\n  expImpl: expImplCPU,\n  expm1Impl: expm1ImplCPU,\n  floorImpl: floorImplCPU,\n  gatherNdImpl: gatherNdImplCPU,\n  gatherV2Impl: gatherV2ImplCPU,\n  greaterImpl: greaterImplCPU,\n  greaterEqualImpl: greaterEqualImplCPU,\n  lessImpl: lessImplCPU,\n  lessEqualImpl: lessEqualImplCPU,\n  linSpaceImpl: linSpaceImplCPU,\n  logImpl: logImplCPU,\n  maxImpl: maxImplCPU,\n  maximumImpl: maximumImplCPU,\n  minimumImpl: minimumImplCPU,\n  multiplyImpl: multiplyImplCPU,\n  negImpl: negImplCPU,\n  notEqualImpl: notEqualImplCPU,\n  prodImpl: prodImplCPU,\n  raggedGatherImpl: raggedGatherImplCPU,\n  raggedTensorToTensorImpl: raggedTensorToTensorImplCPU,\n  rangeImpl: rangeImplCPU,\n  rsqrtImpl: rsqrtImplCPU,\n  scatterImpl: scatterImplCPU,\n  sigmoidImpl: sigmoidImplCPU,\n  simpleAbsImpl: simpleAbsImplCPU,\n  sliceImpl: sliceImplCPU,\n  sparseFillEmptyRowsImpl: sparseFillEmptyRowsImplCPU,\n  sparseReshapeImpl: sparseReshapeImplCPU,\n  sparseSegmentReductionImpl: sparseSegmentReductionImplCPU,\n  sqrtImpl: sqrtImplCPU,\n  stridedSliceImpl: stridedSliceImplCPU,\n  stringNGramsImpl: stringNGramsImplCPU,\n  stringSplitImpl: stringSplitImplCPU,\n  stringToHashBucketFastImpl: stringToHashBucketFastImplCPU,\n  subImpl: subImplCPU,\n  tileImpl: tileImplCPU,\n  topKImpl: topKImplCPU,\n  transposeImpl: transposeImplCPU,\n  uniqueImpl: uniqueImplCPU\n} = shared;\nexport { addImplCPU, bincountImplCPU, bincountReduceImplCPU, castImplCPU, ceilImplCPU, concatImplCPU, equalImplCPU, expImplCPU, expm1ImplCPU, floorImplCPU, gatherNdImplCPU, gatherV2ImplCPU, greaterEqualImplCPU, greaterImplCPU, lessEqualImplCPU, lessImplCPU, linSpaceImplCPU, logImplCPU, maxImplCPU, maximumImplCPU, minimumImplCPU, multiplyImplCPU, negImplCPU, notEqualImplCPU, prodImplCPU, raggedGatherImplCPU, raggedTensorToTensorImplCPU, scatterImplCPU, sigmoidImplCPU, simpleAbsImplCPU, sliceImplCPU, sparseFillEmptyRowsImplCPU, sparseReshapeImplCPU, sparseSegmentReductionImplCPU, sqrtImplCPU, stridedSliceImplCPU, stringNGramsImplCPU, stringSplitImplCPU, stringToHashBucketFastImplCPU, subImplCPU, rangeImplCPU, rsqrtImplCPU, tileImplCPU, topKImplCPU, transposeImplCPU, uniqueImplCPU };","map":{"version":3,"names":["shared","addImpl","addImplCPU","bincountImpl","bincountImplCPU","bincountReduceImpl","bincountReduceImplCPU","castImpl","castImplCPU","ceilImpl","ceilImplCPU","concatImpl","concatImplCPU","equalImpl","equalImplCPU","expImpl","expImplCPU","expm1Impl","expm1ImplCPU","floorImpl","floorImplCPU","gatherNdImpl","gatherNdImplCPU","gatherV2Impl","gatherV2ImplCPU","greaterImpl","greaterImplCPU","greaterEqualImpl","greaterEqualImplCPU","lessImpl","lessImplCPU","lessEqualImpl","lessEqualImplCPU","linSpaceImpl","linSpaceImplCPU","logImpl","logImplCPU","maxImpl","maxImplCPU","maximumImpl","maximumImplCPU","minimumImpl","minimumImplCPU","multiplyImpl","multiplyImplCPU","negImpl","negImplCPU","notEqualImpl","notEqualImplCPU","prodImpl","prodImplCPU","raggedGatherImpl","raggedGatherImplCPU","raggedTensorToTensorImpl","raggedTensorToTensorImplCPU","rangeImpl","rangeImplCPU","rsqrtImpl","rsqrtImplCPU","scatterImpl","scatterImplCPU","sigmoidImpl","sigmoidImplCPU","simpleAbsImpl","simpleAbsImplCPU","sliceImpl","sliceImplCPU","sparseFillEmptyRowsImpl","sparseFillEmptyRowsImplCPU","sparseReshapeImpl","sparseReshapeImplCPU","sparseSegmentReductionImpl","sparseSegmentReductionImplCPU","sqrtImpl","sqrtImplCPU","stridedSliceImpl","stridedSliceImplCPU","stringNGramsImpl","stringNGramsImplCPU","stringSplitImpl","stringSplitImplCPU","stringToHashBucketFastImpl","stringToHashBucketFastImplCPU","subImpl","subImplCPU","tileImpl","tileImplCPU","topKImpl","topKImplCPU","transposeImpl","transposeImplCPU","uniqueImpl","uniqueImplCPU"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernel_utils/shared.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Import shared functionality from tfjs-backend-cpu without triggering\n// side effects.\n// tslint:disable-next-line: no-imports-from-dist\nimport * as shared from '@tensorflow/tfjs-backend-cpu/dist/shared';\nconst { addImpl: addImplCPU, bincountImpl: bincountImplCPU, bincountReduceImpl: bincountReduceImplCPU, castImpl: castImplCPU, ceilImpl: ceilImplCPU, concatImpl: concatImplCPU, equalImpl: equalImplCPU, expImpl: expImplCPU, expm1Impl: expm1ImplCPU, floorImpl: floorImplCPU, gatherNdImpl: gatherNdImplCPU, gatherV2Impl: gatherV2ImplCPU, greaterImpl: greaterImplCPU, greaterEqualImpl: greaterEqualImplCPU, lessImpl: lessImplCPU, lessEqualImpl: lessEqualImplCPU, linSpaceImpl: linSpaceImplCPU, logImpl: logImplCPU, maxImpl: maxImplCPU, maximumImpl: maximumImplCPU, minimumImpl: minimumImplCPU, multiplyImpl: multiplyImplCPU, negImpl: negImplCPU, notEqualImpl: notEqualImplCPU, prodImpl: prodImplCPU, raggedGatherImpl: raggedGatherImplCPU, raggedTensorToTensorImpl: raggedTensorToTensorImplCPU, rangeImpl: rangeImplCPU, rsqrtImpl: rsqrtImplCPU, scatterImpl: scatterImplCPU, sigmoidImpl: sigmoidImplCPU, simpleAbsImpl: simpleAbsImplCPU, sliceImpl: sliceImplCPU, sparseFillEmptyRowsImpl: sparseFillEmptyRowsImplCPU, sparseReshapeImpl: sparseReshapeImplCPU, sparseSegmentReductionImpl: sparseSegmentReductionImplCPU, sqrtImpl: sqrtImplCPU, stridedSliceImpl: stridedSliceImplCPU, stringNGramsImpl: stringNGramsImplCPU, stringSplitImpl: stringSplitImplCPU, stringToHashBucketFastImpl: stringToHashBucketFastImplCPU, subImpl: subImplCPU, tileImpl: tileImplCPU, topKImpl: topKImplCPU, transposeImpl: transposeImplCPU, uniqueImpl: uniqueImplCPU, } = shared;\nexport { addImplCPU, bincountImplCPU, bincountReduceImplCPU, castImplCPU, ceilImplCPU, concatImplCPU, equalImplCPU, expImplCPU, expm1ImplCPU, floorImplCPU, gatherNdImplCPU, gatherV2ImplCPU, greaterEqualImplCPU, greaterImplCPU, lessEqualImplCPU, lessImplCPU, linSpaceImplCPU, logImplCPU, maxImplCPU, maximumImplCPU, minimumImplCPU, multiplyImplCPU, negImplCPU, notEqualImplCPU, prodImplCPU, raggedGatherImplCPU, raggedTensorToTensorImplCPU, scatterImplCPU, sigmoidImplCPU, simpleAbsImplCPU, sliceImplCPU, sparseFillEmptyRowsImplCPU, sparseReshapeImplCPU, sparseSegmentReductionImplCPU, sqrtImplCPU, stridedSliceImplCPU, stringNGramsImplCPU, stringSplitImplCPU, stringToHashBucketFastImplCPU, subImplCPU, rangeImplCPU, rsqrtImplCPU, tileImplCPU, topKImplCPU, transposeImplCPU, uniqueImplCPU, };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,KAAKA,MAAZ,MAAwB,0CAAxB;AACA,MAAM;EAAEC,OAAO,EAAEC,UAAX;EAAuBC,YAAY,EAAEC,eAArC;EAAsDC,kBAAkB,EAAEC,qBAA1E;EAAiGC,QAAQ,EAAEC,WAA3G;EAAwHC,QAAQ,EAAEC,WAAlI;EAA+IC,UAAU,EAAEC,aAA3J;EAA0KC,SAAS,EAAEC,YAArL;EAAmMC,OAAO,EAAEC,UAA5M;EAAwNC,SAAS,EAAEC,YAAnO;EAAiPC,SAAS,EAAEC,YAA5P;EAA0QC,YAAY,EAAEC,eAAxR;EAAySC,YAAY,EAAEC,eAAvT;EAAwUC,WAAW,EAAEC,cAArV;EAAqWC,gBAAgB,EAAEC,mBAAvX;EAA4YC,QAAQ,EAAEC,WAAtZ;EAAmaC,aAAa,EAAEC,gBAAlb;EAAocC,YAAY,EAAEC,eAAld;EAAmeC,OAAO,EAAEC,UAA5e;EAAwfC,OAAO,EAAEC,UAAjgB;EAA6gBC,WAAW,EAAEC,cAA1hB;EAA0iBC,WAAW,EAAEC,cAAvjB;EAAukBC,YAAY,EAAEC,eAArlB;EAAsmBC,OAAO,EAAEC,UAA/mB;EAA2nBC,YAAY,EAAEC,eAAzoB;EAA0pBC,QAAQ,EAAEC,WAApqB;EAAirBC,gBAAgB,EAAEC,mBAAnsB;EAAwtBC,wBAAwB,EAAEC,2BAAlvB;EAA+wBC,SAAS,EAAEC,YAA1xB;EAAwyBC,SAAS,EAAEC,YAAnzB;EAAi0BC,WAAW,EAAEC,cAA90B;EAA81BC,WAAW,EAAEC,cAA32B;EAA23BC,aAAa,EAAEC,gBAA14B;EAA45BC,SAAS,EAAEC,YAAv6B;EAAq7BC,uBAAuB,EAAEC,0BAA98B;EAA0+BC,iBAAiB,EAAEC,oBAA7/B;EAAmhCC,0BAA0B,EAAEC,6BAA/iC;EAA8kCC,QAAQ,EAAEC,WAAxlC;EAAqmCC,gBAAgB,EAAEC,mBAAvnC;EAA4oCC,gBAAgB,EAAEC,mBAA9pC;EAAmrCC,eAAe,EAAEC,kBAApsC;EAAwtCC,0BAA0B,EAAEC,6BAApvC;EAAmxCC,OAAO,EAAEC,UAA5xC;EAAwyCC,QAAQ,EAAEC,WAAlzC;EAA+zCC,QAAQ,EAAEC,WAAz0C;EAAs1CC,aAAa,EAAEC,gBAAr2C;EAAu3CC,UAAU,EAAEC;AAAn4C,IAAs5C5F,MAA55C;AACA,SAASE,UAAT,EAAqBE,eAArB,EAAsCE,qBAAtC,EAA6DE,WAA7D,EAA0EE,WAA1E,EAAuFE,aAAvF,EAAsGE,YAAtG,EAAoHE,UAApH,EAAgIE,YAAhI,EAA8IE,YAA9I,EAA4JE,eAA5J,EAA6KE,eAA7K,EAA8LI,mBAA9L,EAAmNF,cAAnN,EAAmOM,gBAAnO,EAAqPF,WAArP,EAAkQI,eAAlQ,EAAmRE,UAAnR,EAA+RE,UAA/R,EAA2SE,cAA3S,EAA2TE,cAA3T,EAA2UE,eAA3U,EAA4VE,UAA5V,EAAwWE,eAAxW,EAAyXE,WAAzX,EAAsYE,mBAAtY,EAA2ZE,2BAA3Z,EAAwbM,cAAxb,EAAwcE,cAAxc,EAAwdE,gBAAxd,EAA0eE,YAA1e,EAAwfE,0BAAxf,EAAohBE,oBAAphB,EAA0iBE,6BAA1iB,EAAykBE,WAAzkB,EAAslBE,mBAAtlB,EAA2mBE,mBAA3mB,EAAgoBE,kBAAhoB,EAAopBE,6BAAppB,EAAmrBE,UAAnrB,EAA+rB5B,YAA/rB,EAA6sBE,YAA7sB,EAA2tB4B,WAA3tB,EAAwuBE,WAAxuB,EAAqvBE,gBAArvB,EAAuwBE,aAAvwB"},"metadata":{},"sourceType":"module"}