{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Transpose } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { transposeImpl } from './Transpose_impl';\nexport function transpose(args) {\n  const {\n    inputs,\n    attrs,\n    backend\n  } = args;\n  const {\n    x\n  } = inputs;\n  const {\n    perm\n  } = attrs;\n  assertNotComplex(x, 'transpose');\n  const xRank = x.shape.length;\n  const newShape = new Array(xRank);\n\n  for (let i = 0; i < newShape.length; i++) {\n    newShape[i] = x.shape[perm[i]];\n  }\n\n  const values = backend.data.get(x.dataId).values;\n  const result = transposeImpl(values, x.shape, x.dtype, perm, newShape);\n  const dataId = backend.write(result, newShape, x.dtype);\n  return {\n    dataId,\n    shape: newShape,\n    dtype: x.dtype\n  };\n}\nexport const transposeConfig = {\n  kernelName: Transpose,\n  backendName: 'cpu',\n  kernelFunc: transpose\n};","map":{"version":3,"names":["Transpose","assertNotComplex","transposeImpl","transpose","args","inputs","attrs","backend","x","perm","xRank","shape","length","newShape","Array","i","values","data","get","dataId","result","dtype","write","transposeConfig","kernelName","backendName","kernelFunc"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Transpose.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Transpose } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { transposeImpl } from './Transpose_impl';\nexport function transpose(args) {\n    const { inputs, attrs, backend } = args;\n    const { x } = inputs;\n    const { perm } = attrs;\n    assertNotComplex(x, 'transpose');\n    const xRank = x.shape.length;\n    const newShape = new Array(xRank);\n    for (let i = 0; i < newShape.length; i++) {\n        newShape[i] = x.shape[perm[i]];\n    }\n    const values = backend.data.get(x.dataId).values;\n    const result = transposeImpl(values, x.shape, x.dtype, perm, newShape);\n    const dataId = backend.write(result, newShape, x.dtype);\n    return { dataId, shape: newShape, dtype: x.dtype };\n}\nexport const transposeConfig = {\n    kernelName: Transpose,\n    backendName: 'cpu',\n    kernelFunc: transpose\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,uBAA1B;AACA,SAASC,gBAAT,QAAiC,aAAjC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;EAC5B,MAAM;IAAEC,MAAF;IAAUC,KAAV;IAAiBC;EAAjB,IAA6BH,IAAnC;EACA,MAAM;IAAEI;EAAF,IAAQH,MAAd;EACA,MAAM;IAAEI;EAAF,IAAWH,KAAjB;EACAL,gBAAgB,CAACO,CAAD,EAAI,WAAJ,CAAhB;EACA,MAAME,KAAK,GAAGF,CAAC,CAACG,KAAF,CAAQC,MAAtB;EACA,MAAMC,QAAQ,GAAG,IAAIC,KAAJ,CAAUJ,KAAV,CAAjB;;EACA,KAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACD,MAA7B,EAAqCG,CAAC,EAAtC,EAA0C;IACtCF,QAAQ,CAACE,CAAD,CAAR,GAAcP,CAAC,CAACG,KAAF,CAAQF,IAAI,CAACM,CAAD,CAAZ,CAAd;EACH;;EACD,MAAMC,MAAM,GAAGT,OAAO,CAACU,IAAR,CAAaC,GAAb,CAAiBV,CAAC,CAACW,MAAnB,EAA2BH,MAA1C;EACA,MAAMI,MAAM,GAAGlB,aAAa,CAACc,MAAD,EAASR,CAAC,CAACG,KAAX,EAAkBH,CAAC,CAACa,KAApB,EAA2BZ,IAA3B,EAAiCI,QAAjC,CAA5B;EACA,MAAMM,MAAM,GAAGZ,OAAO,CAACe,KAAR,CAAcF,MAAd,EAAsBP,QAAtB,EAAgCL,CAAC,CAACa,KAAlC,CAAf;EACA,OAAO;IAAEF,MAAF;IAAUR,KAAK,EAAEE,QAAjB;IAA2BQ,KAAK,EAAEb,CAAC,CAACa;EAApC,CAAP;AACH;AACD,OAAO,MAAME,eAAe,GAAG;EAC3BC,UAAU,EAAExB,SADe;EAE3ByB,WAAW,EAAE,KAFc;EAG3BC,UAAU,EAAEvB;AAHe,CAAxB"},"metadata":{},"sourceType":"module"}