{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Mod } from '@tensorflow/tfjs-core';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nimport { binaryKernelFunc } from '../utils/binary_utils';\nexport const modImpl = createSimpleBinaryKernelImpl((aValue, bValue) => {\n  const rem = aValue % bValue;\n\n  if (aValue < 0 && bValue < 0 || aValue >= 0 && bValue >= 0) {\n    return rem;\n  } else {\n    return (rem + bValue) % bValue;\n  }\n});\nexport const mod = binaryKernelFunc(Mod, modImpl);\nexport const modConfig = {\n  kernelName: Mod,\n  backendName: 'cpu',\n  kernelFunc: mod\n};","map":{"version":3,"names":["Mod","createSimpleBinaryKernelImpl","binaryKernelFunc","modImpl","aValue","bValue","rem","mod","modConfig","kernelName","backendName","kernelFunc"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Mod.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Mod } from '@tensorflow/tfjs-core';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nimport { binaryKernelFunc } from '../utils/binary_utils';\nexport const modImpl = createSimpleBinaryKernelImpl(((aValue, bValue) => {\n    const rem = aValue % bValue;\n    if ((aValue < 0 && bValue < 0) || (aValue >= 0 && bValue >= 0)) {\n        return rem;\n    }\n    else {\n        return (rem + bValue) % bValue;\n    }\n}));\nexport const mod = binaryKernelFunc(Mod, modImpl);\nexport const modConfig = {\n    kernelName: Mod,\n    backendName: 'cpu',\n    kernelFunc: mod\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,GAAT,QAAoB,uBAApB;AACA,SAASC,4BAAT,QAA6C,sBAA7C;AACA,SAASC,gBAAT,QAAiC,uBAAjC;AACA,OAAO,MAAMC,OAAO,GAAGF,4BAA4B,CAAE,CAACG,MAAD,EAASC,MAAT,KAAoB;EACrE,MAAMC,GAAG,GAAGF,MAAM,GAAGC,MAArB;;EACA,IAAKD,MAAM,GAAG,CAAT,IAAcC,MAAM,GAAG,CAAxB,IAA+BD,MAAM,IAAI,CAAV,IAAeC,MAAM,IAAI,CAA5D,EAAgE;IAC5D,OAAOC,GAAP;EACH,CAFD,MAGK;IACD,OAAO,CAACA,GAAG,GAAGD,MAAP,IAAiBA,MAAxB;EACH;AACJ,CARkD,CAA5C;AASP,OAAO,MAAME,GAAG,GAAGL,gBAAgB,CAACF,GAAD,EAAMG,OAAN,CAA5B;AACP,OAAO,MAAMK,SAAS,GAAG;EACrBC,UAAU,EAAET,GADS;EAErBU,WAAW,EAAE,KAFQ;EAGrBC,UAAU,EAAEJ;AAHS,CAAlB"},"metadata":{},"sourceType":"module"}