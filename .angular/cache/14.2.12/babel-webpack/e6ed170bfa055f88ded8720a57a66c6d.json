{"ast":null,"code":"/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { StringToHashBucketFast } from '@tensorflow/tfjs-core';\nimport { stringToHashBucketFastImpl } from './StringToHashBucketFast_impl';\nexport function stringToHashBucketFast(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    numBuckets\n  } = attrs;\n  const {\n    input\n  } = inputs;\n\n  if (input.dtype !== 'string') {\n    throw new Error('Input must be of datatype string');\n  }\n\n  if (numBuckets <= 0) {\n    throw new Error(`Number of buckets must be at least 1`);\n  }\n\n  const $input = backend.data.get(input.dataId).values;\n  const output = stringToHashBucketFastImpl($input, numBuckets);\n  return backend.makeTensorInfo(input.shape, 'int32', output);\n}\nexport const stringToHashBucketFastConfig = {\n  kernelName: StringToHashBucketFast,\n  backendName: 'cpu',\n  kernelFunc: stringToHashBucketFast\n};","map":{"version":3,"names":["StringToHashBucketFast","stringToHashBucketFastImpl","stringToHashBucketFast","args","inputs","backend","attrs","numBuckets","input","dtype","Error","$input","data","get","dataId","values","output","makeTensorInfo","shape","stringToHashBucketFastConfig","kernelName","backendName","kernelFunc"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StringToHashBucketFast.js"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { StringToHashBucketFast } from '@tensorflow/tfjs-core';\nimport { stringToHashBucketFastImpl } from './StringToHashBucketFast_impl';\nexport function stringToHashBucketFast(args) {\n    const { inputs, backend, attrs } = args;\n    const { numBuckets } = attrs;\n    const { input } = inputs;\n    if (input.dtype !== 'string') {\n        throw new Error('Input must be of datatype string');\n    }\n    if (numBuckets <= 0) {\n        throw new Error(`Number of buckets must be at least 1`);\n    }\n    const $input = backend.data.get(input.dataId).values;\n    const output = stringToHashBucketFastImpl($input, numBuckets);\n    return backend.makeTensorInfo(input.shape, 'int32', output);\n}\nexport const stringToHashBucketFastConfig = {\n    kernelName: StringToHashBucketFast,\n    backendName: 'cpu',\n    kernelFunc: stringToHashBucketFast,\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,sBAAT,QAAuC,uBAAvC;AACA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,OAAO,SAASC,sBAAT,CAAgCC,IAAhC,EAAsC;EACzC,MAAM;IAAEC,MAAF;IAAUC,OAAV;IAAmBC;EAAnB,IAA6BH,IAAnC;EACA,MAAM;IAAEI;EAAF,IAAiBD,KAAvB;EACA,MAAM;IAAEE;EAAF,IAAYJ,MAAlB;;EACA,IAAII,KAAK,CAACC,KAAN,KAAgB,QAApB,EAA8B;IAC1B,MAAM,IAAIC,KAAJ,CAAU,kCAAV,CAAN;EACH;;EACD,IAAIH,UAAU,IAAI,CAAlB,EAAqB;IACjB,MAAM,IAAIG,KAAJ,CAAW,sCAAX,CAAN;EACH;;EACD,MAAMC,MAAM,GAAGN,OAAO,CAACO,IAAR,CAAaC,GAAb,CAAiBL,KAAK,CAACM,MAAvB,EAA+BC,MAA9C;EACA,MAAMC,MAAM,GAAGf,0BAA0B,CAACU,MAAD,EAASJ,UAAT,CAAzC;EACA,OAAOF,OAAO,CAACY,cAAR,CAAuBT,KAAK,CAACU,KAA7B,EAAoC,OAApC,EAA6CF,MAA7C,CAAP;AACH;AACD,OAAO,MAAMG,4BAA4B,GAAG;EACxCC,UAAU,EAAEpB,sBAD4B;EAExCqB,WAAW,EAAE,KAF2B;EAGxCC,UAAU,EAAEpB;AAH4B,CAArC"},"metadata":{},"sourceType":"module"}