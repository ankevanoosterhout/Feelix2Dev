{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/* original source: keras/regularizers.py */\nimport * as tfc from '@tensorflow/tfjs-core';\nimport { abs, add, serialization, sum, tidy, zeros } from '@tensorflow/tfjs-core';\nimport * as K from './backend/tfjs_backend';\nimport { deserializeKerasObject, serializeKerasObject } from './utils/generic_utils';\n\nfunction assertObjectArgs(args) {\n  if (args != null && typeof args !== 'object') {\n    throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an ` + `object, but received: ${args}`);\n  }\n}\n/**\n * Regularizer base class.\n */\n\n\nexport class Regularizer extends serialization.Serializable {}\nexport class L1L2 extends Regularizer {\n  constructor(args) {\n    super();\n    assertObjectArgs(args);\n    this.l1 = args == null || args.l1 == null ? 0.01 : args.l1;\n    this.l2 = args == null || args.l2 == null ? 0.01 : args.l2;\n    this.hasL1 = this.l1 !== 0;\n    this.hasL2 = this.l2 !== 0;\n  }\n  /**\n   * Porting note: Renamed from __call__.\n   * @param x Variable of which to calculate the regularization score.\n   */\n\n\n  apply(x) {\n    return tidy(() => {\n      let regularization = zeros([1]);\n\n      if (this.hasL1) {\n        regularization = add(regularization, sum(tfc.mul(this.l1, abs(x))));\n      }\n\n      if (this.hasL2) {\n        regularization = add(regularization, sum(tfc.mul(this.l2, K.square(x))));\n      }\n\n      return tfc.reshape(regularization, []);\n    });\n  }\n\n  getConfig() {\n    return {\n      'l1': this.l1,\n      'l2': this.l2\n    };\n  }\n  /** @nocollapse */\n\n\n  static fromConfig(cls, config) {\n    return new cls({\n      l1: config['l1'],\n      l2: config['l2']\n    });\n  }\n\n}\n/** @nocollapse */\n\nL1L2.className = 'L1L2';\nserialization.registerClass(L1L2);\nexport function l1(args) {\n  assertObjectArgs(args);\n  return new L1L2({\n    l1: args != null ? args.l1 : null,\n    l2: 0\n  });\n}\nexport function l2(args) {\n  assertObjectArgs(args);\n  return new L1L2({\n    l2: args != null ? args.l2 : null,\n    l1: 0\n  });\n} // Maps the JavaScript-like identifier keys to the corresponding keras symbols.\n\nexport const REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP = {\n  'l1l2': 'L1L2'\n};\nexport function serializeRegularizer(constraint) {\n  return serializeKerasObject(constraint);\n}\nexport function deserializeRegularizer(config, customObjects = {}) {\n  return deserializeKerasObject(config, serialization.SerializationMap.getMap().classNameMap, customObjects, 'regularizer');\n}\nexport function getRegularizer(identifier) {\n  if (identifier == null) {\n    return null;\n  }\n\n  if (typeof identifier === 'string') {\n    const className = identifier in REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP ? REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP[identifier] : identifier;\n    const config = {\n      className,\n      config: {}\n    };\n    return deserializeRegularizer(config);\n  } else if (identifier instanceof Regularizer) {\n    return identifier;\n  } else {\n    return deserializeRegularizer(identifier);\n  }\n}","map":{"version":3,"names":["tfc","abs","add","serialization","sum","tidy","zeros","K","deserializeKerasObject","serializeKerasObject","assertObjectArgs","args","Error","Regularizer","Serializable","L1L2","constructor","l1","l2","hasL1","hasL2","apply","x","regularization","mul","square","reshape","getConfig","fromConfig","cls","config","className","registerClass","REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP","serializeRegularizer","constraint","deserializeRegularizer","customObjects","SerializationMap","getMap","classNameMap","getRegularizer","identifier"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-layers/dist/regularizers.js"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n/* original source: keras/regularizers.py */\nimport * as tfc from '@tensorflow/tfjs-core';\nimport { abs, add, serialization, sum, tidy, zeros } from '@tensorflow/tfjs-core';\nimport * as K from './backend/tfjs_backend';\nimport { deserializeKerasObject, serializeKerasObject } from './utils/generic_utils';\nfunction assertObjectArgs(args) {\n    if (args != null && typeof args !== 'object') {\n        throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an ` +\n            `object, but received: ${args}`);\n    }\n}\n/**\n * Regularizer base class.\n */\nexport class Regularizer extends serialization.Serializable {\n}\nexport class L1L2 extends Regularizer {\n    constructor(args) {\n        super();\n        assertObjectArgs(args);\n        this.l1 = args == null || args.l1 == null ? 0.01 : args.l1;\n        this.l2 = args == null || args.l2 == null ? 0.01 : args.l2;\n        this.hasL1 = this.l1 !== 0;\n        this.hasL2 = this.l2 !== 0;\n    }\n    /**\n     * Porting note: Renamed from __call__.\n     * @param x Variable of which to calculate the regularization score.\n     */\n    apply(x) {\n        return tidy(() => {\n            let regularization = zeros([1]);\n            if (this.hasL1) {\n                regularization = add(regularization, sum(tfc.mul(this.l1, abs(x))));\n            }\n            if (this.hasL2) {\n                regularization =\n                    add(regularization, sum(tfc.mul(this.l2, K.square(x))));\n            }\n            return tfc.reshape(regularization, []);\n        });\n    }\n    getConfig() {\n        return { 'l1': this.l1, 'l2': this.l2 };\n    }\n    /** @nocollapse */\n    static fromConfig(cls, config) {\n        return new cls({ l1: config['l1'], l2: config['l2'] });\n    }\n}\n/** @nocollapse */\nL1L2.className = 'L1L2';\nserialization.registerClass(L1L2);\nexport function l1(args) {\n    assertObjectArgs(args);\n    return new L1L2({ l1: args != null ? args.l1 : null, l2: 0 });\n}\nexport function l2(args) {\n    assertObjectArgs(args);\n    return new L1L2({ l2: args != null ? args.l2 : null, l1: 0 });\n}\n// Maps the JavaScript-like identifier keys to the corresponding keras symbols.\nexport const REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP = {\n    'l1l2': 'L1L2'\n};\nexport function serializeRegularizer(constraint) {\n    return serializeKerasObject(constraint);\n}\nexport function deserializeRegularizer(config, customObjects = {}) {\n    return deserializeKerasObject(config, serialization.SerializationMap.getMap().classNameMap, customObjects, 'regularizer');\n}\nexport function getRegularizer(identifier) {\n    if (identifier == null) {\n        return null;\n    }\n    if (typeof identifier === 'string') {\n        const className = identifier in REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP ?\n            REGULARIZER_IDENTIFIER_REGISTRY_SYMBOL_MAP[identifier] :\n            identifier;\n        const config = { className, config: {} };\n        return deserializeRegularizer(config);\n    }\n    else if (identifier instanceof Regularizer) {\n        return identifier;\n    }\n    else {\n        return deserializeRegularizer(identifier);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}