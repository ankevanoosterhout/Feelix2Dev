{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Add } from '../kernel_names';\nimport * as broadcast_util from '../ops/broadcast_util';\nimport { reshape } from '../ops/reshape';\nimport { sum } from '../ops/sum';\nexport const addGradConfig = {\n  kernelName: Add,\n  inputsToSave: ['a', 'b'],\n  gradFunc: (dy, saved) => {\n    const [a, b] = saved;\n    const outShape = broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n\n    const derA = () => {\n      let res = dy;\n      const reduceAxes = broadcast_util.getReductionAxes(a.shape, outShape);\n\n      if (reduceAxes.length > 0) {\n        res = sum(res, reduceAxes);\n      }\n\n      return reshape(res, a.shape);\n    };\n\n    const derB = () => {\n      let res = dy;\n      const reduceAxes = broadcast_util.getReductionAxes(b.shape, outShape);\n\n      if (reduceAxes.length > 0) {\n        res = sum(res, reduceAxes);\n      }\n\n      return reshape(res, b.shape);\n    };\n\n    return {\n      a: derA,\n      b: derB\n    };\n  }\n};","map":{"version":3,"names":["Add","broadcast_util","reshape","sum","addGradConfig","kernelName","inputsToSave","gradFunc","dy","saved","a","b","outShape","assertAndGetBroadcastShape","shape","derA","res","reduceAxes","getReductionAxes","length","derB"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-core/dist/gradients/Add_grad.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Add } from '../kernel_names';\nimport * as broadcast_util from '../ops/broadcast_util';\nimport { reshape } from '../ops/reshape';\nimport { sum } from '../ops/sum';\nexport const addGradConfig = {\n    kernelName: Add,\n    inputsToSave: ['a', 'b'],\n    gradFunc: (dy, saved) => {\n        const [a, b] = saved;\n        const outShape = broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n        const derA = () => {\n            let res = dy;\n            const reduceAxes = broadcast_util.getReductionAxes(a.shape, outShape);\n            if (reduceAxes.length > 0) {\n                res = sum(res, reduceAxes);\n            }\n            return reshape(res, a.shape);\n        };\n        const derB = () => {\n            let res = dy;\n            const reduceAxes = broadcast_util.getReductionAxes(b.shape, outShape);\n            if (reduceAxes.length > 0) {\n                res = sum(res, reduceAxes);\n            }\n            return reshape(res, b.shape);\n        };\n        return { a: derA, b: derB };\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,GAAT,QAAoB,iBAApB;AACA,OAAO,KAAKC,cAAZ,MAAgC,uBAAhC;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,OAAO,MAAMC,aAAa,GAAG;EACzBC,UAAU,EAAEL,GADa;EAEzBM,YAAY,EAAE,CAAC,GAAD,EAAM,GAAN,CAFW;EAGzBC,QAAQ,EAAE,CAACC,EAAD,EAAKC,KAAL,KAAe;IACrB,MAAM,CAACC,CAAD,EAAIC,CAAJ,IAASF,KAAf;IACA,MAAMG,QAAQ,GAAGX,cAAc,CAACY,0BAAf,CAA0CH,CAAC,CAACI,KAA5C,EAAmDH,CAAC,CAACG,KAArD,CAAjB;;IACA,MAAMC,IAAI,GAAG,MAAM;MACf,IAAIC,GAAG,GAAGR,EAAV;MACA,MAAMS,UAAU,GAAGhB,cAAc,CAACiB,gBAAf,CAAgCR,CAAC,CAACI,KAAlC,EAAyCF,QAAzC,CAAnB;;MACA,IAAIK,UAAU,CAACE,MAAX,GAAoB,CAAxB,EAA2B;QACvBH,GAAG,GAAGb,GAAG,CAACa,GAAD,EAAMC,UAAN,CAAT;MACH;;MACD,OAAOf,OAAO,CAACc,GAAD,EAAMN,CAAC,CAACI,KAAR,CAAd;IACH,CAPD;;IAQA,MAAMM,IAAI,GAAG,MAAM;MACf,IAAIJ,GAAG,GAAGR,EAAV;MACA,MAAMS,UAAU,GAAGhB,cAAc,CAACiB,gBAAf,CAAgCP,CAAC,CAACG,KAAlC,EAAyCF,QAAzC,CAAnB;;MACA,IAAIK,UAAU,CAACE,MAAX,GAAoB,CAAxB,EAA2B;QACvBH,GAAG,GAAGb,GAAG,CAACa,GAAD,EAAMC,UAAN,CAAT;MACH;;MACD,OAAOf,OAAO,CAACc,GAAD,EAAML,CAAC,CAACG,KAAR,CAAd;IACH,CAPD;;IAQA,OAAO;MAAEJ,CAAC,EAAEK,IAAL;MAAWJ,CAAC,EAAES;IAAd,CAAP;EACH;AAvBwB,CAAtB"},"metadata":{},"sourceType":"module"}