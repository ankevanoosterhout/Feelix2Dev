{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sum } from '../kernel_names';\nimport { mul } from '../ops/mul';\nimport { ones } from '../ops/ones';\nimport { reshape } from '../ops/reshape';\nimport { parseAxisParam } from '../util';\nexport const sumGradConfig = {\n  kernelName: Sum,\n  inputsToSave: ['x'],\n  gradFunc: (dy, saved, attrs) => {\n    const [x] = saved;\n    const expandedDyShape = x.shape.slice();\n    const {\n      axis\n    } = attrs;\n    const axes = parseAxisParam(axis, x.shape);\n    axes.forEach(axis => {\n      expandedDyShape[axis] = 1;\n    });\n    const expandedDy = reshape(dy, expandedDyShape);\n    const derX = mul(expandedDy, ones(x.shape, 'float32'));\n    return {\n      x: () => derX\n    };\n  }\n};","map":{"version":3,"names":["Sum","mul","ones","reshape","parseAxisParam","sumGradConfig","kernelName","inputsToSave","gradFunc","dy","saved","attrs","x","expandedDyShape","shape","slice","axis","axes","forEach","expandedDy","derX"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-core/dist/gradients/Sum_grad.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Sum } from '../kernel_names';\nimport { mul } from '../ops/mul';\nimport { ones } from '../ops/ones';\nimport { reshape } from '../ops/reshape';\nimport { parseAxisParam } from '../util';\nexport const sumGradConfig = {\n    kernelName: Sum,\n    inputsToSave: ['x'],\n    gradFunc: (dy, saved, attrs) => {\n        const [x] = saved;\n        const expandedDyShape = x.shape.slice();\n        const { axis } = attrs;\n        const axes = parseAxisParam(axis, x.shape);\n        axes.forEach(axis => {\n            expandedDyShape[axis] = 1;\n        });\n        const expandedDy = reshape(dy, expandedDyShape);\n        const derX = mul(expandedDy, ones(x.shape, 'float32'));\n        return { x: () => derX };\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,GAAT,QAAoB,iBAApB;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,cAAT,QAA+B,SAA/B;AACA,OAAO,MAAMC,aAAa,GAAG;EACzBC,UAAU,EAAEN,GADa;EAEzBO,YAAY,EAAE,CAAC,GAAD,CAFW;EAGzBC,QAAQ,EAAE,CAACC,EAAD,EAAKC,KAAL,EAAYC,KAAZ,KAAsB;IAC5B,MAAM,CAACC,CAAD,IAAMF,KAAZ;IACA,MAAMG,eAAe,GAAGD,CAAC,CAACE,KAAF,CAAQC,KAAR,EAAxB;IACA,MAAM;MAAEC;IAAF,IAAWL,KAAjB;IACA,MAAMM,IAAI,GAAGb,cAAc,CAACY,IAAD,EAAOJ,CAAC,CAACE,KAAT,CAA3B;IACAG,IAAI,CAACC,OAAL,CAAaF,IAAI,IAAI;MACjBH,eAAe,CAACG,IAAD,CAAf,GAAwB,CAAxB;IACH,CAFD;IAGA,MAAMG,UAAU,GAAGhB,OAAO,CAACM,EAAD,EAAKI,eAAL,CAA1B;IACA,MAAMO,IAAI,GAAGnB,GAAG,CAACkB,UAAD,EAAajB,IAAI,CAACU,CAAC,CAACE,KAAH,EAAU,SAAV,CAAjB,CAAhB;IACA,OAAO;MAAEF,CAAC,EAAE,MAAMQ;IAAX,CAAP;EACH;AAdwB,CAAtB"},"metadata":{},"sourceType":"module"}