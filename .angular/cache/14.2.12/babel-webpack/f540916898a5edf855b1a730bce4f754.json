{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Fill, util } from '@tensorflow/tfjs-core';\nexport function fill(args) {\n  const {\n    backend,\n    attrs\n  } = args;\n  const {\n    shape,\n    value,\n    dtype\n  } = attrs;\n  const $dtype = dtype || util.inferDtype(value);\n  const values = util.getArrayFromDType($dtype, util.sizeFromShape(shape));\n  fillValues(values, value, $dtype);\n  return backend.makeTensorInfo(shape, $dtype, values);\n}\nexport const fillConfig = {\n  kernelName: Fill,\n  backendName: 'cpu',\n  kernelFunc: fill\n};\n\nfunction fillValues(values, value, dtype) {\n  if (dtype === 'string') {\n    values.fill(value);\n  } else {\n    values.fill(value);\n  }\n}","map":{"version":3,"names":["Fill","util","fill","args","backend","attrs","shape","value","dtype","$dtype","inferDtype","values","getArrayFromDType","sizeFromShape","fillValues","makeTensorInfo","fillConfig","kernelName","backendName","kernelFunc"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Fill.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Fill, util } from '@tensorflow/tfjs-core';\nexport function fill(args) {\n    const { backend, attrs } = args;\n    const { shape, value, dtype } = attrs;\n    const $dtype = dtype || util.inferDtype(value);\n    const values = util.getArrayFromDType($dtype, util.sizeFromShape(shape));\n    fillValues(values, value, $dtype);\n    return backend.makeTensorInfo(shape, $dtype, values);\n}\nexport const fillConfig = {\n    kernelName: Fill,\n    backendName: 'cpu',\n    kernelFunc: fill\n};\nfunction fillValues(values, value, dtype) {\n    if (dtype === 'string') {\n        values.fill(value);\n    }\n    else {\n        values.fill(value);\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,IAAT,EAAeC,IAAf,QAA2B,uBAA3B;AACA,OAAO,SAASC,IAAT,CAAcC,IAAd,EAAoB;EACvB,MAAM;IAAEC,OAAF;IAAWC;EAAX,IAAqBF,IAA3B;EACA,MAAM;IAAEG,KAAF;IAASC,KAAT;IAAgBC;EAAhB,IAA0BH,KAAhC;EACA,MAAMI,MAAM,GAAGD,KAAK,IAAIP,IAAI,CAACS,UAAL,CAAgBH,KAAhB,CAAxB;EACA,MAAMI,MAAM,GAAGV,IAAI,CAACW,iBAAL,CAAuBH,MAAvB,EAA+BR,IAAI,CAACY,aAAL,CAAmBP,KAAnB,CAA/B,CAAf;EACAQ,UAAU,CAACH,MAAD,EAASJ,KAAT,EAAgBE,MAAhB,CAAV;EACA,OAAOL,OAAO,CAACW,cAAR,CAAuBT,KAAvB,EAA8BG,MAA9B,EAAsCE,MAAtC,CAAP;AACH;AACD,OAAO,MAAMK,UAAU,GAAG;EACtBC,UAAU,EAAEjB,IADU;EAEtBkB,WAAW,EAAE,KAFS;EAGtBC,UAAU,EAAEjB;AAHU,CAAnB;;AAKP,SAASY,UAAT,CAAoBH,MAApB,EAA4BJ,KAA5B,EAAmCC,KAAnC,EAA0C;EACtC,IAAIA,KAAK,KAAK,QAAd,EAAwB;IACpBG,MAAM,CAACT,IAAP,CAAYK,KAAZ;EACH,CAFD,MAGK;IACDI,MAAM,CAACT,IAAP,CAAYK,KAAZ;EACH;AACJ"},"metadata":{},"sourceType":"module"}