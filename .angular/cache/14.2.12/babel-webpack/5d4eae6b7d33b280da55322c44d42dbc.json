{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { NonMaxSuppressionV3 } from '../../kernel_names';\nimport { convertToTensor } from '../../tensor_util_env';\nimport { nonMaxSuppSanityCheck } from '../nonmax_util';\nimport { op } from '../operation';\n/**\n * Performs non maximum suppression of bounding boxes based on\n * iou (intersection over union).\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @return A 1D tensor with the selected box indices.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\n\nfunction nonMaxSuppression_(boxes, scores, maxOutputSize, iouThreshold = 0.5, scoreThreshold = Number.NEGATIVE_INFINITY) {\n  const $boxes = convertToTensor(boxes, 'boxes', 'nonMaxSuppression', 'float32');\n  const $scores = convertToTensor(scores, 'scores', 'nonMaxSuppression', 'float32');\n  const inputs = nonMaxSuppSanityCheck($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold);\n  maxOutputSize = inputs.maxOutputSize;\n  iouThreshold = inputs.iouThreshold;\n  scoreThreshold = inputs.scoreThreshold;\n  const attrs = {\n    maxOutputSize,\n    iouThreshold,\n    scoreThreshold\n  };\n  return ENGINE.runKernel(NonMaxSuppressionV3, {\n    boxes: $boxes,\n    scores: $scores\n  }, attrs);\n}\n\nexport const nonMaxSuppression = op({\n  nonMaxSuppression_\n});","map":{"version":3,"names":["ENGINE","NonMaxSuppressionV3","convertToTensor","nonMaxSuppSanityCheck","op","nonMaxSuppression_","boxes","scores","maxOutputSize","iouThreshold","scoreThreshold","Number","NEGATIVE_INFINITY","$boxes","$scores","inputs","attrs","runKernel","nonMaxSuppression"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-core/dist/ops/image/non_max_suppression.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../../engine';\nimport { NonMaxSuppressionV3 } from '../../kernel_names';\nimport { convertToTensor } from '../../tensor_util_env';\nimport { nonMaxSuppSanityCheck } from '../nonmax_util';\nimport { op } from '../operation';\n/**\n * Performs non maximum suppression of bounding boxes based on\n * iou (intersection over union).\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @return A 1D tensor with the selected box indices.\n *\n * @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'}\n */\nfunction nonMaxSuppression_(boxes, scores, maxOutputSize, iouThreshold = 0.5, scoreThreshold = Number.NEGATIVE_INFINITY) {\n    const $boxes = convertToTensor(boxes, 'boxes', 'nonMaxSuppression', 'float32');\n    const $scores = convertToTensor(scores, 'scores', 'nonMaxSuppression', 'float32');\n    const inputs = nonMaxSuppSanityCheck($boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold);\n    maxOutputSize = inputs.maxOutputSize;\n    iouThreshold = inputs.iouThreshold;\n    scoreThreshold = inputs.scoreThreshold;\n    const attrs = { maxOutputSize, iouThreshold, scoreThreshold };\n    return ENGINE.runKernel(NonMaxSuppressionV3, { boxes: $boxes, scores: $scores }, attrs);\n}\nexport const nonMaxSuppression = op({ nonMaxSuppression_ });\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAT,QAAuB,cAAvB;AACA,SAASC,mBAAT,QAAoC,oBAApC;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,SAASC,qBAAT,QAAsC,gBAAtC;AACA,SAASC,EAAT,QAAmB,cAAnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmCC,MAAnC,EAA2CC,aAA3C,EAA0DC,YAAY,GAAG,GAAzE,EAA8EC,cAAc,GAAGC,MAAM,CAACC,iBAAtG,EAAyH;EACrH,MAAMC,MAAM,GAAGX,eAAe,CAACI,KAAD,EAAQ,OAAR,EAAiB,mBAAjB,EAAsC,SAAtC,CAA9B;EACA,MAAMQ,OAAO,GAAGZ,eAAe,CAACK,MAAD,EAAS,QAAT,EAAmB,mBAAnB,EAAwC,SAAxC,CAA/B;EACA,MAAMQ,MAAM,GAAGZ,qBAAqB,CAACU,MAAD,EAASC,OAAT,EAAkBN,aAAlB,EAAiCC,YAAjC,EAA+CC,cAA/C,CAApC;EACAF,aAAa,GAAGO,MAAM,CAACP,aAAvB;EACAC,YAAY,GAAGM,MAAM,CAACN,YAAtB;EACAC,cAAc,GAAGK,MAAM,CAACL,cAAxB;EACA,MAAMM,KAAK,GAAG;IAAER,aAAF;IAAiBC,YAAjB;IAA+BC;EAA/B,CAAd;EACA,OAAOV,MAAM,CAACiB,SAAP,CAAiBhB,mBAAjB,EAAsC;IAAEK,KAAK,EAAEO,MAAT;IAAiBN,MAAM,EAAEO;EAAzB,CAAtC,EAA0EE,KAA1E,CAAP;AACH;;AACD,OAAO,MAAME,iBAAiB,GAAGd,EAAE,CAAC;EAAEC;AAAF,CAAD,CAA5B"},"metadata":{},"sourceType":"module"}