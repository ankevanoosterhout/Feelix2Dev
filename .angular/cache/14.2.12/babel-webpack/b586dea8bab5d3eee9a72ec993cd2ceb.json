{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ComplexAbs, util } from '@tensorflow/tfjs-core';\nexport const complexAbs = args => {\n  const {\n    x\n  } = args.inputs;\n  const cpuBackend = args.backend;\n  const resultValues = new Float32Array(util.sizeFromShape(x.shape));\n  const complexVals = cpuBackend.data.get(x.dataId);\n  const real = complexVals.complexTensorInfos.real;\n  const imag = complexVals.complexTensorInfos.imag;\n  const realVals = cpuBackend.data.get(real.dataId).values;\n  const imagVals = cpuBackend.data.get(imag.dataId).values;\n\n  for (let i = 0; i < realVals.length; i++) {\n    const real = realVals[i];\n    const imag = imagVals[i];\n    resultValues[i] = Math.hypot(real, imag);\n  }\n\n  return cpuBackend.makeOutput(resultValues, x.shape, 'float32');\n};\nexport const complexAbsConfig = {\n  kernelName: ComplexAbs,\n  backendName: 'cpu',\n  kernelFunc: complexAbs\n};","map":{"version":3,"names":["ComplexAbs","util","complexAbs","args","x","inputs","cpuBackend","backend","resultValues","Float32Array","sizeFromShape","shape","complexVals","data","get","dataId","real","complexTensorInfos","imag","realVals","values","imagVals","i","length","Math","hypot","makeOutput","complexAbsConfig","kernelName","backendName","kernelFunc"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/ComplexAbs.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ComplexAbs, util } from '@tensorflow/tfjs-core';\nexport const complexAbs = (args) => {\n    const { x } = args.inputs;\n    const cpuBackend = args.backend;\n    const resultValues = new Float32Array(util.sizeFromShape(x.shape));\n    const complexVals = cpuBackend.data.get(x.dataId);\n    const real = complexVals.complexTensorInfos.real;\n    const imag = complexVals.complexTensorInfos.imag;\n    const realVals = cpuBackend.data.get(real.dataId).values;\n    const imagVals = cpuBackend.data.get(imag.dataId).values;\n    for (let i = 0; i < realVals.length; i++) {\n        const real = realVals[i];\n        const imag = imagVals[i];\n        resultValues[i] = Math.hypot(real, imag);\n    }\n    return cpuBackend.makeOutput(resultValues, x.shape, 'float32');\n};\nexport const complexAbsConfig = {\n    kernelName: ComplexAbs,\n    backendName: 'cpu',\n    kernelFunc: complexAbs,\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAT,EAAqBC,IAArB,QAAiC,uBAAjC;AACA,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU;EAChC,MAAM;IAAEC;EAAF,IAAQD,IAAI,CAACE,MAAnB;EACA,MAAMC,UAAU,GAAGH,IAAI,CAACI,OAAxB;EACA,MAAMC,YAAY,GAAG,IAAIC,YAAJ,CAAiBR,IAAI,CAACS,aAAL,CAAmBN,CAAC,CAACO,KAArB,CAAjB,CAArB;EACA,MAAMC,WAAW,GAAGN,UAAU,CAACO,IAAX,CAAgBC,GAAhB,CAAoBV,CAAC,CAACW,MAAtB,CAApB;EACA,MAAMC,IAAI,GAAGJ,WAAW,CAACK,kBAAZ,CAA+BD,IAA5C;EACA,MAAME,IAAI,GAAGN,WAAW,CAACK,kBAAZ,CAA+BC,IAA5C;EACA,MAAMC,QAAQ,GAAGb,UAAU,CAACO,IAAX,CAAgBC,GAAhB,CAAoBE,IAAI,CAACD,MAAzB,EAAiCK,MAAlD;EACA,MAAMC,QAAQ,GAAGf,UAAU,CAACO,IAAX,CAAgBC,GAAhB,CAAoBI,IAAI,CAACH,MAAzB,EAAiCK,MAAlD;;EACA,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;IACtC,MAAMN,IAAI,GAAGG,QAAQ,CAACG,CAAD,CAArB;IACA,MAAMJ,IAAI,GAAGG,QAAQ,CAACC,CAAD,CAArB;IACAd,YAAY,CAACc,CAAD,CAAZ,GAAkBE,IAAI,CAACC,KAAL,CAAWT,IAAX,EAAiBE,IAAjB,CAAlB;EACH;;EACD,OAAOZ,UAAU,CAACoB,UAAX,CAAsBlB,YAAtB,EAAoCJ,CAAC,CAACO,KAAtC,EAA6C,SAA7C,CAAP;AACH,CAfM;AAgBP,OAAO,MAAMgB,gBAAgB,GAAG;EAC5BC,UAAU,EAAE5B,UADgB;EAE5B6B,WAAW,EAAE,KAFe;EAG5BC,UAAU,EAAE5B;AAHgB,CAAzB"},"metadata":{},"sourceType":"module"}