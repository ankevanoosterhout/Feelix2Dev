{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { All, backend_util, util } from '@tensorflow/tfjs-core';\nimport { reduce } from '../kernel_utils/reduce';\nimport { reshape } from './Reshape';\nimport { transpose } from './Transpose';\nexport function all(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x\n  } = inputs;\n  const {\n    axis,\n    keepDims\n  } = attrs;\n  const xRank = x.shape.length;\n  const origAxes = util.parseAxisParam(axis, x.shape);\n  let axes = origAxes;\n  const permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n  let permutedX = x;\n\n  if (permutedAxes != null) {\n    permutedX = transpose({\n      inputs: {\n        x\n      },\n      backend,\n      attrs: {\n        perm: permutedAxes\n      }\n    });\n    axes = backend_util.getInnerMostAxes(axes.length, xRank);\n  }\n\n  backend_util.assertAxesAreInnerMostDims('all', axes, xRank);\n  const [outShape, reduceShape] = backend_util.computeOutAndReduceShapes(permutedX.shape, axes);\n  const inSize = util.sizeFromShape(reduceShape);\n  const a2D = reshape({\n    inputs: {\n      x: permutedX\n    },\n    backend,\n    attrs: {\n      shape: [-1, inSize]\n    }\n  });\n  const reduced = reduce(a2D, a2D.dtype, 'all', backend);\n  let res;\n\n  if (keepDims) {\n    const newShape = backend_util.expandShapeToKeepDim(outShape, origAxes);\n    res = reshape({\n      inputs: {\n        x: reduced\n      },\n      backend,\n      attrs: {\n        shape: newShape\n      }\n    });\n  } else {\n    res = reshape({\n      inputs: {\n        x: reduced\n      },\n      backend,\n      attrs: {\n        shape: outShape\n      }\n    });\n  }\n\n  backend.disposeIntermediateTensorInfo(a2D);\n  backend.disposeIntermediateTensorInfo(reduced);\n\n  if (permutedAxes != null) {\n    backend.disposeIntermediateTensorInfo(permutedX);\n  }\n\n  return res;\n}\nexport const allConfig = {\n  kernelName: All,\n  backendName: 'webgl',\n  kernelFunc: all\n};","map":{"version":3,"names":["All","backend_util","util","reduce","reshape","transpose","all","args","inputs","backend","attrs","x","axis","keepDims","xRank","shape","length","origAxes","parseAxisParam","axes","permutedAxes","getAxesPermutation","permutedX","perm","getInnerMostAxes","assertAxesAreInnerMostDims","outShape","reduceShape","computeOutAndReduceShapes","inSize","sizeFromShape","a2D","reduced","dtype","res","newShape","expandShapeToKeepDim","disposeIntermediateTensorInfo","allConfig","kernelName","backendName","kernelFunc"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/All.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { All, backend_util, util } from '@tensorflow/tfjs-core';\nimport { reduce } from '../kernel_utils/reduce';\nimport { reshape } from './Reshape';\nimport { transpose } from './Transpose';\nexport function all(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis, keepDims } = attrs;\n    const xRank = x.shape.length;\n    const origAxes = util.parseAxisParam(axis, x.shape);\n    let axes = origAxes;\n    const permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n    let permutedX = x;\n    if (permutedAxes != null) {\n        permutedX = transpose({ inputs: { x }, backend, attrs: { perm: permutedAxes } });\n        axes = backend_util.getInnerMostAxes(axes.length, xRank);\n    }\n    backend_util.assertAxesAreInnerMostDims('all', axes, xRank);\n    const [outShape, reduceShape] = backend_util.computeOutAndReduceShapes(permutedX.shape, axes);\n    const inSize = util.sizeFromShape(reduceShape);\n    const a2D = reshape({ inputs: { x: permutedX }, backend, attrs: { shape: [-1, inSize] } });\n    const reduced = reduce(a2D, a2D.dtype, 'all', backend);\n    let res;\n    if (keepDims) {\n        const newShape = backend_util.expandShapeToKeepDim(outShape, origAxes);\n        res = reshape({ inputs: { x: reduced }, backend, attrs: { shape: newShape } });\n    }\n    else {\n        res = reshape({ inputs: { x: reduced }, backend, attrs: { shape: outShape } });\n    }\n    backend.disposeIntermediateTensorInfo(a2D);\n    backend.disposeIntermediateTensorInfo(reduced);\n    if (permutedAxes != null) {\n        backend.disposeIntermediateTensorInfo(permutedX);\n    }\n    return res;\n}\nexport const allConfig = {\n    kernelName: All,\n    backendName: 'webgl',\n    kernelFunc: all\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}