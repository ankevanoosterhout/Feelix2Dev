{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, util } from '@tensorflow/tfjs-core';\n/**\n * Template that creates implementation for binary ops. Supports broadcast.\n */\n\nexport function createSimpleBinaryKernelImpl(op) {\n  return (aShape, bShape, aVals, bVals, dtype) => {\n    const newShape = backend_util.assertAndGetBroadcastShape(aShape, bShape);\n    const resultRank = newShape.length;\n    const resultStrides = util.computeStrides(newShape);\n    const resultSize = util.sizeFromShape(newShape);\n    const result = util.getTypedArrayFromDType(dtype, resultSize);\n    const aRank = aShape.length;\n    const bRank = bShape.length;\n    const aStrides = util.computeStrides(aShape);\n    const bStrides = util.computeStrides(bShape);\n    const aBroadcastDims = backend_util.getBroadcastDims(aShape, newShape);\n    const bBroadcastDims = backend_util.getBroadcastDims(bShape, newShape);\n\n    if (aBroadcastDims.length + bBroadcastDims.length === 0) {\n      for (let i = 0; i < result.length; ++i) {\n        result[i] = op(aVals[i % aVals.length], bVals[i % bVals.length]);\n      }\n    } else {\n      for (let i = 0; i < result.length; ++i) {\n        const loc = util.indexToLoc(i, resultRank, resultStrides);\n        const aLoc = loc.slice(-aRank);\n        aBroadcastDims.forEach(d => aLoc[d] = 0);\n        const aIndex = util.locToIndex(aLoc, aRank, aStrides);\n        const bLoc = loc.slice(-bRank);\n        bBroadcastDims.forEach(d => bLoc[d] = 0);\n        const bIndex = util.locToIndex(bLoc, bRank, bStrides);\n        result[i] = op(aVals[aIndex], bVals[bIndex]);\n      }\n    }\n\n    return [result, newShape];\n  };\n}","map":{"version":3,"names":["backend_util","util","createSimpleBinaryKernelImpl","op","aShape","bShape","aVals","bVals","dtype","newShape","assertAndGetBroadcastShape","resultRank","length","resultStrides","computeStrides","resultSize","sizeFromShape","result","getTypedArrayFromDType","aRank","bRank","aStrides","bStrides","aBroadcastDims","getBroadcastDims","bBroadcastDims","i","loc","indexToLoc","aLoc","slice","forEach","d","aIndex","locToIndex","bLoc","bIndex"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-cpu/dist/utils/binary_impl.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, util } from '@tensorflow/tfjs-core';\n/**\n * Template that creates implementation for binary ops. Supports broadcast.\n */\nexport function createSimpleBinaryKernelImpl(op) {\n    return (aShape, bShape, aVals, bVals, dtype) => {\n        const newShape = backend_util.assertAndGetBroadcastShape(aShape, bShape);\n        const resultRank = newShape.length;\n        const resultStrides = util.computeStrides(newShape);\n        const resultSize = util.sizeFromShape(newShape);\n        const result = util.getTypedArrayFromDType(dtype, resultSize);\n        const aRank = aShape.length;\n        const bRank = bShape.length;\n        const aStrides = util.computeStrides(aShape);\n        const bStrides = util.computeStrides(bShape);\n        const aBroadcastDims = backend_util.getBroadcastDims(aShape, newShape);\n        const bBroadcastDims = backend_util.getBroadcastDims(bShape, newShape);\n        if (aBroadcastDims.length + bBroadcastDims.length === 0) {\n            for (let i = 0; i < result.length; ++i) {\n                result[i] = op(aVals[i % aVals.length], bVals[i % bVals.length]);\n            }\n        }\n        else {\n            for (let i = 0; i < result.length; ++i) {\n                const loc = util.indexToLoc(i, resultRank, resultStrides);\n                const aLoc = loc.slice(-aRank);\n                aBroadcastDims.forEach(d => aLoc[d] = 0);\n                const aIndex = util.locToIndex(aLoc, aRank, aStrides);\n                const bLoc = loc.slice(-bRank);\n                bBroadcastDims.forEach(d => bLoc[d] = 0);\n                const bIndex = util.locToIndex(bLoc, bRank, bStrides);\n                result[i] = op(aVals[aIndex], bVals[bIndex]);\n            }\n        }\n        return [result, newShape];\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}