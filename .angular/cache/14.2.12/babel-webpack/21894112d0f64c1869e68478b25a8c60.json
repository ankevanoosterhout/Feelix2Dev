{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Multiply } from '@tensorflow/tfjs-core';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nimport { binaryKernelFunc, createComplexBinaryKernelImpl } from '../utils/binary_utils';\nexport const multiplyImpl = createSimpleBinaryKernelImpl((aValue, bValue) => aValue * bValue);\nexport const multiplyComplexImpl = createComplexBinaryKernelImpl((aReal, aImag, bReal, bImag) => {\n  return {\n    real: aReal * bReal - aImag * bImag,\n    imag: aReal * bImag + aImag * bReal\n  };\n});\nexport const multiply = binaryKernelFunc(Multiply, multiplyImpl, multiplyComplexImpl);\nexport const multiplyConfig = {\n  kernelName: Multiply,\n  backendName: 'cpu',\n  kernelFunc: multiply\n};","map":{"version":3,"names":["Multiply","createSimpleBinaryKernelImpl","binaryKernelFunc","createComplexBinaryKernelImpl","multiplyImpl","aValue","bValue","multiplyComplexImpl","aReal","aImag","bReal","bImag","real","imag","multiply","multiplyConfig","kernelName","backendName","kernelFunc"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Multiply.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Multiply } from '@tensorflow/tfjs-core';\nimport { createSimpleBinaryKernelImpl } from '../utils/binary_impl';\nimport { binaryKernelFunc, createComplexBinaryKernelImpl } from '../utils/binary_utils';\nexport const multiplyImpl = createSimpleBinaryKernelImpl(((aValue, bValue) => aValue * bValue));\nexport const multiplyComplexImpl = createComplexBinaryKernelImpl(((aReal, aImag, bReal, bImag) => {\n    return {\n        real: aReal * bReal - aImag * bImag,\n        imag: aReal * bImag + aImag * bReal\n    };\n}));\nexport const multiply = binaryKernelFunc(Multiply, multiplyImpl, multiplyComplexImpl);\nexport const multiplyConfig = {\n    kernelName: Multiply,\n    backendName: 'cpu',\n    kernelFunc: multiply\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAT,QAAyB,uBAAzB;AACA,SAASC,4BAAT,QAA6C,sBAA7C;AACA,SAASC,gBAAT,EAA2BC,6BAA3B,QAAgE,uBAAhE;AACA,OAAO,MAAMC,YAAY,GAAGH,4BAA4B,CAAE,CAACI,MAAD,EAASC,MAAT,KAAoBD,MAAM,GAAGC,MAA/B,CAAjD;AACP,OAAO,MAAMC,mBAAmB,GAAGJ,6BAA6B,CAAE,CAACK,KAAD,EAAQC,KAAR,EAAeC,KAAf,EAAsBC,KAAtB,KAAgC;EAC9F,OAAO;IACHC,IAAI,EAAEJ,KAAK,GAAGE,KAAR,GAAgBD,KAAK,GAAGE,KAD3B;IAEHE,IAAI,EAAEL,KAAK,GAAGG,KAAR,GAAgBF,KAAK,GAAGC;EAF3B,CAAP;AAIH,CAL+D,CAAzD;AAMP,OAAO,MAAMI,QAAQ,GAAGZ,gBAAgB,CAACF,QAAD,EAAWI,YAAX,EAAyBG,mBAAzB,CAAjC;AACP,OAAO,MAAMQ,cAAc,GAAG;EAC1BC,UAAU,EAAEhB,QADc;EAE1BiB,WAAW,EAAE,KAFa;EAG1BC,UAAU,EAAEJ;AAHc,CAAvB"},"metadata":{},"sourceType":"module"}