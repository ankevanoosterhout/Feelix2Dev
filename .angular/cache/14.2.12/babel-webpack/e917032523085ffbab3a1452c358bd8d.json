{"ast":null,"code":"import { BoxBufferGeometry, Vector3, CylinderBufferGeometry, SphereBufferGeometry, Mesh, MeshStandardMaterial } from 'three';\nimport { Line2 } from 'three/examples/jsm/lines/Line2.js';\nimport { IKLinkHelper } from './IKLinkHelper.js';\nimport { DOF } from '../core/Joint.js';\nimport { HALF_PI } from '../core/utils/constants.js';\nconst tempPos = new Vector3();\nconst tempRot = new Vector3();\n\nclass RotationLimitHelper extends Mesh {\n  constructor(material, dof) {\n    super(undefined, material);\n    this._dof = dof;\n    this._min = null;\n    this._delta = null;\n    this.setLimits(0, 2 * Math.PI);\n  }\n\n  setLimits(min, max) {\n    const delta = Math.min(max - min, 2 * Math.PI);\n\n    if (min === -Infinity) {\n      min = 0;\n    }\n\n    if (this._min === min && this._delta === delta) {\n      return;\n    }\n\n    this._min = min;\n    this._delta = delta;\n\n    if (this.geometry) {\n      this.geometry.dispose();\n    }\n\n    const dof = this._dof;\n    const geometry = new CylinderBufferGeometry(0.075, 0.075, 1e-7, 100, 1, false, min, delta);\n\n    if (dof === DOF.EX) {\n      geometry.rotateZ(HALF_PI);\n    }\n\n    if (dof === DOF.EZ) {\n      geometry.rotateX(HALF_PI);\n    }\n\n    this.geometry = geometry;\n  }\n\n}\n\nexport class IKJointHelper extends IKLinkHelper {\n  constructor(joint) {\n    super(joint);\n    const xRotationMesh = new Mesh(new CylinderBufferGeometry(0.05, 0.05, 0.25, 30, 1).rotateZ(HALF_PI), new MeshStandardMaterial());\n    const xRotationLimits = new RotationLimitHelper(new MeshStandardMaterial(), DOF.EX);\n    const yRotationMesh = new Mesh(new CylinderBufferGeometry(0.05, 0.05, 0.25, 30, 1), new MeshStandardMaterial());\n    const yRotationLimits = new RotationLimitHelper(new MeshStandardMaterial(), DOF.EY);\n    const zRotationMesh = new Mesh(new CylinderBufferGeometry(0.05, 0.05, 0.25, 30, 1).rotateX(HALF_PI), new MeshStandardMaterial());\n    const zRotationLimits = new RotationLimitHelper(new MeshStandardMaterial(), DOF.EZ);\n    zRotationLimits.rotation.set(HALF_PI, 0, 0);\n    const freeRotationMesh = new Mesh(new SphereBufferGeometry(0.05, 30, 30), new MeshStandardMaterial());\n    const fixedMesh = new Mesh(new BoxBufferGeometry(0.05, 0.05, 0.05), new MeshStandardMaterial());\n    const translationMesh = new Line2();\n    translationMesh.geometry.setPositions([0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1]);\n    translationMesh.material.color.set(0xffffff);\n    translationMesh.material.side = 2;\n    translationMesh.material.linewidth = 2;\n    this.add(xRotationMesh, yRotationMesh, zRotationMesh, xRotationLimits, yRotationLimits, zRotationLimits, freeRotationMesh, translationMesh, fixedMesh);\n    this.xRotationMesh = xRotationMesh;\n    this.yRotationMesh = yRotationMesh;\n    this.zRotationMesh = zRotationMesh;\n    this.xRotationLimits = xRotationLimits;\n    this.yRotationLimits = yRotationLimits;\n    this.zRotationLimits = zRotationLimits;\n    this.translationMesh = translationMesh;\n    this.freeRotationMesh = freeRotationMesh;\n    this.fixedMesh = fixedMesh;\n  }\n\n  setJointScale(s) {\n    this.xRotationMesh.scale.setScalar(s);\n    this.yRotationMesh.scale.setScalar(s);\n    this.zRotationMesh.scale.setScalar(s);\n    this.xRotationLimits.scale.setScalar(s);\n    this.yRotationLimits.scale.setScalar(s);\n    this.zRotationLimits.scale.setScalar(s);\n    this.freeRotationMesh.scale.setScalar(s);\n    this.fixedMesh.scale.setScalar(s);\n  }\n\n  update() {\n    super.update();\n    const {\n      xRotationMesh,\n      yRotationMesh,\n      zRotationMesh,\n      xRotationLimits,\n      yRotationLimits,\n      zRotationLimits,\n      freeRotationMesh,\n      translationMesh,\n      fixedMesh\n    } = this;\n    const joint = this.frame;\n    xRotationMesh.visible = false;\n    yRotationMesh.visible = false;\n    zRotationMesh.visible = false;\n    xRotationLimits.visible = false;\n    yRotationLimits.visible = false;\n    zRotationLimits.visible = false;\n    freeRotationMesh.visible = false;\n    translationMesh.visible = false;\n    fixedMesh.visible = false;\n\n    if (joint.translationDoFCount !== 0) {\n      translationMesh.visible = true;\n    }\n\n    if (joint.rotationDoFCount === 3) {\n      freeRotationMesh.visible = true;\n      xRotationLimits.visible = true;\n      yRotationLimits.visible = true;\n      zRotationLimits.visible = true;\n    } else {\n      xRotationMesh.visible = Boolean(joint.dofFlags[DOF.EX]);\n      yRotationMesh.visible = Boolean(joint.dofFlags[DOF.EY]);\n      zRotationMesh.visible = Boolean(joint.dofFlags[DOF.EZ]);\n      xRotationLimits.visible = Boolean(joint.dofFlags[DOF.EX]);\n      yRotationLimits.visible = Boolean(joint.dofFlags[DOF.EY]);\n      zRotationLimits.visible = Boolean(joint.dofFlags[DOF.EZ]);\n    }\n\n    if (joint.translationDoFCount === 0 && joint.rotationDoFCount === 0) {\n      // fixedMesh.visible = true;\n      this.visible = this.line.visible;\n    }\n  }\n\n  updateMatrixWorld(...args) {\n    const {\n      xRotationMesh,\n      yRotationMesh,\n      zRotationMesh,\n      xRotationLimits,\n      yRotationLimits,\n      zRotationLimits,\n      freeRotationMesh,\n      translationMesh\n    } = this;\n    const joint = this.frame;\n    tempPos.set(joint.getDoFValue(DOF.X), joint.getDoFValue(DOF.Y), joint.getDoFValue(DOF.Z));\n    tempRot.set(joint.getDoFValue(DOF.EX), joint.getDoFValue(DOF.EY), joint.getDoFValue(DOF.EZ));\n    translationMesh.scale.copy(tempPos);\n    xRotationMesh.position.copy(tempPos);\n    xRotationLimits.position.copy(tempPos);\n    xRotationLimits.setLimits(joint.getMinLimit(DOF.EX), joint.getMaxLimit(DOF.EX));\n    yRotationMesh.position.copy(tempPos);\n    yRotationMesh.rotation.set(tempRot.x, 0, 0);\n    yRotationLimits.position.copy(tempPos);\n    yRotationLimits.rotation.set(tempRot.x, 0, 0);\n    yRotationLimits.setLimits(joint.getMinLimit(DOF.EY), joint.getMaxLimit(DOF.EY));\n    zRotationMesh.position.copy(tempPos);\n    zRotationMesh.rotation.set(tempRot.x, tempRot.y, 0);\n    zRotationLimits.position.copy(tempPos);\n    zRotationLimits.rotation.set(tempRot.x, tempRot.y, 0);\n    zRotationLimits.setLimits(joint.getMinLimit(DOF.EZ), joint.getMaxLimit(DOF.EZ));\n    freeRotationMesh.position.copy(tempPos);\n    super.updateMatrixWorld(...args);\n  }\n\n}","map":{"version":3,"names":["BoxBufferGeometry","Vector3","CylinderBufferGeometry","SphereBufferGeometry","Mesh","MeshStandardMaterial","Line2","IKLinkHelper","DOF","HALF_PI","tempPos","tempRot","RotationLimitHelper","constructor","material","dof","undefined","_dof","_min","_delta","setLimits","Math","PI","min","max","delta","Infinity","geometry","dispose","EX","rotateZ","EZ","rotateX","IKJointHelper","joint","xRotationMesh","xRotationLimits","yRotationMesh","yRotationLimits","EY","zRotationMesh","zRotationLimits","rotation","set","freeRotationMesh","fixedMesh","translationMesh","setPositions","color","side","linewidth","add","setJointScale","s","scale","setScalar","update","frame","visible","translationDoFCount","rotationDoFCount","Boolean","dofFlags","line","updateMatrixWorld","args","getDoFValue","X","Y","Z","copy","position","getMinLimit","getMaxLimit","x","y"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/closed-chain-ik/src/three/IKJointHelper.js"],"sourcesContent":["import { BoxBufferGeometry, Vector3, CylinderBufferGeometry, SphereBufferGeometry, Mesh, MeshStandardMaterial } from 'three';\r\nimport { Line2 } from 'three/examples/jsm/lines/Line2.js';\r\nimport { IKLinkHelper } from './IKLinkHelper.js';\r\nimport { DOF } from '../core/Joint.js';\r\nimport { HALF_PI } from '../core/utils/constants.js';\r\n\r\nconst tempPos = new Vector3();\r\nconst tempRot = new Vector3();\r\n\r\nclass RotationLimitHelper extends Mesh {\r\n\r\n\tconstructor( material, dof ) {\r\n\r\n\t\tsuper( undefined, material );\r\n\t\tthis._dof = dof;\r\n\t\tthis._min = null;\r\n\t\tthis._delta = null;\r\n\t\tthis.setLimits( 0, 2 * Math.PI );\r\n\r\n\r\n\t}\r\n\r\n\tsetLimits( min, max ) {\r\n\r\n\t\tconst delta = Math.min( max - min, 2 * Math.PI );\r\n\t\tif ( min === - Infinity ) {\r\n\r\n\t\t\tmin = 0;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this._min === min && this._delta === delta ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tthis._min = min;\r\n\t\tthis._delta = delta;\r\n\r\n\t\tif ( this.geometry ) {\r\n\r\n\t\t\tthis.geometry.dispose();\r\n\r\n\t\t}\r\n\r\n\t\tconst dof = this._dof;\r\n\t\tconst geometry = new CylinderBufferGeometry( 0.075, 0.075, 1e-7, 100, 1, false, min, delta );\r\n\r\n\t\tif ( dof === DOF.EX ) {\r\n\r\n\t\t\tgeometry.rotateZ( HALF_PI );\r\n\r\n\t\t}\r\n\r\n\t\tif ( dof === DOF.EZ ) {\r\n\r\n\t\t\tgeometry.rotateX( HALF_PI );\r\n\r\n\t\t}\r\n\r\n\t\tthis.geometry = geometry;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport class IKJointHelper extends IKLinkHelper {\r\n\r\n\tconstructor( joint ) {\r\n\r\n\t\tsuper( joint );\r\n\r\n\t\tconst xRotationMesh = new Mesh(\r\n\t\t\tnew CylinderBufferGeometry( 0.05, 0.05, 0.25, 30, 1 ).rotateZ( HALF_PI ),\r\n\t\t\tnew MeshStandardMaterial(),\r\n\t\t);\r\n\r\n\t\tconst xRotationLimits = new RotationLimitHelper(\r\n\t\t\tnew MeshStandardMaterial(),\r\n\t\t\tDOF.EX,\r\n\t\t);\r\n\r\n\t\tconst yRotationMesh = new Mesh(\r\n\t\t\tnew CylinderBufferGeometry( 0.05, 0.05, 0.25, 30, 1 ),\r\n\t\t\tnew MeshStandardMaterial(),\r\n\t\t);\r\n\r\n\t\tconst yRotationLimits = new RotationLimitHelper(\r\n\t\t\tnew MeshStandardMaterial(),\r\n\t\t\tDOF.EY,\r\n\t\t);\r\n\r\n\t\tconst zRotationMesh = new Mesh(\r\n\t\t\tnew CylinderBufferGeometry( 0.05, 0.05, 0.25, 30, 1 ).rotateX( HALF_PI ),\r\n\t\t\tnew MeshStandardMaterial(),\r\n\t\t);\r\n\r\n\t\tconst zRotationLimits = new RotationLimitHelper(\r\n\t\t\tnew MeshStandardMaterial(),\r\n\t\t\tDOF.EZ,\r\n\t\t);\r\n\t\tzRotationLimits.rotation.set( HALF_PI, 0, 0 );\r\n\r\n\t\tconst freeRotationMesh = new Mesh(\r\n\t\t\tnew SphereBufferGeometry( 0.05, 30, 30 ),\r\n\t\t\tnew MeshStandardMaterial(),\r\n\t\t);\r\n\r\n\t\tconst fixedMesh = new Mesh(\r\n\t\t\tnew BoxBufferGeometry( 0.05, 0.05, 0.05 ),\r\n\t\t\tnew MeshStandardMaterial(),\r\n\t\t);\r\n\r\n\t\tconst translationMesh = new Line2();\r\n\t\ttranslationMesh.geometry.setPositions( [\r\n\t\t\t0, 0, 0,\r\n\t\t\t1, 0, 0,\r\n\t\t\t1, 1, 0,\r\n\t\t\t1, 1, 1,\r\n\t\t] );\r\n\t\ttranslationMesh.material.color.set( 0xffffff );\r\n\t\ttranslationMesh.material.side = 2;\r\n\t\ttranslationMesh.material.linewidth = 2;\r\n\r\n\t\tthis.add(\r\n\t\t\txRotationMesh,\r\n\t\t\tyRotationMesh,\r\n\t\t\tzRotationMesh,\r\n\t\t\txRotationLimits,\r\n\t\t\tyRotationLimits,\r\n\t\t\tzRotationLimits,\r\n\t\t\tfreeRotationMesh,\r\n\t\t\ttranslationMesh,\r\n\t\t\tfixedMesh,\r\n\t\t);\r\n\r\n\t\tthis.xRotationMesh = xRotationMesh;\r\n\t\tthis.yRotationMesh = yRotationMesh;\r\n\t\tthis.zRotationMesh = zRotationMesh;\r\n\t\tthis.xRotationLimits = xRotationLimits;\r\n\t\tthis.yRotationLimits = yRotationLimits;\r\n\t\tthis.zRotationLimits = zRotationLimits;\r\n\t\tthis.translationMesh = translationMesh;\r\n\t\tthis.freeRotationMesh = freeRotationMesh;\r\n\t\tthis.fixedMesh = fixedMesh;\r\n\r\n\t}\r\n\r\n\tsetJointScale( s ) {\r\n\r\n\t\tthis.xRotationMesh.scale.setScalar( s );\r\n\t\tthis.yRotationMesh.scale.setScalar( s );\r\n\t\tthis.zRotationMesh.scale.setScalar( s );\r\n\t\tthis.xRotationLimits.scale.setScalar( s );\r\n\t\tthis.yRotationLimits.scale.setScalar( s );\r\n\t\tthis.zRotationLimits.scale.setScalar( s );\r\n\t\tthis.freeRotationMesh.scale.setScalar( s );\r\n\t\tthis.fixedMesh.scale.setScalar( s );\r\n\r\n\t}\r\n\r\n\tupdate() {\r\n\r\n\t\tsuper.update();\r\n\r\n\t\tconst {\r\n\t\t\txRotationMesh,\r\n\t\t\tyRotationMesh,\r\n\t\t\tzRotationMesh,\r\n\t\t\txRotationLimits,\r\n\t\t\tyRotationLimits,\r\n\t\t\tzRotationLimits,\r\n\t\t\tfreeRotationMesh,\r\n\t\t\ttranslationMesh,\r\n\t\t\tfixedMesh,\r\n\t\t} = this;\r\n\t\tconst joint = this.frame;\r\n\t\txRotationMesh.visible = false;\r\n\t\tyRotationMesh.visible = false;\r\n\t\tzRotationMesh.visible = false;\r\n\t\txRotationLimits.visible = false;\r\n\t\tyRotationLimits.visible = false;\r\n\t\tzRotationLimits.visible = false;\r\n\t\tfreeRotationMesh.visible = false;\r\n\t\ttranslationMesh.visible = false;\r\n\t\tfixedMesh.visible = false;\r\n\r\n\t\tif ( joint.translationDoFCount !== 0 ) {\r\n\r\n\t\t\ttranslationMesh.visible = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( joint.rotationDoFCount === 3 ) {\r\n\r\n\t\t\tfreeRotationMesh.visible = true;\r\n\t\t\txRotationLimits.visible = true;\r\n\t\t\tyRotationLimits.visible = true;\r\n\t\t\tzRotationLimits.visible = true;\r\n\r\n\t\t} else {\r\n\r\n\t\t\txRotationMesh.visible = Boolean( joint.dofFlags[ DOF.EX ] );\r\n\t\t\tyRotationMesh.visible = Boolean( joint.dofFlags[ DOF.EY ] );\r\n\t\t\tzRotationMesh.visible = Boolean( joint.dofFlags[ DOF.EZ ] );\r\n\r\n\t\t\txRotationLimits.visible = Boolean( joint.dofFlags[ DOF.EX ] );\r\n\t\t\tyRotationLimits.visible = Boolean( joint.dofFlags[ DOF.EY ] );\r\n\t\t\tzRotationLimits.visible = Boolean( joint.dofFlags[ DOF.EZ ] );\r\n\r\n\t\t}\r\n\r\n\t\tif ( joint.translationDoFCount === 0 && joint.rotationDoFCount === 0 ) {\r\n\r\n\t\t\t// fixedMesh.visible = true;\r\n\t\t\tthis.visible = this.line.visible;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdateMatrixWorld( ...args ) {\r\n\r\n\t\tconst {\r\n\t\t\txRotationMesh,\r\n\t\t\tyRotationMesh,\r\n\t\t\tzRotationMesh,\r\n\t\t\txRotationLimits,\r\n\t\t\tyRotationLimits,\r\n\t\t\tzRotationLimits,\r\n\t\t\tfreeRotationMesh,\r\n\t\t\ttranslationMesh,\r\n\t\t} = this;\r\n\t\tconst joint = this.frame;\r\n\r\n\t\ttempPos.set(\r\n\t\t\tjoint.getDoFValue( DOF.X ),\r\n\t\t\tjoint.getDoFValue( DOF.Y ),\r\n\t\t\tjoint.getDoFValue( DOF.Z ),\r\n\t\t);\r\n\r\n\t\ttempRot.set(\r\n\t\t\tjoint.getDoFValue( DOF.EX ),\r\n\t\t\tjoint.getDoFValue( DOF.EY ),\r\n\t\t\tjoint.getDoFValue( DOF.EZ ),\r\n\t\t);\r\n\r\n\t\ttranslationMesh.scale.copy( tempPos );\r\n\r\n\t\txRotationMesh.position.copy( tempPos );\r\n\t\txRotationLimits.position.copy( tempPos );\r\n\t\txRotationLimits.setLimits(\r\n\t\t\tjoint.getMinLimit( DOF.EX ),\r\n\t\t\tjoint.getMaxLimit( DOF.EX ),\r\n\t\t);\r\n\r\n\t\tyRotationMesh.position.copy( tempPos );\r\n\t\tyRotationMesh.rotation.set( tempRot.x, 0, 0 );\r\n\t\tyRotationLimits.position.copy( tempPos );\r\n\t\tyRotationLimits.rotation.set( tempRot.x, 0, 0 );\r\n\t\tyRotationLimits.setLimits(\r\n\t\t\tjoint.getMinLimit( DOF.EY ),\r\n\t\t\tjoint.getMaxLimit( DOF.EY ),\r\n\t\t);\r\n\r\n\t\tzRotationMesh.position.copy( tempPos );\r\n\t\tzRotationMesh.rotation.set( tempRot.x, tempRot.y, 0 );\r\n\t\tzRotationLimits.position.copy( tempPos );\r\n\t\tzRotationLimits.rotation.set( tempRot.x, tempRot.y, 0 );\r\n\t\tzRotationLimits.setLimits(\r\n\t\t\tjoint.getMinLimit( DOF.EZ ),\r\n\t\t\tjoint.getMaxLimit( DOF.EZ ),\r\n\t\t);\r\n\r\n\t\tfreeRotationMesh.position.copy( tempPos );\r\n\r\n\t\tsuper.updateMatrixWorld( ...args );\r\n\r\n\t}\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}