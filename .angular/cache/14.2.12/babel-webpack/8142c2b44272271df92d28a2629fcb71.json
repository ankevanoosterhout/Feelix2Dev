{"ast":null,"code":"/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport class TransposeProgram {\n  constructor(aShape, newDim) {\n    this.variableNames = ['A'];\n    const outputShape = new Array(aShape.length);\n\n    for (let i = 0; i < outputShape.length; i++) {\n      outputShape[i] = aShape[newDim[i]];\n    }\n\n    this.outputShape = outputShape;\n    this.rank = outputShape.length;\n    const dtype = getCoordsDataType(this.rank);\n    const switched = getSwitchedCoords(newDim);\n    this.userCode = `\n    void main() {\n      ${dtype} resRC = getOutputCoords();\n      setOutput(getA(${switched}));\n    }\n    `;\n  }\n\n}\n\nfunction getSwitchedCoords(newDim) {\n  const rank = newDim.length;\n\n  if (rank > 6) {\n    throw Error(`Transpose for rank ${rank} is not yet supported`);\n  }\n\n  const originalOrder = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w', 'resRC.u', 'resRC.v'];\n  const switchedCoords = new Array(rank);\n\n  for (let i = 0; i < newDim.length; i++) {\n    switchedCoords[newDim[i]] = originalOrder[i];\n  }\n\n  return switchedCoords.join();\n}","map":{"version":3,"names":["getCoordsDataType","TransposeProgram","constructor","aShape","newDim","variableNames","outputShape","Array","length","i","rank","dtype","switched","getSwitchedCoords","userCode","Error","originalOrder","switchedCoords","join"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-webgl/dist/transpose_gpu.js"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport class TransposeProgram {\n    constructor(aShape, newDim) {\n        this.variableNames = ['A'];\n        const outputShape = new Array(aShape.length);\n        for (let i = 0; i < outputShape.length; i++) {\n            outputShape[i] = aShape[newDim[i]];\n        }\n        this.outputShape = outputShape;\n        this.rank = outputShape.length;\n        const dtype = getCoordsDataType(this.rank);\n        const switched = getSwitchedCoords(newDim);\n        this.userCode = `\n    void main() {\n      ${dtype} resRC = getOutputCoords();\n      setOutput(getA(${switched}));\n    }\n    `;\n    }\n}\nfunction getSwitchedCoords(newDim) {\n    const rank = newDim.length;\n    if (rank > 6) {\n        throw Error(`Transpose for rank ${rank} is not yet supported`);\n    }\n    const originalOrder = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w', 'resRC.u', 'resRC.v'];\n    const switchedCoords = new Array(rank);\n    for (let i = 0; i < newDim.length; i++) {\n        switchedCoords[newDim[i]] = originalOrder[i];\n    }\n    return switchedCoords.join();\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,iBAAT,QAAkC,mBAAlC;AACA,OAAO,MAAMC,gBAAN,CAAuB;EAC1BC,WAAW,CAACC,MAAD,EAASC,MAAT,EAAiB;IACxB,KAAKC,aAAL,GAAqB,CAAC,GAAD,CAArB;IACA,MAAMC,WAAW,GAAG,IAAIC,KAAJ,CAAUJ,MAAM,CAACK,MAAjB,CAApB;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,WAAW,CAACE,MAAhC,EAAwCC,CAAC,EAAzC,EAA6C;MACzCH,WAAW,CAACG,CAAD,CAAX,GAAiBN,MAAM,CAACC,MAAM,CAACK,CAAD,CAAP,CAAvB;IACH;;IACD,KAAKH,WAAL,GAAmBA,WAAnB;IACA,KAAKI,IAAL,GAAYJ,WAAW,CAACE,MAAxB;IACA,MAAMG,KAAK,GAAGX,iBAAiB,CAAC,KAAKU,IAAN,CAA/B;IACA,MAAME,QAAQ,GAAGC,iBAAiB,CAACT,MAAD,CAAlC;IACA,KAAKU,QAAL,GAAiB;AACzB;AACA,QAAQH,KAAM;AACd,uBAAuBC,QAAS;AAChC;AACA,KALQ;EAMH;;AAjByB;;AAmB9B,SAASC,iBAAT,CAA2BT,MAA3B,EAAmC;EAC/B,MAAMM,IAAI,GAAGN,MAAM,CAACI,MAApB;;EACA,IAAIE,IAAI,GAAG,CAAX,EAAc;IACV,MAAMK,KAAK,CAAE,sBAAqBL,IAAK,uBAA5B,CAAX;EACH;;EACD,MAAMM,aAAa,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,CAAtB;EACA,MAAMC,cAAc,GAAG,IAAIV,KAAJ,CAAUG,IAAV,CAAvB;;EACA,KAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,MAAM,CAACI,MAA3B,EAAmCC,CAAC,EAApC,EAAwC;IACpCQ,cAAc,CAACb,MAAM,CAACK,CAAD,CAAP,CAAd,GAA4BO,aAAa,CAACP,CAAD,CAAzC;EACH;;EACD,OAAOQ,cAAc,CAACC,IAAf,EAAP;AACH"},"metadata":{},"sourceType":"module"}