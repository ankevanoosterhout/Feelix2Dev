{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LeakyRelu } from '../kernel_names';\nimport { greater } from '../ops/greater';\nimport { mul } from '../ops/mul';\nimport { where } from '../ops/where';\nexport const leakyReluGradConfig = {\n  kernelName: LeakyRelu,\n  inputsToSave: ['x'],\n  gradFunc: (dy, saved, attrs) => {\n    const [x] = saved;\n    const {\n      alpha\n    } = attrs;\n    const mask = greater(x, 0); // Returns `gradients * (features > 0) + alpha * gradients * (features <=\n    // 0)`.\n\n    return {\n      x: () => where(mask, dy, mul(dy, alpha))\n    };\n  }\n};","map":{"version":3,"names":["LeakyRelu","greater","mul","where","leakyReluGradConfig","kernelName","inputsToSave","gradFunc","dy","saved","attrs","x","alpha","mask"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-core/dist/gradients/LeakyRelu_grad.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { LeakyRelu } from '../kernel_names';\nimport { greater } from '../ops/greater';\nimport { mul } from '../ops/mul';\nimport { where } from '../ops/where';\nexport const leakyReluGradConfig = {\n    kernelName: LeakyRelu,\n    inputsToSave: ['x'],\n    gradFunc: (dy, saved, attrs) => {\n        const [x] = saved;\n        const { alpha } = attrs;\n        const mask = greater(x, 0);\n        // Returns `gradients * (features > 0) + alpha * gradients * (features <=\n        // 0)`.\n        return { x: () => where(mask, dy, mul(dy, alpha)) };\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,iBAA1B;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAO,MAAMC,mBAAmB,GAAG;EAC/BC,UAAU,EAAEL,SADmB;EAE/BM,YAAY,EAAE,CAAC,GAAD,CAFiB;EAG/BC,QAAQ,EAAE,CAACC,EAAD,EAAKC,KAAL,EAAYC,KAAZ,KAAsB;IAC5B,MAAM,CAACC,CAAD,IAAMF,KAAZ;IACA,MAAM;MAAEG;IAAF,IAAYF,KAAlB;IACA,MAAMG,IAAI,GAAGZ,OAAO,CAACU,CAAD,EAAI,CAAJ,CAApB,CAH4B,CAI5B;IACA;;IACA,OAAO;MAAEA,CAAC,EAAE,MAAMR,KAAK,CAACU,IAAD,EAAOL,EAAP,EAAWN,GAAG,CAACM,EAAD,EAAKI,KAAL,CAAd;IAAhB,CAAP;EACH;AAV8B,CAA5B"},"metadata":{},"sourceType":"module"}