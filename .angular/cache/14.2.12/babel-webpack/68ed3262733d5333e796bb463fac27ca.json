{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ClipByValue } from '../kernel_names';\nimport { greaterEqual } from '../ops/greater_equal';\nimport { lessEqual } from '../ops/less_equal';\nimport { logicalAnd } from '../ops/logical_and';\nimport { where } from '../ops/where';\nimport { zerosLike } from '../ops/zeros_like';\nexport const clipByValueGradConfig = {\n  kernelName: ClipByValue,\n  inputsToSave: ['x'],\n  gradFunc: (dy, saved, attrs) => {\n    const [x] = saved;\n    const {\n      clipValueMin,\n      clipValueMax\n    } = attrs;\n    return {\n      x: () => where(logicalAnd(greaterEqual(x, clipValueMin), lessEqual(x, clipValueMax)), dy, zerosLike(dy))\n    };\n  }\n};","map":{"version":3,"names":["ClipByValue","greaterEqual","lessEqual","logicalAnd","where","zerosLike","clipByValueGradConfig","kernelName","inputsToSave","gradFunc","dy","saved","attrs","x","clipValueMin","clipValueMax"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-core/dist/gradients/ClipByValue_grad.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ClipByValue } from '../kernel_names';\nimport { greaterEqual } from '../ops/greater_equal';\nimport { lessEqual } from '../ops/less_equal';\nimport { logicalAnd } from '../ops/logical_and';\nimport { where } from '../ops/where';\nimport { zerosLike } from '../ops/zeros_like';\nexport const clipByValueGradConfig = {\n    kernelName: ClipByValue,\n    inputsToSave: ['x'],\n    gradFunc: (dy, saved, attrs) => {\n        const [x] = saved;\n        const { clipValueMin, clipValueMax } = attrs;\n        return {\n            x: () => where(logicalAnd(greaterEqual(x, clipValueMin), lessEqual(x, clipValueMax)), dy, zerosLike(dy)),\n        };\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,WAAT,QAA4B,iBAA5B;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAO,MAAMC,qBAAqB,GAAG;EACjCC,UAAU,EAAEP,WADqB;EAEjCQ,YAAY,EAAE,CAAC,GAAD,CAFmB;EAGjCC,QAAQ,EAAE,CAACC,EAAD,EAAKC,KAAL,EAAYC,KAAZ,KAAsB;IAC5B,MAAM,CAACC,CAAD,IAAMF,KAAZ;IACA,MAAM;MAAEG,YAAF;MAAgBC;IAAhB,IAAiCH,KAAvC;IACA,OAAO;MACHC,CAAC,EAAE,MAAMT,KAAK,CAACD,UAAU,CAACF,YAAY,CAACY,CAAD,EAAIC,YAAJ,CAAb,EAAgCZ,SAAS,CAACW,CAAD,EAAIE,YAAJ,CAAzC,CAAX,EAAwEL,EAAxE,EAA4EL,SAAS,CAACK,EAAD,CAArF;IADX,CAAP;EAGH;AATgC,CAA9B"},"metadata":{},"sourceType":"module"}