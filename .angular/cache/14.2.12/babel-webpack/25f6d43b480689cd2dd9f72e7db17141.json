{"ast":null,"code":"/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [{\n  'tfOpName': '_FusedMatMul',\n  'category': 'matrices',\n  'inputs': [{\n    'start': 0,\n    'name': 'a',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'b',\n    'type': 'tensor'\n  }, {\n    'start': 2,\n    'end': 0,\n    'name': 'args',\n    'type': 'tensors'\n  }],\n  'attrs': [{\n    'tfName': 'num_args',\n    'name': 'numArgs',\n    'type': 'number'\n  }, {\n    'tfName': 'fused_ops',\n    'name': 'fusedOps',\n    'type': 'string[]',\n    'defaultValue': []\n  }, {\n    'tfName': 'epsilon',\n    'name': 'epsilon',\n    'type': 'number',\n    'defaultValue': 0.0001\n  }, {\n    'tfName': 'transpose_a',\n    'name': 'transposeA',\n    'type': 'bool',\n    'defaultValue': false\n  }, {\n    'tfName': 'transpose_b',\n    'name': 'transposeB',\n    'type': 'bool',\n    'defaultValue': false\n  }, {\n    'tfName': 'leakyrelu_alpha',\n    'name': 'leakyreluAlpha',\n    'type': 'number',\n    'defaultValue': 0.2\n  }, {\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'MatMul',\n  'category': 'matrices',\n  'inputs': [{\n    'start': 0,\n    'name': 'a',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'b',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'transpose_a',\n    'name': 'transposeA',\n    'type': 'bool',\n    'defaultValue': false\n  }, {\n    'tfName': 'transpose_b',\n    'name': 'transposeB',\n    'type': 'bool',\n    'defaultValue': false\n  }, {\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'BatchMatMul',\n  'category': 'matrices',\n  'inputs': [{\n    'start': 0,\n    'name': 'a',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'b',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'adj_x',\n    'name': 'transposeA',\n    'type': 'bool',\n    'defaultValue': false\n  }, {\n    'tfName': 'adj_y',\n    'name': 'transposeB',\n    'type': 'bool',\n    'defaultValue': false\n  }, {\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'BatchMatMulV2',\n  'category': 'matrices',\n  'inputs': [{\n    'start': 0,\n    'name': 'a',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'b',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'adj_x',\n    'name': 'transposeA',\n    'type': 'bool',\n    'defaultValue': false\n  }, {\n    'tfName': 'adj_y',\n    'name': 'transposeB',\n    'type': 'bool',\n    'defaultValue': false\n  }, {\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'Transpose',\n  'category': 'matrices',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'perm',\n    'type': 'number[]'\n  }],\n  'attrs': [{\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'Einsum',\n  'category': 'matrices',\n  'inputs': [{\n    'start': 0,\n    'end': 0,\n    'name': 'tensors',\n    'type': 'tensors'\n  }],\n  'attrs': [{\n    'tfName': 'equation',\n    'name': 'equation',\n    'type': 'string'\n  }, {\n    'tfName': 'N',\n    'name': 'n',\n    'type': 'number',\n    'defaultValue': 2\n  }, {\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype'\n  }]\n}];","map":{"version":3,"names":["json"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-converter/dist/operations/op_list/matrices.js"],"sourcesContent":["/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': '_FusedMatMul',\n        'category': 'matrices',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            },\n            {\n                'start': 2,\n                'end': 0,\n                'name': 'args',\n                'type': 'tensors'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'num_args',\n                'name': 'numArgs',\n                'type': 'number'\n            },\n            {\n                'tfName': 'fused_ops',\n                'name': 'fusedOps',\n                'type': 'string[]',\n                'defaultValue': []\n            },\n            {\n                'tfName': 'epsilon',\n                'name': 'epsilon',\n                'type': 'number',\n                'defaultValue': 0.0001\n            },\n            {\n                'tfName': 'transpose_a',\n                'name': 'transposeA',\n                'type': 'bool',\n                'defaultValue': false\n            },\n            {\n                'tfName': 'transpose_b',\n                'name': 'transposeB',\n                'type': 'bool',\n                'defaultValue': false\n            },\n            {\n                'tfName': 'leakyrelu_alpha',\n                'name': 'leakyreluAlpha',\n                'type': 'number',\n                'defaultValue': 0.2\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'MatMul',\n        'category': 'matrices',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'transpose_a',\n                'name': 'transposeA',\n                'type': 'bool',\n                'defaultValue': false\n            },\n            {\n                'tfName': 'transpose_b',\n                'name': 'transposeB',\n                'type': 'bool',\n                'defaultValue': false\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'BatchMatMul',\n        'category': 'matrices',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'adj_x',\n                'name': 'transposeA',\n                'type': 'bool',\n                'defaultValue': false\n            },\n            {\n                'tfName': 'adj_y',\n                'name': 'transposeB',\n                'type': 'bool',\n                'defaultValue': false\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'BatchMatMulV2',\n        'category': 'matrices',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'a',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'b',\n                'type': 'tensor'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'adj_x',\n                'name': 'transposeA',\n                'type': 'bool',\n                'defaultValue': false\n            },\n            {\n                'tfName': 'adj_y',\n                'name': 'transposeB',\n                'type': 'bool',\n                'defaultValue': false\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Transpose',\n        'category': 'matrices',\n        'inputs': [\n            {\n                'start': 0,\n                'name': 'x',\n                'type': 'tensor'\n            },\n            {\n                'start': 1,\n                'name': 'perm',\n                'type': 'number[]'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype',\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Einsum',\n        'category': 'matrices',\n        'inputs': [\n            {\n                'start': 0,\n                'end': 0,\n                'name': 'tensors',\n                'type': 'tensors'\n            }\n        ],\n        'attrs': [\n            {\n                'tfName': 'equation',\n                'name': 'equation',\n                'type': 'string'\n            },\n            {\n                'tfName': 'N',\n                'name': 'n',\n                'type': 'number',\n                'defaultValue': 2\n            },\n            {\n                'tfName': 'T',\n                'name': 'dtype',\n                'type': 'dtype'\n            }\n        ]\n    }\n];\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}