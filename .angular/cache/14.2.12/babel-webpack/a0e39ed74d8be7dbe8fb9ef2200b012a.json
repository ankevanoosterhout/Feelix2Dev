{"ast":null,"code":"// https://github.com/toji/gl-matrix/issues/329\nimport { mat4, vec3 } from 'gl-matrix';\nimport { RAD2DEG } from './constants.js';\nimport { smallestDifferenceQuaternion } from './quaternion.js';\nconst tempPos = new Float64Array(3);\nconst tempQuat = new Float64Array(4);\nconst tempPos2 = new Float64Array(3);\nconst tempQuat2 = new Float64Array(4);\n/**\r\n * Returns an euler angle representation of a quaternion\r\n * @param {vec3} out Euler angles, pitch-yaw-roll\r\n * @param {quat} mat Quaternion\r\n * @return {vec3} out\r\n */\n\nexport function getEuler(out, quat) {\n  // https://math.stackexchange.com/questions/2975109/how-to-convert-euler-angles-to-quaternions-and-get-the-same-euler-angles-back-fr\n  const [x, y, z, w] = quat;\n  const t0 = 2.0 * (w * x + y * z);\n  const t1 = 1.0 - 2.0 * (x * x + y * y);\n  const roll = Math.atan2(t0, t1);\n  let t2 = 2.0 * (w * y - z * x);\n  t2 = t2 > 1.0 ? 1.0 : t2;\n  t2 = t2 < -1.0 ? -1.0 : t2;\n  const pitch = Math.asin(t2);\n  const t3 = 2.0 * (w * z + x * y);\n  const t4 = 1.0 - 2.0 * (y * y + z * z);\n  const yaw = Math.atan2(t3, t4);\n  out[0] = roll * RAD2DEG;\n  out[1] = pitch * RAD2DEG;\n  out[2] = yaw * RAD2DEG;\n  return out;\n}\nexport function getMatrixDifference(a, b, outPos, outQuat) {\n  mat4.getTranslation(tempPos, a);\n  mat4.getRotation(tempQuat, a);\n  mat4.getTranslation(tempPos2, b);\n  mat4.getRotation(tempQuat2, b);\n  vec3.subtract(outPos, tempPos, tempPos2);\n  smallestDifferenceQuaternion(outQuat, tempQuat, tempQuat2); // error of A - B\n}","map":{"version":3,"names":["mat4","vec3","RAD2DEG","smallestDifferenceQuaternion","tempPos","Float64Array","tempQuat","tempPos2","tempQuat2","getEuler","out","quat","x","y","z","w","t0","t1","roll","Math","atan2","t2","pitch","asin","t3","t4","yaw","getMatrixDifference","a","b","outPos","outQuat","getTranslation","getRotation","subtract"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/closed-chain-ik/src/core/utils/glmatrix.js"],"sourcesContent":["// https://github.com/toji/gl-matrix/issues/329\r\nimport { mat4, vec3 } from 'gl-matrix';\r\nimport { RAD2DEG } from './constants.js';\r\nimport { smallestDifferenceQuaternion } from './quaternion.js';\r\n\r\nconst tempPos = new Float64Array( 3 );\r\nconst tempQuat = new Float64Array( 4 );\r\nconst tempPos2 = new Float64Array( 3 );\r\nconst tempQuat2 = new Float64Array( 4 );\r\n\r\n/**\r\n * Returns an euler angle representation of a quaternion\r\n * @param {vec3} out Euler angles, pitch-yaw-roll\r\n * @param {quat} mat Quaternion\r\n * @return {vec3} out\r\n */\r\nexport function getEuler( out, quat ) {\r\n\r\n\t// https://math.stackexchange.com/questions/2975109/how-to-convert-euler-angles-to-quaternions-and-get-the-same-euler-angles-back-fr\r\n\tconst [ x, y, z, w ] = quat;\r\n\r\n\tconst t0 = 2.0 * ( w * x + y * z );\r\n\tconst t1 = 1.0 - 2.0 * ( x * x + y * y );\r\n\tconst roll = Math.atan2( t0, t1 );\r\n\r\n\tlet t2 = 2.0 * ( w * y - z * x );\r\n\tt2 = t2 > 1.0 ? 1.0 : t2;\r\n\tt2 = t2 < - 1.0 ? - 1.0 : t2;\r\n\tconst pitch = Math.asin( t2 );\r\n\r\n\tconst t3 = 2.0 * ( w * z + x * y );\r\n\tconst t4 = 1.0 - 2.0 * ( y * y + z * z );\r\n\tconst yaw = Math.atan2( t3, t4 );\r\n\r\n\tout[ 0 ] = roll * RAD2DEG;\r\n\tout[ 1 ] = pitch * RAD2DEG;\r\n\tout[ 2 ] = yaw * RAD2DEG;\r\n\r\n\treturn out;\r\n\r\n}\r\n\r\nexport function getMatrixDifference( a, b, outPos, outQuat ) {\r\n\r\n\tmat4.getTranslation( tempPos, a );\r\n\tmat4.getRotation( tempQuat, a );\r\n\r\n\tmat4.getTranslation( tempPos2, b );\r\n\tmat4.getRotation( tempQuat2, b );\r\n\r\n\tvec3.subtract( outPos, tempPos, tempPos2 );\r\n\tsmallestDifferenceQuaternion( outQuat, tempQuat, tempQuat2 );\r\n\r\n\t// error of A - B\r\n\r\n}\r\n"],"mappings":"AAAA;AACA,SAASA,IAAT,EAAeC,IAAf,QAA2B,WAA3B;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,4BAAT,QAA6C,iBAA7C;AAEA,MAAMC,OAAO,GAAG,IAAIC,YAAJ,CAAkB,CAAlB,CAAhB;AACA,MAAMC,QAAQ,GAAG,IAAID,YAAJ,CAAkB,CAAlB,CAAjB;AACA,MAAME,QAAQ,GAAG,IAAIF,YAAJ,CAAkB,CAAlB,CAAjB;AACA,MAAMG,SAAS,GAAG,IAAIH,YAAJ,CAAkB,CAAlB,CAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASI,QAAT,CAAmBC,GAAnB,EAAwBC,IAAxB,EAA+B;EAErC;EACA,MAAM,CAAEC,CAAF,EAAKC,CAAL,EAAQC,CAAR,EAAWC,CAAX,IAAiBJ,IAAvB;EAEA,MAAMK,EAAE,GAAG,OAAQD,CAAC,GAAGH,CAAJ,GAAQC,CAAC,GAAGC,CAApB,CAAX;EACA,MAAMG,EAAE,GAAG,MAAM,OAAQL,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAApB,CAAjB;EACA,MAAMK,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAYJ,EAAZ,EAAgBC,EAAhB,CAAb;EAEA,IAAII,EAAE,GAAG,OAAQN,CAAC,GAAGF,CAAJ,GAAQC,CAAC,GAAGF,CAApB,CAAT;EACAS,EAAE,GAAGA,EAAE,GAAG,GAAL,GAAW,GAAX,GAAiBA,EAAtB;EACAA,EAAE,GAAGA,EAAE,GAAG,CAAE,GAAP,GAAa,CAAE,GAAf,GAAqBA,EAA1B;EACA,MAAMC,KAAK,GAAGH,IAAI,CAACI,IAAL,CAAWF,EAAX,CAAd;EAEA,MAAMG,EAAE,GAAG,OAAQT,CAAC,GAAGD,CAAJ,GAAQF,CAAC,GAAGC,CAApB,CAAX;EACA,MAAMY,EAAE,GAAG,MAAM,OAAQZ,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAApB,CAAjB;EACA,MAAMY,GAAG,GAAGP,IAAI,CAACC,KAAL,CAAYI,EAAZ,EAAgBC,EAAhB,CAAZ;EAEAf,GAAG,CAAE,CAAF,CAAH,GAAWQ,IAAI,GAAGhB,OAAlB;EACAQ,GAAG,CAAE,CAAF,CAAH,GAAWY,KAAK,GAAGpB,OAAnB;EACAQ,GAAG,CAAE,CAAF,CAAH,GAAWgB,GAAG,GAAGxB,OAAjB;EAEA,OAAOQ,GAAP;AAEA;AAED,OAAO,SAASiB,mBAAT,CAA8BC,CAA9B,EAAiCC,CAAjC,EAAoCC,MAApC,EAA4CC,OAA5C,EAAsD;EAE5D/B,IAAI,CAACgC,cAAL,CAAqB5B,OAArB,EAA8BwB,CAA9B;EACA5B,IAAI,CAACiC,WAAL,CAAkB3B,QAAlB,EAA4BsB,CAA5B;EAEA5B,IAAI,CAACgC,cAAL,CAAqBzB,QAArB,EAA+BsB,CAA/B;EACA7B,IAAI,CAACiC,WAAL,CAAkBzB,SAAlB,EAA6BqB,CAA7B;EAEA5B,IAAI,CAACiC,QAAL,CAAeJ,MAAf,EAAuB1B,OAAvB,EAAgCG,QAAhC;EACAJ,4BAA4B,CAAE4B,OAAF,EAAWzB,QAAX,EAAqBE,SAArB,CAA5B,CAT4D,CAW5D;AAEA"},"metadata":{},"sourceType":"module"}