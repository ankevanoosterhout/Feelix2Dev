{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const EPSILON_FLOAT32 = 1e-7;\nexport const EPSILON_FLOAT16 = 1e-4;\n/** Convenient class for storing tensor-related data. */\n\nexport class DataStorage {\n  constructor(backend, dataMover) {\n    this.backend = backend;\n    this.dataMover = dataMover;\n    this.data = new WeakMap();\n    this.dataIdsCount = 0;\n  }\n\n  get(dataId) {\n    if (!this.data.has(dataId)) {\n      this.dataMover.moveData(this.backend, dataId);\n    }\n\n    return this.data.get(dataId);\n  }\n\n  set(dataId, value) {\n    this.dataIdsCount++;\n    this.data.set(dataId, value);\n  }\n\n  has(dataId) {\n    return this.data.has(dataId);\n  }\n\n  delete(dataId) {\n    this.dataIdsCount--;\n    return this.data.delete(dataId);\n  }\n\n  numDataIds() {\n    return this.dataIdsCount;\n  }\n\n}\n/**\n * The interface that defines the kernels that should be implemented when\n * adding a new backend. New backends don't need to implement every one of the\n * methods, this can be done gradually (throw an error for unimplemented\n * methods).\n */\n\nexport class KernelBackend {\n  refCount(dataId) {\n    return notYetImplemented('refCount');\n  }\n\n  incRef(dataId) {\n    return notYetImplemented('incRef');\n  }\n\n  timerAvailable() {\n    return true;\n  }\n\n  time(f) {\n    return notYetImplemented('time');\n  }\n\n  read(dataId) {\n    return notYetImplemented('read');\n  }\n\n  readSync(dataId) {\n    return notYetImplemented('readSync');\n  }\n\n  readToGPU(dataId, options) {\n    return notYetImplemented('readToGPU');\n  }\n\n  numDataIds() {\n    return notYetImplemented('numDataIds');\n  }\n\n  disposeData(dataId, force) {\n    return notYetImplemented('disposeData');\n  }\n\n  write(values, shape, dtype) {\n    return notYetImplemented('write');\n  }\n\n  move(dataId, values, shape, dtype, refCount) {\n    return notYetImplemented('move');\n  }\n\n  memory() {\n    return notYetImplemented('memory');\n  }\n  /** Returns the highest precision for floats in bits (e.g. 16 or 32) */\n\n\n  floatPrecision() {\n    return notYetImplemented('floatPrecision');\n  }\n  /** Returns the smallest representable number.  */\n\n\n  epsilon() {\n    return this.floatPrecision() === 32 ? EPSILON_FLOAT32 : EPSILON_FLOAT16;\n  }\n\n  dispose() {\n    return notYetImplemented('dispose');\n  }\n\n}\n\nfunction notYetImplemented(kernelName) {\n  throw new Error(`'${kernelName}' not yet implemented or not found in the registry. ` + `This kernel may not be supported by the tfjs backend you have chosen`);\n}","map":{"version":3,"names":["EPSILON_FLOAT32","EPSILON_FLOAT16","DataStorage","constructor","backend","dataMover","data","WeakMap","dataIdsCount","get","dataId","has","moveData","set","value","delete","numDataIds","KernelBackend","refCount","notYetImplemented","incRef","timerAvailable","time","f","read","readSync","readToGPU","options","disposeData","force","write","values","shape","dtype","move","memory","floatPrecision","epsilon","dispose","kernelName","Error"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-core/dist/backends/backend.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const EPSILON_FLOAT32 = 1e-7;\nexport const EPSILON_FLOAT16 = 1e-4;\n/** Convenient class for storing tensor-related data. */\nexport class DataStorage {\n    constructor(backend, dataMover) {\n        this.backend = backend;\n        this.dataMover = dataMover;\n        this.data = new WeakMap();\n        this.dataIdsCount = 0;\n    }\n    get(dataId) {\n        if (!this.data.has(dataId)) {\n            this.dataMover.moveData(this.backend, dataId);\n        }\n        return this.data.get(dataId);\n    }\n    set(dataId, value) {\n        this.dataIdsCount++;\n        this.data.set(dataId, value);\n    }\n    has(dataId) {\n        return this.data.has(dataId);\n    }\n    delete(dataId) {\n        this.dataIdsCount--;\n        return this.data.delete(dataId);\n    }\n    numDataIds() {\n        return this.dataIdsCount;\n    }\n}\n/**\n * The interface that defines the kernels that should be implemented when\n * adding a new backend. New backends don't need to implement every one of the\n * methods, this can be done gradually (throw an error for unimplemented\n * methods).\n */\nexport class KernelBackend {\n    refCount(dataId) {\n        return notYetImplemented('refCount');\n    }\n    incRef(dataId) {\n        return notYetImplemented('incRef');\n    }\n    timerAvailable() {\n        return true;\n    }\n    time(f) {\n        return notYetImplemented('time');\n    }\n    read(dataId) {\n        return notYetImplemented('read');\n    }\n    readSync(dataId) {\n        return notYetImplemented('readSync');\n    }\n    readToGPU(dataId, options) {\n        return notYetImplemented('readToGPU');\n    }\n    numDataIds() {\n        return notYetImplemented('numDataIds');\n    }\n    disposeData(dataId, force) {\n        return notYetImplemented('disposeData');\n    }\n    write(values, shape, dtype) {\n        return notYetImplemented('write');\n    }\n    move(dataId, values, shape, dtype, refCount) {\n        return notYetImplemented('move');\n    }\n    memory() {\n        return notYetImplemented('memory');\n    }\n    /** Returns the highest precision for floats in bits (e.g. 16 or 32) */\n    floatPrecision() {\n        return notYetImplemented('floatPrecision');\n    }\n    /** Returns the smallest representable number.  */\n    epsilon() {\n        return this.floatPrecision() === 32 ? EPSILON_FLOAT32 : EPSILON_FLOAT16;\n    }\n    dispose() {\n        return notYetImplemented('dispose');\n    }\n}\nfunction notYetImplemented(kernelName) {\n    throw new Error(`'${kernelName}' not yet implemented or not found in the registry. ` +\n        `This kernel may not be supported by the tfjs backend you have chosen`);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}