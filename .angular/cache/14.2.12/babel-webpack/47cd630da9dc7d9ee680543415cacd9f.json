{"ast":null,"code":"import { getCoordsDataType } from './shader_compiler';\nexport class GatherNDProgram {\n  constructor(sliceDim, strides, shape, paramsShape) {\n    this.sliceDim = sliceDim;\n    this.strides = strides;\n    this.paramsShape = paramsShape;\n    this.variableNames = ['x', 'indices'];\n    this.outputShape = shape;\n    const dtype = getCoordsDataType(shape.length);\n    let mainLoop = `\n    int index;`;\n\n    for (let j = 0; j < this.sliceDim; j++) {\n      mainLoop += `\n          index = round(getIndices(coords[0], ${j}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[j]};\n          flattenIndex += index * ${this.strides[j]};`;\n    }\n\n    this.userCode = `\n         void main() {\n          ${dtype} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${mainLoop}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `;\n  }\n\n}","map":{"version":3,"names":["getCoordsDataType","GatherNDProgram","constructor","sliceDim","strides","shape","paramsShape","variableNames","outputShape","dtype","length","mainLoop","j","userCode"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-webgl/dist/gather_nd_gpu.js"],"sourcesContent":["import { getCoordsDataType } from './shader_compiler';\nexport class GatherNDProgram {\n    constructor(sliceDim, strides, shape, paramsShape) {\n        this.sliceDim = sliceDim;\n        this.strides = strides;\n        this.paramsShape = paramsShape;\n        this.variableNames = ['x', 'indices'];\n        this.outputShape = shape;\n        const dtype = getCoordsDataType(shape.length);\n        let mainLoop = `\n    int index;`;\n        for (let j = 0; j < this.sliceDim; j++) {\n            mainLoop += `\n          index = round(getIndices(coords[0], ${j}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[j]};\n          flattenIndex += index * ${this.strides[j]};`;\n        }\n        this.userCode = `\n         void main() {\n          ${dtype} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${mainLoop}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `;\n    }\n}\n"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,mBAAlC;AACA,OAAO,MAAMC,eAAN,CAAsB;EACzBC,WAAW,CAACC,QAAD,EAAWC,OAAX,EAAoBC,KAApB,EAA2BC,WAA3B,EAAwC;IAC/C,KAAKH,QAAL,GAAgBA,QAAhB;IACA,KAAKC,OAAL,GAAeA,OAAf;IACA,KAAKE,WAAL,GAAmBA,WAAnB;IACA,KAAKC,aAAL,GAAqB,CAAC,GAAD,EAAM,SAAN,CAArB;IACA,KAAKC,WAAL,GAAmBH,KAAnB;IACA,MAAMI,KAAK,GAAGT,iBAAiB,CAACK,KAAK,CAACK,MAAP,CAA/B;IACA,IAAIC,QAAQ,GAAI;AACxB,eADQ;;IAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKT,QAAzB,EAAmCS,CAAC,EAApC,EAAwC;MACpCD,QAAQ,IAAK;AACzB,gDAAgDC,CAAE;AAClD;AACA,sDAAsD,KAAKN,WAAL,CAAiBM,CAAjB,CAAoB;AAC1E,oCAAoC,KAAKR,OAAL,CAAaQ,CAAb,CAAgB,GAJxC;IAKH;;IACD,KAAKC,QAAL,GAAiB;AACzB;AACA,YAAYJ,KAAM;AAClB;AACA;AACA;AACA,YAAYE,QAAS;AACrB;AACA;AACA;AACA,OAVQ;EAWH;;AA5BwB"},"metadata":{},"sourceType":"module"}