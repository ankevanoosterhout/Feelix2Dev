{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Selu } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../utils/unary_utils';\nconst scaleAlpha = backend_util.SELU_SCALEALPHA;\nconst scale = backend_util.SELU_SCALE;\nexport const selu = unaryKernelFunc(Selu, xi => {\n  if (xi >= 0) {\n    return scale * xi;\n  } else {\n    return scaleAlpha * (Math.exp(xi) - 1);\n  }\n});\nexport const seluConfig = {\n  kernelName: Selu,\n  backendName: 'cpu',\n  kernelFunc: selu\n};","map":{"version":3,"names":["backend_util","Selu","unaryKernelFunc","scaleAlpha","SELU_SCALEALPHA","scale","SELU_SCALE","selu","xi","Math","exp","seluConfig","kernelName","backendName","kernelFunc"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Selu.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Selu } from '@tensorflow/tfjs-core';\nimport { unaryKernelFunc } from '../utils/unary_utils';\nconst scaleAlpha = backend_util.SELU_SCALEALPHA;\nconst scale = backend_util.SELU_SCALE;\nexport const selu = unaryKernelFunc(Selu, (xi) => {\n    if (xi >= 0) {\n        return scale * xi;\n    }\n    else {\n        return scaleAlpha * (Math.exp(xi) - 1);\n    }\n});\nexport const seluConfig = {\n    kernelName: Selu,\n    backendName: 'cpu',\n    kernelFunc: selu,\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAT,EAAuBC,IAAvB,QAAmC,uBAAnC;AACA,SAASC,eAAT,QAAgC,sBAAhC;AACA,MAAMC,UAAU,GAAGH,YAAY,CAACI,eAAhC;AACA,MAAMC,KAAK,GAAGL,YAAY,CAACM,UAA3B;AACA,OAAO,MAAMC,IAAI,GAAGL,eAAe,CAACD,IAAD,EAAQO,EAAD,IAAQ;EAC9C,IAAIA,EAAE,IAAI,CAAV,EAAa;IACT,OAAOH,KAAK,GAAGG,EAAf;EACH,CAFD,MAGK;IACD,OAAOL,UAAU,IAAIM,IAAI,CAACC,GAAL,CAASF,EAAT,IAAe,CAAnB,CAAjB;EACH;AACJ,CAPkC,CAA5B;AAQP,OAAO,MAAMG,UAAU,GAAG;EACtBC,UAAU,EAAEX,IADU;EAEtBY,WAAW,EAAE,KAFS;EAGtBC,UAAU,EAAEP;AAHU,CAAnB"},"metadata":{},"sourceType":"module"}