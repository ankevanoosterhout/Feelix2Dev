{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Abs, ComplexAbs } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes absolute value element-wise: `abs(x)`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.abs().print();  // or tf.abs(x)\n * ```\n * @param x The input `tf.Tensor`.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\n\nfunction abs_(x) {\n  const $x = convertToTensor(x, 'x', 'abs');\n\n  if ($x.dtype === 'complex64') {\n    const inputs = {\n      x: $x\n    };\n    return ENGINE.runKernel(ComplexAbs, inputs);\n  } else {\n    const inputs = {\n      x: $x\n    };\n    return ENGINE.runKernel(Abs, inputs);\n  }\n}\n\nexport const abs = op({\n  abs_\n});","map":{"version":3,"names":["ENGINE","Abs","ComplexAbs","convertToTensor","op","abs_","x","$x","dtype","inputs","runKernel","abs"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-core/dist/ops/abs.js"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { Abs, ComplexAbs } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n/**\n * Computes absolute value element-wise: `abs(x)`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.abs().print();  // or tf.abs(x)\n * ```\n * @param x The input `tf.Tensor`.\n *\n * @doc {heading: 'Operations', subheading: 'Basic math'}\n */\nfunction abs_(x) {\n    const $x = convertToTensor(x, 'x', 'abs');\n    if ($x.dtype === 'complex64') {\n        const inputs = { x: $x };\n        return ENGINE.runKernel(ComplexAbs, inputs);\n    }\n    else {\n        const inputs = { x: $x };\n        return ENGINE.runKernel(Abs, inputs);\n    }\n}\nexport const abs = op({ abs_ });\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAT,QAAuB,WAAvB;AACA,SAASC,GAAT,EAAcC,UAAd,QAAgC,iBAAhC;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,EAAT,QAAmB,aAAnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,IAAT,CAAcC,CAAd,EAAiB;EACb,MAAMC,EAAE,GAAGJ,eAAe,CAACG,CAAD,EAAI,GAAJ,EAAS,KAAT,CAA1B;;EACA,IAAIC,EAAE,CAACC,KAAH,KAAa,WAAjB,EAA8B;IAC1B,MAAMC,MAAM,GAAG;MAAEH,CAAC,EAAEC;IAAL,CAAf;IACA,OAAOP,MAAM,CAACU,SAAP,CAAiBR,UAAjB,EAA6BO,MAA7B,CAAP;EACH,CAHD,MAIK;IACD,MAAMA,MAAM,GAAG;MAAEH,CAAC,EAAEC;IAAL,CAAf;IACA,OAAOP,MAAM,CAACU,SAAP,CAAiBT,GAAjB,EAAsBQ,MAAtB,CAAP;EACH;AACJ;;AACD,OAAO,MAAME,GAAG,GAAGP,EAAE,CAAC;EAAEC;AAAF,CAAD,CAAd"},"metadata":{},"sourceType":"module"}