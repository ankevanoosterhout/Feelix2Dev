{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, MirrorPad } from '@tensorflow/tfjs-core';\nimport { MirrorPadProgram } from '../mirror_pad_gpu';\nimport { MirrorPadPackedProgram } from '../mirror_pad_packed_gpu';\nexport const mirrorPadKernelFunc = ({\n  inputs,\n  backend,\n  attrs\n}) => {\n  const {\n    x\n  } = inputs;\n  const {\n    paddings,\n    mode\n  } = attrs;\n  const program = env().getBool('WEBGL_PACK_ARRAY_OPERATIONS') ? new MirrorPadPackedProgram(x.shape, paddings, mode) : new MirrorPadProgram(x.shape, paddings, mode);\n  const output = backend.runWebGLProgram(program, [x], x.dtype);\n  return output;\n};\nexport const mirrorPadConfig = {\n  kernelName: MirrorPad,\n  backendName: 'webgl',\n  kernelFunc: mirrorPadKernelFunc\n};","map":{"version":3,"names":["env","MirrorPad","MirrorPadProgram","MirrorPadPackedProgram","mirrorPadKernelFunc","inputs","backend","attrs","x","paddings","mode","program","getBool","shape","output","runWebGLProgram","dtype","mirrorPadConfig","kernelName","backendName","kernelFunc"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/MirrorPad.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { env, MirrorPad } from '@tensorflow/tfjs-core';\nimport { MirrorPadProgram } from '../mirror_pad_gpu';\nimport { MirrorPadPackedProgram } from '../mirror_pad_packed_gpu';\nexport const mirrorPadKernelFunc = ({ inputs, backend, attrs }) => {\n    const { x } = inputs;\n    const { paddings, mode } = attrs;\n    const program = env().getBool('WEBGL_PACK_ARRAY_OPERATIONS') ?\n        new MirrorPadPackedProgram(x.shape, paddings, mode) :\n        new MirrorPadProgram(x.shape, paddings, mode);\n    const output = backend.runWebGLProgram(program, [x], x.dtype);\n    return output;\n};\nexport const mirrorPadConfig = {\n    kernelName: MirrorPad,\n    backendName: 'webgl',\n    kernelFunc: mirrorPadKernelFunc,\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,GAAT,EAAcC,SAAd,QAA+B,uBAA/B;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,SAASC,sBAAT,QAAuC,0BAAvC;AACA,OAAO,MAAMC,mBAAmB,GAAG,CAAC;EAAEC,MAAF;EAAUC,OAAV;EAAmBC;AAAnB,CAAD,KAAgC;EAC/D,MAAM;IAAEC;EAAF,IAAQH,MAAd;EACA,MAAM;IAAEI,QAAF;IAAYC;EAAZ,IAAqBH,KAA3B;EACA,MAAMI,OAAO,GAAGX,GAAG,GAAGY,OAAN,CAAc,6BAAd,IACZ,IAAIT,sBAAJ,CAA2BK,CAAC,CAACK,KAA7B,EAAoCJ,QAApC,EAA8CC,IAA9C,CADY,GAEZ,IAAIR,gBAAJ,CAAqBM,CAAC,CAACK,KAAvB,EAA8BJ,QAA9B,EAAwCC,IAAxC,CAFJ;EAGA,MAAMI,MAAM,GAAGR,OAAO,CAACS,eAAR,CAAwBJ,OAAxB,EAAiC,CAACH,CAAD,CAAjC,EAAsCA,CAAC,CAACQ,KAAxC,CAAf;EACA,OAAOF,MAAP;AACH,CARM;AASP,OAAO,MAAMG,eAAe,GAAG;EAC3BC,UAAU,EAAEjB,SADe;EAE3BkB,WAAW,EAAE,OAFc;EAG3BC,UAAU,EAAEhB;AAHe,CAAxB"},"metadata":{},"sourceType":"module"}