{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Select } from '../kernel_names';\nimport { cast } from '../ops/cast';\nimport { logicalNot } from '../ops/logical_not';\nimport { mul } from '../ops/mul';\nimport { zerosLike } from '../ops/zeros_like';\nexport const selectGradConfig = {\n  kernelName: Select,\n  inputsToSave: ['condition'],\n  gradFunc: (dy, saved) => {\n    const [condition] = saved;\n    return {\n      // TODO(julianoks): Return null for condition gradient\n      // when backprop supports it.\n      condition: () => cast(zerosLike(condition), 'float32'),\n      t: () => mul(dy, cast(condition, dy.dtype)),\n      e: () => mul(dy, cast(logicalNot(condition), dy.dtype))\n    };\n  }\n};","map":{"version":3,"names":["Select","cast","logicalNot","mul","zerosLike","selectGradConfig","kernelName","inputsToSave","gradFunc","dy","saved","condition","t","dtype","e"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-core/dist/gradients/Select_grad.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Select } from '../kernel_names';\nimport { cast } from '../ops/cast';\nimport { logicalNot } from '../ops/logical_not';\nimport { mul } from '../ops/mul';\nimport { zerosLike } from '../ops/zeros_like';\nexport const selectGradConfig = {\n    kernelName: Select,\n    inputsToSave: ['condition'],\n    gradFunc: (dy, saved) => {\n        const [condition] = saved;\n        return {\n            // TODO(julianoks): Return null for condition gradient\n            // when backprop supports it.\n            condition: () => cast(zerosLike(condition), 'float32'),\n            t: () => mul(dy, cast(condition, dy.dtype)),\n            e: () => mul(dy, cast(logicalNot(condition), dy.dtype))\n        };\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAT,QAAuB,iBAAvB;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAO,MAAMC,gBAAgB,GAAG;EAC5BC,UAAU,EAAEN,MADgB;EAE5BO,YAAY,EAAE,CAAC,WAAD,CAFc;EAG5BC,QAAQ,EAAE,CAACC,EAAD,EAAKC,KAAL,KAAe;IACrB,MAAM,CAACC,SAAD,IAAcD,KAApB;IACA,OAAO;MACH;MACA;MACAC,SAAS,EAAE,MAAMV,IAAI,CAACG,SAAS,CAACO,SAAD,CAAV,EAAuB,SAAvB,CAHlB;MAIHC,CAAC,EAAE,MAAMT,GAAG,CAACM,EAAD,EAAKR,IAAI,CAACU,SAAD,EAAYF,EAAE,CAACI,KAAf,CAAT,CAJT;MAKHC,CAAC,EAAE,MAAMX,GAAG,CAACM,EAAD,EAAKR,IAAI,CAACC,UAAU,CAACS,SAAD,CAAX,EAAwBF,EAAE,CAACI,KAA3B,CAAT;IALT,CAAP;EAOH;AAZ2B,CAAzB"},"metadata":{},"sourceType":"module"}