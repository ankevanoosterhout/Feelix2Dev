{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { decodeString, encodeString } from '../util'; // Utilities needed by backend consumers of tf-core.\n\nexport * from '../ops/axis_util';\nexport * from '../ops/broadcast_util';\nexport * from '../ops/concat_util';\nexport * from '../ops/conv_util';\nexport * from '../ops/fused_util';\nexport * from '../ops/ragged_to_dense_util';\nexport * from '../ops/reduce_util';\nimport * as slice_util from '../ops/slice_util';\nexport { slice_util };\nexport { upcastType } from '../types';\nexport * from '../ops/rotate_util';\nexport * from '../ops/array_ops_util';\nexport * from '../ops/gather_nd_util';\nexport * from '../ops/scatter_nd_util';\nexport * from '../ops/selu_util';\nexport * from '../ops/fused_util';\nexport * from '../ops/erf_util';\nexport * from '../log';\nexport * from '../backends/complex_util';\nexport * from '../backends/einsum_util';\nexport * from '../ops/split_util';\nexport * from '../ops/sparse/sparse_fill_empty_rows_util';\nexport * from '../ops/sparse/sparse_reshape_util';\nexport * from '../ops/sparse/sparse_segment_reduction_util';\nimport * as segment_util from '../ops/segment_util';\nexport { segment_util };\nexport function fromUint8ToStringArray(vals) {\n  try {\n    // Decode the bytes into string.\n    return vals.map(val => decodeString(val));\n  } catch (err) {\n    throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${err}`);\n  }\n}\nexport function fromStringArrayToUint8(strings) {\n  return strings.map(s => encodeString(s));\n}","map":{"version":3,"names":["decodeString","encodeString","slice_util","upcastType","segment_util","fromUint8ToStringArray","vals","map","val","err","Error","fromStringArrayToUint8","strings","s"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-core/dist/backends/backend_util.js"],"sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { decodeString, encodeString } from '../util';\n// Utilities needed by backend consumers of tf-core.\nexport * from '../ops/axis_util';\nexport * from '../ops/broadcast_util';\nexport * from '../ops/concat_util';\nexport * from '../ops/conv_util';\nexport * from '../ops/fused_util';\nexport * from '../ops/ragged_to_dense_util';\nexport * from '../ops/reduce_util';\nimport * as slice_util from '../ops/slice_util';\nexport { slice_util };\nexport { upcastType } from '../types';\nexport * from '../ops/rotate_util';\nexport * from '../ops/array_ops_util';\nexport * from '../ops/gather_nd_util';\nexport * from '../ops/scatter_nd_util';\nexport * from '../ops/selu_util';\nexport * from '../ops/fused_util';\nexport * from '../ops/erf_util';\nexport * from '../log';\nexport * from '../backends/complex_util';\nexport * from '../backends/einsum_util';\nexport * from '../ops/split_util';\nexport * from '../ops/sparse/sparse_fill_empty_rows_util';\nexport * from '../ops/sparse/sparse_reshape_util';\nexport * from '../ops/sparse/sparse_segment_reduction_util';\nimport * as segment_util from '../ops/segment_util';\nexport { segment_util };\nexport function fromUint8ToStringArray(vals) {\n    try {\n        // Decode the bytes into string.\n        return vals.map(val => decodeString(val));\n    }\n    catch (err) {\n        throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${err}`);\n    }\n}\nexport function fromStringArrayToUint8(strings) {\n    return strings.map(s => encodeString(s));\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAT,EAAuBC,YAAvB,QAA2C,SAA3C,C,CACA;;AACA,cAAc,kBAAd;AACA,cAAc,uBAAd;AACA,cAAc,oBAAd;AACA,cAAc,kBAAd;AACA,cAAc,mBAAd;AACA,cAAc,6BAAd;AACA,cAAc,oBAAd;AACA,OAAO,KAAKC,UAAZ,MAA4B,mBAA5B;AACA,SAASA,UAAT;AACA,SAASC,UAAT,QAA2B,UAA3B;AACA,cAAc,oBAAd;AACA,cAAc,uBAAd;AACA,cAAc,uBAAd;AACA,cAAc,wBAAd;AACA,cAAc,kBAAd;AACA,cAAc,mBAAd;AACA,cAAc,iBAAd;AACA,cAAc,QAAd;AACA,cAAc,0BAAd;AACA,cAAc,yBAAd;AACA,cAAc,mBAAd;AACA,cAAc,2CAAd;AACA,cAAc,mCAAd;AACA,cAAc,6CAAd;AACA,OAAO,KAAKC,YAAZ,MAA8B,qBAA9B;AACA,SAASA,YAAT;AACA,OAAO,SAASC,sBAAT,CAAgCC,IAAhC,EAAsC;EACzC,IAAI;IACA;IACA,OAAOA,IAAI,CAACC,GAAL,CAASC,GAAG,IAAIR,YAAY,CAACQ,GAAD,CAA5B,CAAP;EACH,CAHD,CAIA,OAAOC,GAAP,EAAY;IACR,MAAM,IAAIC,KAAJ,CAAW,4DAA2DD,GAAI,EAA1E,CAAN;EACH;AACJ;AACD,OAAO,SAASE,sBAAT,CAAgCC,OAAhC,EAAyC;EAC5C,OAAOA,OAAO,CAACL,GAAR,CAAYM,CAAC,IAAIZ,YAAY,CAACY,CAAD,CAA7B,CAAP;AACH"},"metadata":{},"sourceType":"module"}