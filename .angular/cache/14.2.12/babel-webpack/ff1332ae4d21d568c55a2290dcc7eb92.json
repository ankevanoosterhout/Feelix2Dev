{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { MirrorPad } from '../kernel_names';\nimport { slice } from '../ops/slice';\nexport const mirrorPadGradConfig = {\n  kernelName: MirrorPad,\n  inputsToSave: ['x'],\n  gradFunc: (dy, saved, attrs) => {\n    // Pad introduces values around the original tensor, so the gradient\n    // slices the original shape out of the gradient.\n    const x = saved[0];\n    const {\n      paddings\n    } = attrs;\n    const begin = paddings.map(p => p[0]);\n    return {\n      x: () => slice(dy, begin, x.shape)\n    };\n  }\n};","map":{"version":3,"names":["MirrorPad","slice","mirrorPadGradConfig","kernelName","inputsToSave","gradFunc","dy","saved","attrs","x","paddings","begin","map","p","shape"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-core/dist/gradients/MirrorPad_grad.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { MirrorPad } from '../kernel_names';\nimport { slice } from '../ops/slice';\nexport const mirrorPadGradConfig = {\n    kernelName: MirrorPad,\n    inputsToSave: ['x'],\n    gradFunc: (dy, saved, attrs) => {\n        // Pad introduces values around the original tensor, so the gradient\n        // slices the original shape out of the gradient.\n        const x = saved[0];\n        const { paddings } = attrs;\n        const begin = paddings.map(p => p[0]);\n        return { x: () => slice(dy, begin, x.shape) };\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,iBAA1B;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAO,MAAMC,mBAAmB,GAAG;EAC/BC,UAAU,EAAEH,SADmB;EAE/BI,YAAY,EAAE,CAAC,GAAD,CAFiB;EAG/BC,QAAQ,EAAE,CAACC,EAAD,EAAKC,KAAL,EAAYC,KAAZ,KAAsB;IAC5B;IACA;IACA,MAAMC,CAAC,GAAGF,KAAK,CAAC,CAAD,CAAf;IACA,MAAM;MAAEG;IAAF,IAAeF,KAArB;IACA,MAAMG,KAAK,GAAGD,QAAQ,CAACE,GAAT,CAAaC,CAAC,IAAIA,CAAC,CAAC,CAAD,CAAnB,CAAd;IACA,OAAO;MAAEJ,CAAC,EAAE,MAAMR,KAAK,CAACK,EAAD,EAAKK,KAAL,EAAYF,CAAC,CAACK,KAAd;IAAhB,CAAP;EACH;AAV8B,CAA5B"},"metadata":{},"sourceType":"module"}