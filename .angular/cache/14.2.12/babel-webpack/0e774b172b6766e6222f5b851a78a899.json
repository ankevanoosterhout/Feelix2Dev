{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, kernel_impls, NonMaxSuppressionV4 } from '@tensorflow/tfjs-core';\nconst nonMaxSuppressionV4Impl = kernel_impls.nonMaxSuppressionV4Impl;\nexport function nonMaxSuppressionV4(args) {\n  backend_util.warn('tf.nonMaxSuppression() in webgl locks the UI thread. ' + 'Call tf.nonMaxSuppressionAsync() instead');\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    boxes,\n    scores\n  } = inputs;\n  const {\n    maxOutputSize,\n    iouThreshold,\n    scoreThreshold,\n    padToMaxOutputSize\n  } = attrs;\n  const boxesVals = backend.readSync(boxes.dataId);\n  const scoresVals = backend.readSync(scores.dataId);\n  const {\n    selectedIndices,\n    validOutputs\n  } = nonMaxSuppressionV4Impl(boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold, padToMaxOutputSize);\n  return [backend.makeTensorInfo([selectedIndices.length], 'int32', new Int32Array(selectedIndices)), backend.makeTensorInfo([], 'int32', new Int32Array([validOutputs]))];\n}\nexport const nonMaxSuppressionV4Config = {\n  kernelName: NonMaxSuppressionV4,\n  backendName: 'webgl',\n  kernelFunc: nonMaxSuppressionV4\n};","map":{"version":3,"names":["backend_util","kernel_impls","NonMaxSuppressionV4","nonMaxSuppressionV4Impl","nonMaxSuppressionV4","args","warn","inputs","backend","attrs","boxes","scores","maxOutputSize","iouThreshold","scoreThreshold","padToMaxOutputSize","boxesVals","readSync","dataId","scoresVals","selectedIndices","validOutputs","makeTensorInfo","length","Int32Array","nonMaxSuppressionV4Config","kernelName","backendName","kernelFunc"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/NonMaxSuppressionV4.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, kernel_impls, NonMaxSuppressionV4 } from '@tensorflow/tfjs-core';\nconst nonMaxSuppressionV4Impl = kernel_impls.nonMaxSuppressionV4Impl;\nexport function nonMaxSuppressionV4(args) {\n    backend_util.warn('tf.nonMaxSuppression() in webgl locks the UI thread. ' +\n        'Call tf.nonMaxSuppressionAsync() instead');\n    const { inputs, backend, attrs } = args;\n    const { boxes, scores } = inputs;\n    const { maxOutputSize, iouThreshold, scoreThreshold, padToMaxOutputSize } = attrs;\n    const boxesVals = backend.readSync(boxes.dataId);\n    const scoresVals = backend.readSync(scores.dataId);\n    const { selectedIndices, validOutputs } = nonMaxSuppressionV4Impl(boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold, padToMaxOutputSize);\n    return [\n        backend.makeTensorInfo([selectedIndices.length], 'int32', new Int32Array(selectedIndices)),\n        backend.makeTensorInfo([], 'int32', new Int32Array([validOutputs]))\n    ];\n}\nexport const nonMaxSuppressionV4Config = {\n    kernelName: NonMaxSuppressionV4,\n    backendName: 'webgl',\n    kernelFunc: nonMaxSuppressionV4\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAT,EAAuBC,YAAvB,EAAqCC,mBAArC,QAAgE,uBAAhE;AACA,MAAMC,uBAAuB,GAAGF,YAAY,CAACE,uBAA7C;AACA,OAAO,SAASC,mBAAT,CAA6BC,IAA7B,EAAmC;EACtCL,YAAY,CAACM,IAAb,CAAkB,0DACd,0CADJ;EAEA,MAAM;IAAEC,MAAF;IAAUC,OAAV;IAAmBC;EAAnB,IAA6BJ,IAAnC;EACA,MAAM;IAAEK,KAAF;IAASC;EAAT,IAAoBJ,MAA1B;EACA,MAAM;IAAEK,aAAF;IAAiBC,YAAjB;IAA+BC,cAA/B;IAA+CC;EAA/C,IAAsEN,KAA5E;EACA,MAAMO,SAAS,GAAGR,OAAO,CAACS,QAAR,CAAiBP,KAAK,CAACQ,MAAvB,CAAlB;EACA,MAAMC,UAAU,GAAGX,OAAO,CAACS,QAAR,CAAiBN,MAAM,CAACO,MAAxB,CAAnB;EACA,MAAM;IAAEE,eAAF;IAAmBC;EAAnB,IAAoClB,uBAAuB,CAACa,SAAD,EAAYG,UAAZ,EAAwBP,aAAxB,EAAuCC,YAAvC,EAAqDC,cAArD,EAAqEC,kBAArE,CAAjE;EACA,OAAO,CACHP,OAAO,CAACc,cAAR,CAAuB,CAACF,eAAe,CAACG,MAAjB,CAAvB,EAAiD,OAAjD,EAA0D,IAAIC,UAAJ,CAAeJ,eAAf,CAA1D,CADG,EAEHZ,OAAO,CAACc,cAAR,CAAuB,EAAvB,EAA2B,OAA3B,EAAoC,IAAIE,UAAJ,CAAe,CAACH,YAAD,CAAf,CAApC,CAFG,CAAP;AAIH;AACD,OAAO,MAAMI,yBAAyB,GAAG;EACrCC,UAAU,EAAExB,mBADyB;EAErCyB,WAAW,EAAE,OAFwB;EAGrCC,UAAU,EAAExB;AAHyB,CAAlC"},"metadata":{},"sourceType":"module"}