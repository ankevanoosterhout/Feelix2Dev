{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer } from '@tensorflow/tfjs-core';\nexport function scatterImpl(indices, updates, shape, outputSize, sliceSize, numUpdates, sliceRank, strides, defaultValue, sumDupeIndices) {\n  const flattenShape = [outputSize / sliceSize, sliceSize];\n  const indicesData = indices.values;\n  const updatesData = updates.values;\n\n  if (outputSize === 0) {\n    return buffer(shape, updates.dtype);\n  }\n\n  const outBuf = buffer(flattenShape, updates.dtype);\n\n  if (typeof defaultValue === 'string') {\n    outBuf.values.fill(defaultValue);\n  } else if (typeof defaultValue === 'number') {\n    outBuf.values.fill(defaultValue);\n  } else if (typeof defaultValue === 'boolean') {\n    outBuf.values.fill(+defaultValue);\n  }\n\n  for (let i = 0; i < numUpdates; i++) {\n    const index = [];\n    let flattenIndex = 0;\n\n    for (let j = 0; j < sliceRank; j++) {\n      const dim = indicesData[i * sliceRank + j];\n      index.push(dim);\n      flattenIndex += dim * strides[j];\n    }\n\n    if (flattenIndex < 0 || flattenIndex >= outputSize / sliceSize) {\n      throw new Error(`Invalid indices: ${index} does not index into ${shape}`);\n    }\n\n    for (let k = 0; k < sliceSize; k++) {\n      if (sumDupeIndices) {\n        outBuf.values[flattenIndex * sliceSize + k] += updatesData[i * sliceSize + k];\n      } else {\n        outBuf.values[flattenIndex * sliceSize + k] = updates.rank === 0 ? updatesData[0] : updatesData[i * sliceSize + k];\n      }\n    }\n  }\n\n  return outBuf;\n}","map":{"version":3,"names":["buffer","scatterImpl","indices","updates","shape","outputSize","sliceSize","numUpdates","sliceRank","strides","defaultValue","sumDupeIndices","flattenShape","indicesData","values","updatesData","dtype","outBuf","fill","i","index","flattenIndex","j","dim","push","Error","k","rank"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/Scatter_impl.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer } from '@tensorflow/tfjs-core';\nexport function scatterImpl(indices, updates, shape, outputSize, sliceSize, numUpdates, sliceRank, strides, defaultValue, sumDupeIndices) {\n    const flattenShape = [outputSize / sliceSize, sliceSize];\n    const indicesData = indices.values;\n    const updatesData = updates.values;\n    if (outputSize === 0) {\n        return buffer(shape, updates.dtype);\n    }\n    const outBuf = buffer(flattenShape, updates.dtype);\n    if (typeof defaultValue === 'string') {\n        outBuf.values.fill(defaultValue);\n    }\n    else if (typeof defaultValue === 'number') {\n        outBuf.values.fill(defaultValue);\n    }\n    else if (typeof defaultValue === 'boolean') {\n        outBuf.values.fill(+defaultValue);\n    }\n    for (let i = 0; i < numUpdates; i++) {\n        const index = [];\n        let flattenIndex = 0;\n        for (let j = 0; j < sliceRank; j++) {\n            const dim = indicesData[i * sliceRank + j];\n            index.push(dim);\n            flattenIndex += dim * strides[j];\n        }\n        if (flattenIndex < 0 || flattenIndex >= outputSize / sliceSize) {\n            throw new Error(`Invalid indices: ${index} does not index into ${shape}`);\n        }\n        for (let k = 0; k < sliceSize; k++) {\n            if (sumDupeIndices) {\n                outBuf.values[flattenIndex * sliceSize + k] +=\n                    updatesData[i * sliceSize + k];\n            }\n            else {\n                outBuf.values[flattenIndex * sliceSize + k] = updates.rank === 0 ?\n                    updatesData[0] :\n                    updatesData[i * sliceSize + k];\n            }\n        }\n    }\n    return outBuf;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAT,QAAuB,uBAAvB;AACA,OAAO,SAASC,WAAT,CAAqBC,OAArB,EAA8BC,OAA9B,EAAuCC,KAAvC,EAA8CC,UAA9C,EAA0DC,SAA1D,EAAqEC,UAArE,EAAiFC,SAAjF,EAA4FC,OAA5F,EAAqGC,YAArG,EAAmHC,cAAnH,EAAmI;EACtI,MAAMC,YAAY,GAAG,CAACP,UAAU,GAAGC,SAAd,EAAyBA,SAAzB,CAArB;EACA,MAAMO,WAAW,GAAGX,OAAO,CAACY,MAA5B;EACA,MAAMC,WAAW,GAAGZ,OAAO,CAACW,MAA5B;;EACA,IAAIT,UAAU,KAAK,CAAnB,EAAsB;IAClB,OAAOL,MAAM,CAACI,KAAD,EAAQD,OAAO,CAACa,KAAhB,CAAb;EACH;;EACD,MAAMC,MAAM,GAAGjB,MAAM,CAACY,YAAD,EAAeT,OAAO,CAACa,KAAvB,CAArB;;EACA,IAAI,OAAON,YAAP,KAAwB,QAA5B,EAAsC;IAClCO,MAAM,CAACH,MAAP,CAAcI,IAAd,CAAmBR,YAAnB;EACH,CAFD,MAGK,IAAI,OAAOA,YAAP,KAAwB,QAA5B,EAAsC;IACvCO,MAAM,CAACH,MAAP,CAAcI,IAAd,CAAmBR,YAAnB;EACH,CAFI,MAGA,IAAI,OAAOA,YAAP,KAAwB,SAA5B,EAAuC;IACxCO,MAAM,CAACH,MAAP,CAAcI,IAAd,CAAmB,CAACR,YAApB;EACH;;EACD,KAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,UAApB,EAAgCY,CAAC,EAAjC,EAAqC;IACjC,MAAMC,KAAK,GAAG,EAAd;IACA,IAAIC,YAAY,GAAG,CAAnB;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,SAApB,EAA+Bc,CAAC,EAAhC,EAAoC;MAChC,MAAMC,GAAG,GAAGV,WAAW,CAACM,CAAC,GAAGX,SAAJ,GAAgBc,CAAjB,CAAvB;MACAF,KAAK,CAACI,IAAN,CAAWD,GAAX;MACAF,YAAY,IAAIE,GAAG,GAAGd,OAAO,CAACa,CAAD,CAA7B;IACH;;IACD,IAAID,YAAY,GAAG,CAAf,IAAoBA,YAAY,IAAIhB,UAAU,GAAGC,SAArD,EAAgE;MAC5D,MAAM,IAAImB,KAAJ,CAAW,oBAAmBL,KAAM,wBAAuBhB,KAAM,EAAjE,CAAN;IACH;;IACD,KAAK,IAAIsB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpB,SAApB,EAA+BoB,CAAC,EAAhC,EAAoC;MAChC,IAAIf,cAAJ,EAAoB;QAChBM,MAAM,CAACH,MAAP,CAAcO,YAAY,GAAGf,SAAf,GAA2BoB,CAAzC,KACIX,WAAW,CAACI,CAAC,GAAGb,SAAJ,GAAgBoB,CAAjB,CADf;MAEH,CAHD,MAIK;QACDT,MAAM,CAACH,MAAP,CAAcO,YAAY,GAAGf,SAAf,GAA2BoB,CAAzC,IAA8CvB,OAAO,CAACwB,IAAR,KAAiB,CAAjB,GAC1CZ,WAAW,CAAC,CAAD,CAD+B,GAE1CA,WAAW,CAACI,CAAC,GAAGb,SAAJ,GAAgBoB,CAAjB,CAFf;MAGH;IACJ;EACJ;;EACD,OAAOT,MAAP;AACH"},"metadata":{},"sourceType":"module"}