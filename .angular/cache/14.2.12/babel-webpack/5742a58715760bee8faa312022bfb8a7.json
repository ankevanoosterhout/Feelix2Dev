{"ast":null,"code":"/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, BroadcastArgs } from '@tensorflow/tfjs-core';\nexport function broadcastArgs(args) {\n  const {\n    inputs,\n    backend\n  } = args;\n  const {\n    s0,\n    s1\n  } = inputs;\n  const s0Vals = backend.readSync(s0.dataId);\n  const s1Vals = backend.readSync(s1.dataId);\n  const broadcastShape = backend_util.assertAndGetBroadcastShape(Array.from(s0Vals), Array.from(s1Vals));\n  return backend.makeTensorInfo([broadcastShape.length], 'int32', Int32Array.from(broadcastShape));\n}\nexport const broadcastArgsConfig = {\n  kernelName: BroadcastArgs,\n  backendName: 'webgl',\n  kernelFunc: broadcastArgs\n};","map":{"version":3,"names":["backend_util","BroadcastArgs","broadcastArgs","args","inputs","backend","s0","s1","s0Vals","readSync","dataId","s1Vals","broadcastShape","assertAndGetBroadcastShape","Array","from","makeTensorInfo","length","Int32Array","broadcastArgsConfig","kernelName","backendName","kernelFunc"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/BroadcastArgs.js"],"sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, BroadcastArgs } from '@tensorflow/tfjs-core';\nexport function broadcastArgs(args) {\n    const { inputs, backend } = args;\n    const { s0, s1 } = inputs;\n    const s0Vals = backend.readSync(s0.dataId);\n    const s1Vals = backend.readSync(s1.dataId);\n    const broadcastShape = backend_util.assertAndGetBroadcastShape(Array.from(s0Vals), Array.from(s1Vals));\n    return backend.makeTensorInfo([broadcastShape.length], 'int32', Int32Array.from(broadcastShape));\n}\nexport const broadcastArgsConfig = {\n    kernelName: BroadcastArgs,\n    backendName: 'webgl',\n    kernelFunc: broadcastArgs\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,uBAA5C;AACA,OAAO,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;EAChC,MAAM;IAAEC,MAAF;IAAUC;EAAV,IAAsBF,IAA5B;EACA,MAAM;IAAEG,EAAF;IAAMC;EAAN,IAAaH,MAAnB;EACA,MAAMI,MAAM,GAAGH,OAAO,CAACI,QAAR,CAAiBH,EAAE,CAACI,MAApB,CAAf;EACA,MAAMC,MAAM,GAAGN,OAAO,CAACI,QAAR,CAAiBF,EAAE,CAACG,MAApB,CAAf;EACA,MAAME,cAAc,GAAGZ,YAAY,CAACa,0BAAb,CAAwCC,KAAK,CAACC,IAAN,CAAWP,MAAX,CAAxC,EAA4DM,KAAK,CAACC,IAAN,CAAWJ,MAAX,CAA5D,CAAvB;EACA,OAAON,OAAO,CAACW,cAAR,CAAuB,CAACJ,cAAc,CAACK,MAAhB,CAAvB,EAAgD,OAAhD,EAAyDC,UAAU,CAACH,IAAX,CAAgBH,cAAhB,CAAzD,CAAP;AACH;AACD,OAAO,MAAMO,mBAAmB,GAAG;EAC/BC,UAAU,EAAEnB,aADmB;EAE/BoB,WAAW,EAAE,OAFkB;EAG/BC,UAAU,EAAEpB;AAHmB,CAA5B"},"metadata":{},"sourceType":"module"}