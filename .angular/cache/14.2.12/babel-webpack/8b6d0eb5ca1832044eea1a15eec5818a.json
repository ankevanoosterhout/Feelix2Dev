{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, GatherV2, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { gatherV2Impl } from './GatherV2_impl';\nimport { reshape } from './Reshape';\nexport function gatherV2(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x,\n    indices\n  } = inputs;\n  const {\n    axis,\n    batchDims\n  } = attrs;\n  assertNotComplex([x, indices], 'gatherV2'); // Throw error when any index is out of bound.\n\n  const parsedAxis = util.parseAxisParam(axis, x.shape)[0];\n  const indicesVals = backend.data.get(indices.dataId).values;\n  const axisDim = x.shape[parsedAxis];\n\n  for (let i = 0; i < indicesVals.length; ++i) {\n    const index = indicesVals[i];\n    util.assert(index <= axisDim - 1 && index >= 0, () => `GatherV2: the index value ${index} is not in [0, ${axisDim - 1}]`);\n  }\n\n  let $batchDims = batchDims;\n\n  if (batchDims == null) {\n    $batchDims = 0;\n  }\n\n  const indicesSize = util.sizeFromShape(indices.shape);\n  const shapeInfo = backend_util.segment_util.collectGatherOpShapeInfo(x, indices, parsedAxis, $batchDims);\n  const flattenX = reshape({\n    inputs: {\n      x\n    },\n    backend,\n    attrs: {\n      shape: [shapeInfo.batchSize, shapeInfo.outerSize, shapeInfo.dimSize, shapeInfo.sliceSize]\n    }\n  });\n  const flattenIndex = reshape({\n    inputs: {\n      x: indices\n    },\n    backend,\n    attrs: {\n      shape: [shapeInfo.batchSize, indicesSize / shapeInfo.batchSize]\n    }\n  });\n  const flattenOutputShape = [shapeInfo.batchSize, shapeInfo.outerSize, indicesSize / shapeInfo.batchSize, shapeInfo.sliceSize];\n  const indicesBuf = backend.bufferSync(flattenIndex);\n  const xBuf = backend.bufferSync(flattenX);\n  const outBuf = gatherV2Impl(xBuf, indicesBuf, flattenOutputShape);\n  backend.disposeIntermediateTensorInfo(flattenX);\n  backend.disposeIntermediateTensorInfo(flattenIndex);\n  return backend.makeTensorInfo(shapeInfo.outputShape, outBuf.dtype, outBuf.values);\n}\nexport const gatherV2Config = {\n  kernelName: GatherV2,\n  backendName: 'cpu',\n  kernelFunc: gatherV2\n};","map":{"version":3,"names":["backend_util","GatherV2","util","assertNotComplex","gatherV2Impl","reshape","gatherV2","args","inputs","backend","attrs","x","indices","axis","batchDims","parsedAxis","parseAxisParam","shape","indicesVals","data","get","dataId","values","axisDim","i","length","index","assert","$batchDims","indicesSize","sizeFromShape","shapeInfo","segment_util","collectGatherOpShapeInfo","flattenX","batchSize","outerSize","dimSize","sliceSize","flattenIndex","flattenOutputShape","indicesBuf","bufferSync","xBuf","outBuf","disposeIntermediateTensorInfo","makeTensorInfo","outputShape","dtype","gatherV2Config","kernelName","backendName","kernelFunc"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/GatherV2.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, GatherV2, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { gatherV2Impl } from './GatherV2_impl';\nimport { reshape } from './Reshape';\nexport function gatherV2(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, indices } = inputs;\n    const { axis, batchDims } = attrs;\n    assertNotComplex([x, indices], 'gatherV2');\n    // Throw error when any index is out of bound.\n    const parsedAxis = util.parseAxisParam(axis, x.shape)[0];\n    const indicesVals = backend.data.get(indices.dataId).values;\n    const axisDim = x.shape[parsedAxis];\n    for (let i = 0; i < indicesVals.length; ++i) {\n        const index = indicesVals[i];\n        util.assert(index <= axisDim - 1 && index >= 0, () => `GatherV2: the index value ${index} is not in [0, ${axisDim - 1}]`);\n    }\n    let $batchDims = batchDims;\n    if (batchDims == null) {\n        $batchDims = 0;\n    }\n    const indicesSize = util.sizeFromShape(indices.shape);\n    const shapeInfo = backend_util.segment_util.collectGatherOpShapeInfo(x, indices, parsedAxis, $batchDims);\n    const flattenX = reshape({\n        inputs: { x },\n        backend,\n        attrs: {\n            shape: [\n                shapeInfo.batchSize, shapeInfo.outerSize, shapeInfo.dimSize,\n                shapeInfo.sliceSize\n            ]\n        }\n    });\n    const flattenIndex = reshape({\n        inputs: { x: indices },\n        backend,\n        attrs: { shape: [shapeInfo.batchSize, indicesSize / shapeInfo.batchSize] }\n    });\n    const flattenOutputShape = [\n        shapeInfo.batchSize, shapeInfo.outerSize, indicesSize / shapeInfo.batchSize,\n        shapeInfo.sliceSize\n    ];\n    const indicesBuf = backend.bufferSync(flattenIndex);\n    const xBuf = backend.bufferSync(flattenX);\n    const outBuf = gatherV2Impl(xBuf, indicesBuf, flattenOutputShape);\n    backend.disposeIntermediateTensorInfo(flattenX);\n    backend.disposeIntermediateTensorInfo(flattenIndex);\n    return backend.makeTensorInfo(shapeInfo.outputShape, outBuf.dtype, outBuf.values);\n}\nexport const gatherV2Config = {\n    kernelName: GatherV2,\n    backendName: 'cpu',\n    kernelFunc: gatherV2\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}