{"ast":null,"code":"/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { RaggedGather } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\n\nfunction raggedGather_(paramsNestedSplits, paramsDenseValues, indices, outputRaggedRank) {\n  const $paramsNestedSplits = paramsNestedSplits.map((t, i) => convertToTensor(t, `tensors${i}`, 'raggedGather', 'int32'));\n  const $paramsDenseValues = convertToTensor(paramsDenseValues, 'paramsDenseValues', 'raggedGather');\n  const $indices = convertToTensor(indices, 'indices', 'raggedGather', 'int32');\n  const inputs = {\n    paramsNestedSplits: $paramsNestedSplits,\n    paramsDenseValues: $paramsDenseValues,\n    indices: $indices\n  };\n  const attrs = {\n    outputRaggedRank\n  };\n  const result = ENGINE.runKernel(RaggedGather, inputs, attrs);\n  return {\n    outputNestedSplits: result.slice(0, result.length - 1),\n    outputDenseValues: result[result.length - 1]\n  };\n}\n\nexport const raggedGather = op({\n  raggedGather_\n});","map":{"version":3,"names":["ENGINE","RaggedGather","convertToTensor","op","raggedGather_","paramsNestedSplits","paramsDenseValues","indices","outputRaggedRank","$paramsNestedSplits","map","t","i","$paramsDenseValues","$indices","inputs","attrs","result","runKernel","outputNestedSplits","slice","length","outputDenseValues","raggedGather"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-core/dist/ops/ragged_gather.js"],"sourcesContent":["/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { RaggedGather } from '../kernel_names';\nimport { convertToTensor } from '../tensor_util_env';\nimport { op } from './operation';\nfunction raggedGather_(paramsNestedSplits, paramsDenseValues, indices, outputRaggedRank) {\n    const $paramsNestedSplits = paramsNestedSplits.map((t, i) => convertToTensor(t, `tensors${i}`, 'raggedGather', 'int32'));\n    const $paramsDenseValues = convertToTensor(paramsDenseValues, 'paramsDenseValues', 'raggedGather');\n    const $indices = convertToTensor(indices, 'indices', 'raggedGather', 'int32');\n    const inputs = {\n        paramsNestedSplits: $paramsNestedSplits,\n        paramsDenseValues: $paramsDenseValues,\n        indices: $indices,\n    };\n    const attrs = { outputRaggedRank };\n    const result = ENGINE.runKernel(RaggedGather, inputs, attrs);\n    return {\n        outputNestedSplits: result.slice(0, result.length - 1),\n        outputDenseValues: result[result.length - 1],\n    };\n}\nexport const raggedGather = op({ raggedGather_ });\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAT,QAAuB,WAAvB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,EAAT,QAAmB,aAAnB;;AACA,SAASC,aAAT,CAAuBC,kBAAvB,EAA2CC,iBAA3C,EAA8DC,OAA9D,EAAuEC,gBAAvE,EAAyF;EACrF,MAAMC,mBAAmB,GAAGJ,kBAAkB,CAACK,GAAnB,CAAuB,CAACC,CAAD,EAAIC,CAAJ,KAAUV,eAAe,CAACS,CAAD,EAAK,UAASC,CAAE,EAAhB,EAAmB,cAAnB,EAAmC,OAAnC,CAAhD,CAA5B;EACA,MAAMC,kBAAkB,GAAGX,eAAe,CAACI,iBAAD,EAAoB,mBAApB,EAAyC,cAAzC,CAA1C;EACA,MAAMQ,QAAQ,GAAGZ,eAAe,CAACK,OAAD,EAAU,SAAV,EAAqB,cAArB,EAAqC,OAArC,CAAhC;EACA,MAAMQ,MAAM,GAAG;IACXV,kBAAkB,EAAEI,mBADT;IAEXH,iBAAiB,EAAEO,kBAFR;IAGXN,OAAO,EAAEO;EAHE,CAAf;EAKA,MAAME,KAAK,GAAG;IAAER;EAAF,CAAd;EACA,MAAMS,MAAM,GAAGjB,MAAM,CAACkB,SAAP,CAAiBjB,YAAjB,EAA+Bc,MAA/B,EAAuCC,KAAvC,CAAf;EACA,OAAO;IACHG,kBAAkB,EAAEF,MAAM,CAACG,KAAP,CAAa,CAAb,EAAgBH,MAAM,CAACI,MAAP,GAAgB,CAAhC,CADjB;IAEHC,iBAAiB,EAAEL,MAAM,CAACA,MAAM,CAACI,MAAP,GAAgB,CAAjB;EAFtB,CAAP;AAIH;;AACD,OAAO,MAAME,YAAY,GAAGpB,EAAE,CAAC;EAAEC;AAAF,CAAD,CAAvB"},"metadata":{},"sourceType":"module"}