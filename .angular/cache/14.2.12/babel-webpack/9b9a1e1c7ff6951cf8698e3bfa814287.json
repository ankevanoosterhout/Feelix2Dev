{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer } from '@tensorflow/tfjs-core';\nexport function stridedSliceImpl(outShape, xBuf, strides, begin) {\n  const outBuf = buffer(outShape, xBuf.dtype);\n\n  for (let i = 0; i < outBuf.size; i++) {\n    const loc = outBuf.indexToLoc(i);\n    const newLoc = new Array(loc.length);\n\n    for (let j = 0; j < newLoc.length; j++) {\n      newLoc[j] = loc[j] * strides[j] + begin[j];\n    }\n\n    outBuf.set(xBuf.get(...newLoc), ...loc);\n  }\n\n  return outBuf;\n}","map":{"version":3,"names":["buffer","stridedSliceImpl","outShape","xBuf","strides","begin","outBuf","dtype","i","size","loc","indexToLoc","newLoc","Array","length","j","set","get"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-cpu/dist/kernels/StridedSlice_impl.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { buffer } from '@tensorflow/tfjs-core';\nexport function stridedSliceImpl(outShape, xBuf, strides, begin) {\n    const outBuf = buffer(outShape, xBuf.dtype);\n    for (let i = 0; i < outBuf.size; i++) {\n        const loc = outBuf.indexToLoc(i);\n        const newLoc = new Array(loc.length);\n        for (let j = 0; j < newLoc.length; j++) {\n            newLoc[j] = loc[j] * strides[j] + begin[j];\n        }\n        outBuf.set(xBuf.get(...newLoc), ...loc);\n    }\n    return outBuf;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAT,QAAuB,uBAAvB;AACA,OAAO,SAASC,gBAAT,CAA0BC,QAA1B,EAAoCC,IAApC,EAA0CC,OAA1C,EAAmDC,KAAnD,EAA0D;EAC7D,MAAMC,MAAM,GAAGN,MAAM,CAACE,QAAD,EAAWC,IAAI,CAACI,KAAhB,CAArB;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACG,IAA3B,EAAiCD,CAAC,EAAlC,EAAsC;IAClC,MAAME,GAAG,GAAGJ,MAAM,CAACK,UAAP,CAAkBH,CAAlB,CAAZ;IACA,MAAMI,MAAM,GAAG,IAAIC,KAAJ,CAAUH,GAAG,CAACI,MAAd,CAAf;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAAM,CAACE,MAA3B,EAAmCC,CAAC,EAApC,EAAwC;MACpCH,MAAM,CAACG,CAAD,CAAN,GAAYL,GAAG,CAACK,CAAD,CAAH,GAASX,OAAO,CAACW,CAAD,CAAhB,GAAsBV,KAAK,CAACU,CAAD,CAAvC;IACH;;IACDT,MAAM,CAACU,GAAP,CAAWb,IAAI,CAACc,GAAL,CAAS,GAAGL,MAAZ,CAAX,EAAgC,GAAGF,GAAnC;EACH;;EACD,OAAOJ,MAAP;AACH"},"metadata":{},"sourceType":"module"}