{"ast":null,"code":"import { mat } from './utils/matrix.js';\n\nclass FixedMatrixPool {\n  constructor(row, col) {\n    const matrices = [];\n    let index = 0;\n\n    this.get = function () {\n      let matrix = matrices[index];\n\n      if (!matrix) {\n        matrices[index] = matrix = mat.create(row, col);\n      }\n\n      index++;\n      return matrix;\n    };\n\n    this.releaseAll = function () {\n      index = 0;\n    };\n  }\n\n}\n\nexport class MatrixPool {\n  constructor() {\n    const pools = {};\n    const poolArray = [];\n\n    this.get = function (row, col) {\n      let colPools = pools[row];\n\n      if (!colPools) {\n        colPools = pools[row] = {};\n      }\n\n      let pool = colPools[col];\n\n      if (!pool) {\n        pool = colPools[col] = new FixedMatrixPool(row, col);\n        poolArray.push(pool);\n      }\n\n      return pool.get();\n    };\n\n    this.releaseAll = function () {\n      for (let i = 0, l = poolArray.length; i < l; i++) {\n        poolArray[i].releaseAll();\n      }\n    };\n  }\n\n}","map":{"version":3,"names":["mat","FixedMatrixPool","constructor","row","col","matrices","index","get","matrix","create","releaseAll","MatrixPool","pools","poolArray","colPools","pool","push","i","l","length"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/closed-chain-ik/src/core/MatrixPool.js"],"sourcesContent":["import { mat } from './utils/matrix.js';\r\n\r\nclass FixedMatrixPool {\r\n\r\n\tconstructor( row, col ) {\r\n\r\n\t\tconst matrices = [];\r\n\t\tlet index = 0;\r\n\r\n\t\tthis.get = function () {\r\n\r\n\t\t\tlet matrix = matrices[ index ];\r\n\t\t\tif ( ! matrix ) {\r\n\r\n\t\t\t\tmatrices[ index ] = matrix = mat.create( row, col );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tindex ++;\r\n\t\t\treturn matrix;\r\n\r\n\t\t};\r\n\r\n\t\tthis.releaseAll = function () {\r\n\r\n\t\t\tindex = 0;\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport class MatrixPool {\r\n\r\n\tconstructor() {\r\n\r\n\t\tconst pools = {};\r\n\t\tconst poolArray = [];\r\n\t\tthis.get = function ( row, col ) {\r\n\r\n\t\t\tlet colPools = pools[ row ];\r\n\t\t\tif ( ! colPools ) {\r\n\r\n\t\t\t\tcolPools = pools[ row ] = {};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet pool = colPools[ col ];\r\n\t\t\tif ( ! pool ) {\r\n\r\n\t\t\t\tpool = colPools[ col ] = new FixedMatrixPool( row, col );\r\n\t\t\t\tpoolArray.push( pool );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn pool.get();\r\n\r\n\t\t};\r\n\r\n\t\tthis.releaseAll = function () {\r\n\r\n\t\t\tfor ( let i = 0, l = poolArray.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tpoolArray[ i ].releaseAll();\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n}\r\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,mBAApB;;AAEA,MAAMC,eAAN,CAAsB;EAErBC,WAAW,CAAEC,GAAF,EAAOC,GAAP,EAAa;IAEvB,MAAMC,QAAQ,GAAG,EAAjB;IACA,IAAIC,KAAK,GAAG,CAAZ;;IAEA,KAAKC,GAAL,GAAW,YAAY;MAEtB,IAAIC,MAAM,GAAGH,QAAQ,CAAEC,KAAF,CAArB;;MACA,IAAK,CAAEE,MAAP,EAAgB;QAEfH,QAAQ,CAAEC,KAAF,CAAR,GAAoBE,MAAM,GAAGR,GAAG,CAACS,MAAJ,CAAYN,GAAZ,EAAiBC,GAAjB,CAA7B;MAEA;;MAEDE,KAAK;MACL,OAAOE,MAAP;IAEA,CAZD;;IAcA,KAAKE,UAAL,GAAkB,YAAY;MAE7BJ,KAAK,GAAG,CAAR;IAEA,CAJD;EAMA;;AA3BoB;;AA+BtB,OAAO,MAAMK,UAAN,CAAiB;EAEvBT,WAAW,GAAG;IAEb,MAAMU,KAAK,GAAG,EAAd;IACA,MAAMC,SAAS,GAAG,EAAlB;;IACA,KAAKN,GAAL,GAAW,UAAWJ,GAAX,EAAgBC,GAAhB,EAAsB;MAEhC,IAAIU,QAAQ,GAAGF,KAAK,CAAET,GAAF,CAApB;;MACA,IAAK,CAAEW,QAAP,EAAkB;QAEjBA,QAAQ,GAAGF,KAAK,CAAET,GAAF,CAAL,GAAe,EAA1B;MAEA;;MAED,IAAIY,IAAI,GAAGD,QAAQ,CAAEV,GAAF,CAAnB;;MACA,IAAK,CAAEW,IAAP,EAAc;QAEbA,IAAI,GAAGD,QAAQ,CAAEV,GAAF,CAAR,GAAkB,IAAIH,eAAJ,CAAqBE,GAArB,EAA0BC,GAA1B,CAAzB;QACAS,SAAS,CAACG,IAAV,CAAgBD,IAAhB;MAEA;;MAED,OAAOA,IAAI,CAACR,GAAL,EAAP;IAEA,CAnBD;;IAqBA,KAAKG,UAAL,GAAkB,YAAY;MAE7B,KAAM,IAAIO,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGL,SAAS,CAACM,MAA/B,EAAuCF,CAAC,GAAGC,CAA3C,EAA8CD,CAAC,EAA/C,EAAqD;QAEpDJ,SAAS,CAAEI,CAAF,CAAT,CAAeP,UAAf;MAEA;IAED,CARD;EAUA;;AArCsB"},"metadata":{},"sourceType":"module"}