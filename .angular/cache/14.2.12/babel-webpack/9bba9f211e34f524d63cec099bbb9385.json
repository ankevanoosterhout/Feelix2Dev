{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Dilation2D } from '@tensorflow/tfjs-core';\nimport { Dilation2DProgram } from '../dilation_gpu';\nimport { reshape } from './Reshape';\nexport function dilation2D(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x,\n    filter\n  } = inputs;\n  const {\n    strides,\n    pad,\n    dilations\n  } = attrs;\n  const convInfo = backend_util.computeDilation2DInfo(x.shape, filter.shape, strides, pad, 'NHWC'\n  /* dataFormat */\n  , dilations);\n  let out;\n  const program = new Dilation2DProgram(convInfo);\n  out = backend.runWebGLProgram(program, [x, filter], 'float32');\n  const outReshaped = reshape({\n    inputs: {\n      x: out\n    },\n    backend,\n    attrs: {\n      shape: convInfo.outShape\n    }\n  });\n  backend.disposeIntermediateTensorInfo(out);\n  return outReshaped;\n}\nexport const dilation2DConfig = {\n  kernelName: Dilation2D,\n  backendName: 'webgl',\n  kernelFunc: dilation2D\n};","map":{"version":3,"names":["backend_util","Dilation2D","Dilation2DProgram","reshape","dilation2D","args","inputs","backend","attrs","x","filter","strides","pad","dilations","convInfo","computeDilation2DInfo","shape","out","program","runWebGLProgram","outReshaped","outShape","disposeIntermediateTensorInfo","dilation2DConfig","kernelName","backendName","kernelFunc"],"sources":["C:/Users/Anke/Documents/Feelix documents/Feelix2.0-dev/Feelix v2/node_modules/@tensorflow/tfjs-backend-webgl/dist/kernels/Dilation2D.js"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Dilation2D } from '@tensorflow/tfjs-core';\nimport { Dilation2DProgram } from '../dilation_gpu';\nimport { reshape } from './Reshape';\nexport function dilation2D(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, filter } = inputs;\n    const { strides, pad, dilations } = attrs;\n    const convInfo = backend_util.computeDilation2DInfo(x.shape, filter.shape, strides, pad, 'NHWC' /* dataFormat */, dilations);\n    let out;\n    const program = new Dilation2DProgram(convInfo);\n    out = backend.runWebGLProgram(program, [x, filter], 'float32');\n    const outReshaped = reshape({ inputs: { x: out }, backend, attrs: { shape: convInfo.outShape } });\n    backend.disposeIntermediateTensorInfo(out);\n    return outReshaped;\n}\nexport const dilation2DConfig = {\n    kernelName: Dilation2D,\n    backendName: 'webgl',\n    kernelFunc: dilation2D,\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAT,EAAuBC,UAAvB,QAAyC,uBAAzC;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAO,SAASC,UAAT,CAAoBC,IAApB,EAA0B;EAC7B,MAAM;IAAEC,MAAF;IAAUC,OAAV;IAAmBC;EAAnB,IAA6BH,IAAnC;EACA,MAAM;IAAEI,CAAF;IAAKC;EAAL,IAAgBJ,MAAtB;EACA,MAAM;IAAEK,OAAF;IAAWC,GAAX;IAAgBC;EAAhB,IAA8BL,KAApC;EACA,MAAMM,QAAQ,GAAGd,YAAY,CAACe,qBAAb,CAAmCN,CAAC,CAACO,KAArC,EAA4CN,MAAM,CAACM,KAAnD,EAA0DL,OAA1D,EAAmEC,GAAnE,EAAwE;EAAO;EAA/E,EAAiGC,SAAjG,CAAjB;EACA,IAAII,GAAJ;EACA,MAAMC,OAAO,GAAG,IAAIhB,iBAAJ,CAAsBY,QAAtB,CAAhB;EACAG,GAAG,GAAGV,OAAO,CAACY,eAAR,CAAwBD,OAAxB,EAAiC,CAACT,CAAD,EAAIC,MAAJ,CAAjC,EAA8C,SAA9C,CAAN;EACA,MAAMU,WAAW,GAAGjB,OAAO,CAAC;IAAEG,MAAM,EAAE;MAAEG,CAAC,EAAEQ;IAAL,CAAV;IAAsBV,OAAtB;IAA+BC,KAAK,EAAE;MAAEQ,KAAK,EAAEF,QAAQ,CAACO;IAAlB;EAAtC,CAAD,CAA3B;EACAd,OAAO,CAACe,6BAAR,CAAsCL,GAAtC;EACA,OAAOG,WAAP;AACH;AACD,OAAO,MAAMG,gBAAgB,GAAG;EAC5BC,UAAU,EAAEvB,UADgB;EAE5BwB,WAAW,EAAE,OAFe;EAG5BC,UAAU,EAAEtB;AAHgB,CAAzB"},"metadata":{},"sourceType":"module"}